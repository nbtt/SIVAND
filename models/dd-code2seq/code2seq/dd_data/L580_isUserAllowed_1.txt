
path = /Users/lap13494/workspace/ppl-extra-final/java-small/test/hadoop-splitted/AccessControlList_isUserAllowed_0.java
method_name = isUserAllowed
method_body = public boolean isUserAllowed(UserGroupInformation ugi) { if (allAllowed || users.contains(ugi.getShortUserName())) { return true; } else { for (String group : ugi.getGroupNames()) { if (groups.contains(group)) { return true; } } } return false; }
predict, score, loss = isUserAllowed, 0.3816225528717041, 5.3372883796691895

Trace of simplified code(s):
{"time": "2023-09-24 01:51:32.704572", "score": "0.3816", "loss": "5.3373", "code": "public boolean isUserAllowed(UserGroupInformation ugi) { if (allAllowed || users.contains(ugi.getShortUserName())) { return true; } else { for (String group : ugi.getGroupNames()) { if (groups.contains(group)) { return true; } } } return false; }", "n_tokens": 94, "n_pass": [1, 1, 1]}
{"time": "2023-09-24 01:51:38.684072", "score": "0.3778", "loss": "5.3197", "code": "public boolean isUserAllowed(UserGroupInformation ugi) { if (allAllowed || users.contains(ugi.getShortUserName())) { return true; for (String group : ugi.getGroupNames()) { if (groups.contains(group)) { return true; } } } return false; }", "n_tokens": 88, "n_pass": [51, 4, 2]}
{"time": "2023-09-24 01:51:46.114189", "score": "0.3824", "loss": "5.3038", "code": "public boolean isUserAllowed(UserGroupInformation ugi) { if (allAllowed || users.contains(ugi.getShortUserName())) { return true; for (String group : ugi.getGroupNames()) { if (groups.contains(group)) {true; } } } return false; }", "n_tokens": 85, "n_pass": [106, 8, 3]}
{"time": "2023-09-24 01:51:47.996943", "score": "0.3625", "loss": "5.4796", "code": "public boolean isUserAllowed(UserGroupInformation ugi) { if (allAllowed || users.contains(ugi.getShortUserName())) { return true; for (String group : ugi.getGroupNames()) { if (groups.contains(group)) {true; } } } ; }", "n_tokens": 82, "n_pass": [109, 9, 4]}
{"time": "2023-09-24 01:51:49.888514", "score": "0.3625", "loss": "5.4796", "code": "boolean isUserAllowed(UserGroupInformation ugi) { if (allAllowed || users.contains(ugi.getShortUserName())) { return true; for (String group : ugi.getGroupNames()) { if (groups.contains(group)) {true; } } } ; }", "n_tokens": 80, "n_pass": [111, 10, 5]}
{"time": "2023-09-24 01:51:52.064065", "score": "0.3074", "loss": "5.8936", "code": "boolean isUserAllowed(UserGroupInformation ugi) { if (allAllowed || users.contains(ugi.getShortUserName())) {true; for (String group : ugi.getGroupNames()) { if (groups.contains(group)) {true; } } } ; }", "n_tokens": 77, "n_pass": [123, 11, 6]}
{"time": "2023-09-24 01:52:03.989496", "score": "0.3366", "loss": "5.5811", "code": "boolean isUserAllowed(UserGroupInformation ugi) { if (allAllowed || users.contains(ugigetShortUserName())) {true; for (String group : ugi.getGroupNames()) { if (groups.contains(group)) {true; } } } ; }", "n_tokens": 76, "n_pass": [204, 16, 7]}
{"time": "2023-09-24 01:52:05.698244", "score": "0.2848", "loss": "6.1395", "code": "boolean isUserAllowed(UserGroupInformation ugi) { if (allAllowed || users.contains(ugi())) {true; for (String group : ugi.getGroupNames()) { if (groups.contains(group)) {true; } } } ; }", "n_tokens": 75, "n_pass": [205, 17, 8]}
{"time": "2023-09-24 01:52:12.885464", "score": "0.2844", "loss": "6.1862", "code": "boolean isUserAllowed(UserGroupInformation ugi) { if (allAllowed || users.contains(ugi())) {true; for (String group : ugi.getGroupNames()) { if (groups.contains(group)) { } } } ; }", "n_tokens": 73, "n_pass": [226, 21, 9]}
{"time": "2023-09-24 01:52:14.590500", "score": "0.2844", "loss": "6.1862", "code": "boolean isUserAllowed(UserGroupInformation ugi) { if (allAllowed || users.contains(ugi())) {true; for (String group : ugi.getGroupNames()) { if (groups.contains(group)) { } } } }", "n_tokens": 71, "n_pass": [230, 22, 10]}
{"time": "2023-09-24 01:52:17.104117", "score": "0.2844", "loss": "6.1862", "code": "boolean isUserAllowed(UserGroupInformation ugi){ if (allAllowed || users.contains(ugi())) {true; for (String group : ugi.getGroupNames()) { if (groups.contains(group)) { } } } }", "n_tokens": 70, "n_pass": [240, 23, 11]}
{"time": "2023-09-24 01:52:18.804918", "score": "0.2844", "loss": "6.1862", "code": "boolean isUserAllowed(UserGroupInformation ugi){if (allAllowed || users.contains(ugi())) {true; for (String group : ugi.getGroupNames()) { if (groups.contains(group)) { } } } }", "n_tokens": 69, "n_pass": [242, 24, 12]}
{"time": "2023-09-24 01:52:20.635381", "score": "0.2844", "loss": "6.1862", "code": "boolean isUserAllowed(UserGroupInformation ugi){if(allAllowed || users.contains(ugi())) {true; for (String group : ugi.getGroupNames()) { if (groups.contains(group)) { } } } }", "n_tokens": 68, "n_pass": [244, 25, 13]}
{"time": "2023-09-24 01:52:22.306680", "score": "0.2844", "loss": "6.1862", "code": "boolean isUserAllowed(UserGroupInformation ugi){if(allAllowed|| users.contains(ugi())) {true; for (String group : ugi.getGroupNames()) { if (groups.contains(group)) { } } } }", "n_tokens": 67, "n_pass": [247, 26, 14]}
{"time": "2023-09-24 01:52:27.498879", "score": "0.2844", "loss": "6.1862", "code": "boolean isUserAllowed(UserGroupInformation ugi){if(allAllowed||users.contains(ugi())) {true; for (String group : ugi.getGroupNames()) { if (groups.contains(group)) { } } } }", "n_tokens": 66, "n_pass": [250, 29, 15]}
{"time": "2023-09-24 01:52:45.577147", "score": "0.2844", "loss": "6.1862", "code": "boolean isUserAllowed(UserGroupInformation ugi){if(allAllowed||users.contains(ugi())){true; for (String group : ugi.getGroupNames()) { if (groups.contains(group)) { } } } }", "n_tokens": 65, "n_pass": [342, 36, 16]}
{"time": "2023-09-24 01:52:49.125661", "score": "0.2844", "loss": "6.1862", "code": "boolean isUserAllowed(UserGroupInformation ugi){if(allAllowed||users.contains(ugi())){true;for (String group : ugi.getGroupNames()) { if (groups.contains(group)) { } } } }", "n_tokens": 64, "n_pass": [346, 38, 17]}
{"time": "2023-09-24 01:52:50.911603", "score": "0.2844", "loss": "6.1862", "code": "boolean isUserAllowed(UserGroupInformation ugi){if(allAllowed||users.contains(ugi())){true;for(String group : ugi.getGroupNames()) { if (groups.contains(group)) { } } } }", "n_tokens": 63, "n_pass": [348, 39, 18]}
{"time": "2023-09-24 01:52:52.685057", "score": "0.2844", "loss": "6.1862", "code": "boolean isUserAllowed(UserGroupInformation ugi){if(allAllowed||users.contains(ugi())){true;for(String group: ugi.getGroupNames()) { if (groups.contains(group)) { } } } }", "n_tokens": 62, "n_pass": [353, 40, 19]}
{"time": "2023-09-24 01:52:54.376656", "score": "0.2844", "loss": "6.1862", "code": "boolean isUserAllowed(UserGroupInformation ugi){if(allAllowed||users.contains(ugi())){true;for(String group:ugi.getGroupNames()) { if (groups.contains(group)) { } } } }", "n_tokens": 61, "n_pass": [355, 41, 20]}
{"time": "2023-09-24 01:52:57.905016", "score": "0.2844", "loss": "6.1862", "code": "boolean isUserAllowed(UserGroupInformation ugi){if(allAllowed||users.contains(ugi())){true;for(String group:ugi.getGroupNames()){ if (groups.contains(group)) { } } } }", "n_tokens": 60, "n_pass": [362, 43, 21]}
{"time": "2023-09-24 01:52:59.689969", "score": "0.2844", "loss": "6.1862", "code": "boolean isUserAllowed(UserGroupInformation ugi){if(allAllowed||users.contains(ugi())){true;for(String group:ugi.getGroupNames()){if (groups.contains(group)) { } } } }", "n_tokens": 59, "n_pass": [364, 44, 22]}
{"time": "2023-09-24 01:53:01.398042", "score": "0.2844", "loss": "6.1862", "code": "boolean isUserAllowed(UserGroupInformation ugi){if(allAllowed||users.contains(ugi())){true;for(String group:ugi.getGroupNames()){if(groups.contains(group)) { } } } }", "n_tokens": 58, "n_pass": [366, 45, 23]}
{"time": "2023-09-24 01:53:06.605801", "score": "0.2844", "loss": "6.1862", "code": "boolean isUserAllowed(UserGroupInformation ugi){if(allAllowed||users.contains(ugi())){true;for(String group:ugi.getGroupNames()){if(groups.contains(group)){ } } } }", "n_tokens": 57, "n_pass": [375, 48, 24]}
{"time": "2023-09-24 01:53:08.314574", "score": "0.2844", "loss": "6.1862", "code": "boolean isUserAllowed(UserGroupInformation ugi){if(allAllowed||users.contains(ugi())){true;for(String group:ugi.getGroupNames()){if(groups.contains(group)){} } } }", "n_tokens": 56, "n_pass": [377, 49, 25]}
{"time": "2023-09-24 01:53:10.078791", "score": "0.2844", "loss": "6.1862", "code": "boolean isUserAllowed(UserGroupInformation ugi){if(allAllowed||users.contains(ugi())){true;for(String group:ugi.getGroupNames()){if(groups.contains(group)){}} } }", "n_tokens": 55, "n_pass": [379, 50, 26]}
{"time": "2023-09-24 01:53:11.846851", "score": "0.2844", "loss": "6.1862", "code": "boolean isUserAllowed(UserGroupInformation ugi){if(allAllowed||users.contains(ugi())){true;for(String group:ugi.getGroupNames()){if(groups.contains(group)){}}} }", "n_tokens": 54, "n_pass": [381, 51, 27]}
{"time": "2023-09-24 01:53:13.553431", "score": "0.2844", "loss": "6.1862", "code": "boolean isUserAllowed(UserGroupInformation ugi){if(allAllowed||users.contains(ugi())){true;for(String group:ugi.getGroupNames()){if(groups.contains(group)){}}}}", "n_tokens": 53, "n_pass": [383, 52, 28]}

Minimal simplified code:
boolean isUserAllowed(UserGroupInformation ugi){if(allAllowed||users.contains(ugi())){true;for(String group:ugi.getGroupNames()){if(groups.contains(group)){}}}}

