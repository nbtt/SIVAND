
path = /Users/lap13494/workspace/ppl-extra-final/java-small/test/hadoop-splitted/DistCpV1_configure_0.java
method_name = configure
method_body = public void configure(JobConf job) { destPath = new Path(job.get(DST_DIR_LABEL, "/")); try { destFileSys = destPath.getFileSystem(job); } catch (IOException ex) { throw new RuntimeException("Unable to get the named file system.", ex); } sizeBuf = job.getInt("copy.buf.size", 128 * 1024); buffer = new byte[sizeBuf]; ignoreReadFailures = job.getBoolean(Options.IGNORE_READ_FAILURES.propertyname, false); preserve_status = job.getBoolean(Options.PRESERVE_STATUS.propertyname, false); if (preserve_status) { preseved = FileAttribute.parse(job.get(PRESERVE_STATUS_LABEL)); } update = job.getBoolean(Options.UPDATE.propertyname, false); overwrite = !update && job.getBoolean(Options.OVERWRITE.propertyname, false); skipCRCCheck = job.getBoolean(Options.SKIPCRC.propertyname, false); this.job = job; }
predict, score, loss = configure, 0.45677652955055237, 0.9361189007759094

Trace of simplified code(s):
{"time": "2023-09-24 01:09:36.301792", "score": "0.3568", "loss": "1.2406", "code": "public void configure(JobConf job) { destPath = new Path(job.get(DST_DIR_LABEL, \"/\")); try { destFileSys = destPath.getFileSystem(job); } catch (IOException ex) { throw new RuntimeException(\"Unable to get the named file system.\", ex); } sizeBuf = job.getInt(\"copy.buf.size\", 128 * 1024); buffer = new byte[sizeBuf]; ignoreReadFailures = job.getBoolean(Options.IGNORE_READ_FAILURES.propertyname, false); preserve_status = job.getBoolean(Options.PRESERVE_STATUS.propertyname, false); if (preserve_status) { preseved = FileAttribute.parse(job.get(PRESERVE_STATUS_LABEL)); } update = job.getBoolean(Options.UPDATE.propertyname, false); overwrite = !update && job.getBoolean(Options.OVERWRITE.propertyname, false); skipCRCCheck = job.getBoolean(Options.SKIPCRC.propertyname, false); this.job = job; }", "n_tokens": 291, "n_pass": [1, 1, 1]}
{"time": "2023-09-24 01:09:38.161443", "score": "0.334", "loss": "1.3135", "code": "public void configure(JobConf job) { destPath = new Path(job.get(DST_DIR_LABEL, \"/\")); try { destFileSys = destPath.getFileSystem(job); } catch (IOException ex) { throw new RuntimeException(\"Unable to get the named file system.\", ex); } sizeBuf = job.getInt(\"copy.buf.size\", 128 * 1024); buffer = new byte[sizeBuf]; ignoreReadFailures = job.update = job.getBoolean(Options.UPDATE.propertyname, false); overwrite = !update && job.getBoolean(Options.OVERWRITE.propertyname, false); skipCRCCheck = job.getBoolean(Options.SKIPCRC.propertyname, false); this.job = job; }", "n_tokens": 218, "n_pass": [10, 2, 2]}
{"time": "2023-09-24 01:09:46.350615", "score": "0.2677", "loss": "1.518", "code": "public void configure(JobConf job) { destPath = new Path(job.get(DST_DIR_LABEL, \"/\")); try { destFileSys = destPath.getFileSystem(job); } catch (IOException ex) { throw new RuntimeException(\"Unable to get the named file system.\", ex); } sizeBuf = job.getInt(\"copy.buf.size\", 128 * 1024); buffer = new byte[sizeBuf];job.update = job.getBoolean(Options.UPDATE.propertyname, false); overwrite = !update && job.getBoolean(Options.OVERWRITE.propertyname, false); skipCRCCheck = job.getBoolean(Options.SKIPCRC.propertyname, false); this.job = job; }", "n_tokens": 213, "n_pass": [145, 6, 3]}
{"time": "2023-09-24 01:09:56.126717", "score": "0.2279", "loss": "1.8538", "code": "public void configure(JobConf job) { new Path(job.get(DST_DIR_LABEL, \"/\")); try { destFileSys = destPath.getFileSystem(job); } catch (IOException ex) { throw new RuntimeException(\"Unable to get the named file system.\", ex); } sizeBuf = job.getInt(\"copy.buf.size\", 128 * 1024); buffer = new byte[sizeBuf];job.update = job.getBoolean(Options.UPDATE.propertyname, false); overwrite = !update && job.getBoolean(Options.OVERWRITE.propertyname, false); skipCRCCheck = job.getBoolean(Options.SKIPCRC.propertyname, false); this.job = job; }", "n_tokens": 209, "n_pass": [164, 11, 4]}
{"time": "2023-09-24 01:09:59.659109", "score": "0.2236", "loss": "1.9656", "code": "public void configure(JobConf job) { new Path(job.get(DST_DIR_LABEL, \"/\")); try { destFileSys.getFileSystem(job); } catch (IOException ex) { throw new RuntimeException(\"Unable to get the named file system.\", ex); } sizeBuf = job.getInt(\"copy.buf.size\", 128 * 1024); buffer = new byte[sizeBuf];job.update = job.getBoolean(Options.UPDATE.propertyname, false); overwrite = !update && job.getBoolean(Options.OVERWRITE.propertyname, false); skipCRCCheck = job.getBoolean(Options.SKIPCRC.propertyname, false); this.job = job; }", "n_tokens": 205, "n_pass": [172, 13, 5]}
{"time": "2023-09-24 01:10:01.517061", "score": "0.2907", "loss": "1.6323", "code": "public void configure(JobConf job) { new Path(job.get(DST_DIR_LABEL, \"/\")); try { destFileSys.getFileSystem(job); } catch (IOException ex) { throw new RuntimeException(\"Unable the named file system.\", ex); } sizeBuf = job.getInt(\"copy.buf.size\", 128 * 1024); buffer = new byte[sizeBuf];job.update = job.getBoolean(Options.UPDATE.propertyname, false); overwrite = !update && job.getBoolean(Options.OVERWRITE.propertyname, false); skipCRCCheck = job.getBoolean(Options.SKIPCRC.propertyname, false); this.job = job; }", "n_tokens": 201, "n_pass": [180, 14, 6]}
{"time": "2023-09-24 01:10:05.004921", "score": "0.228", "loss": "1.9396", "code": "public void configure(JobConf job) { new Path(job.get(DST_DIR_LABEL, \"/\")); try { destFileSys.getFileSystem(job); } catch (IOException ex) { throw new RuntimeException(\"Unable the named \", ex); } sizeBuf = job.getInt(\"copy.buf.size\", 128 * 1024); buffer = new byte[sizeBuf];job.update = job.getBoolean(Options.UPDATE.propertyname, false); overwrite = !update && job.getBoolean(Options.OVERWRITE.propertyname, false); skipCRCCheck = job.getBoolean(Options.SKIPCRC.propertyname, false); this.job = job; }", "n_tokens": 197, "n_pass": [182, 16, 7]}
{"time": "2023-09-24 01:10:06.852571", "score": "0.2785", "loss": "1.6794", "code": "public void configure(JobConf job) { new Path(job.get(DST_DIR_LABEL, \"/\")); try { destFileSys.getFileSystem(job); } catch (IOException ex) { throw new RuntimeException(\"Unable the named \", ex); } sizeBufgetInt(\"copy.buf.size\", 128 * 1024); buffer = new byte[sizeBuf];job.update = job.getBoolean(Options.UPDATE.propertyname, false); overwrite = !update && job.getBoolean(Options.OVERWRITE.propertyname, false); skipCRCCheck = job.getBoolean(Options.SKIPCRC.propertyname, false); this.job = job; }", "n_tokens": 192, "n_pass": [185, 17, 8]}
{"time": "2023-09-24 01:10:08.829953", "score": "0.2628", "loss": "2.0309", "code": "public void configure(JobConf job) { new Path(job.get(DST_DIR_LABEL, \"/\")); try { destFileSys.getFileSystem(job); } catch (IOException ex) { throw new RuntimeException(\"Unable the named \", ex); } sizeBufgetInt(\"copy.buf.size\", 128 * 1024); bufferbyte[sizeBuf];job.update = job.getBoolean(Options.UPDATE.propertyname, false); overwrite = !update && job.getBoolean(Options.OVERWRITE.propertyname, false); skipCRCCheck = job.getBoolean(Options.SKIPCRC.propertyname, false); this.job = job; }", "n_tokens": 187, "n_pass": [191, 18, 9]}
{"time": "2023-09-24 01:10:10.554457", "score": "0.323", "loss": "1.5669", "code": "public void configure(JobConf job) { new Path(job.get(DST_DIR_LABEL, \"/\")); try { destFileSys.getFileSystem(job); } catch (IOException ex) { throw new RuntimeException(\"Unable the named \", ex); } sizeBufgetInt(\"copy.buf.size\", 128 * 1024); bufferjob.update = job.getBoolean(Options.UPDATE.propertyname, false); overwrite = !update && job.getBoolean(Options.OVERWRITE.propertyname, false); skipCRCCheck = job.getBoolean(Options.SKIPCRC.propertyname, false); this.job = job; }", "n_tokens": 182, "n_pass": [192, 19, 10]}
{"time": "2023-09-24 01:10:12.619736", "score": "0.3117", "loss": "1.64", "code": "public void configure(JobConf job) { new Path(job.get(DST_DIR_LABEL, \"/\")); try { destFileSys.getFileSystem(job); } catch (IOException ex) { throw new RuntimeException(\"Unable the named \", ex); } sizeBufgetInt(\"copy.buf.size\", 128 * 1024); bufferjob.update = job.getBoolean(Options.UPDATE.propertyname, false); overwrite =  job.getBoolean(Options.OVERWRITE.propertyname, false); skipCRCCheck = job.getBoolean(Options.SKIPCRC.propertyname, false); this.job = job; }", "n_tokens": 177, "n_pass": [198, 20, 11]}
{"time": "2023-09-24 01:10:14.345772", "score": "0.2562", "loss": "1.9864", "code": "public void configure(JobConf job) { new Path(job.get(DST_DIR_LABEL, \"/\")); try { destFileSys.getFileSystem(job); } catch (IOException ex) { throw new RuntimeException(\"Unable the named \", ex); } sizeBufgetInt(\"copy.buf.size\", 128 * 1024); bufferjob.update = job.getBoolean(Options.UPDATE.propertyname, false); overwrite =  job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Options.SKIPCRC.propertyname, false); this.job = job; }", "n_tokens": 172, "n_pass": [202, 21, 12]}
{"time": "2023-09-24 01:10:16.112138", "score": "0.1691", "loss": "2.7282", "code": "public void configure(JobConf job) { new Path(job.get(DST_DIR_LABEL, \"/\")); try { destFileSys.getFileSystem(job); } catch (IOException ex) { throw new RuntimeException(\"Unable the named \", ex); } sizeBufgetInt(\"copy.buf.size\", 128 * 1024); bufferjob.update = job.getBoolean(Options.UPDATE.propertyname, false); overwrite =  job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Options.SKIPCRC.propertyname, false);  job; }", "n_tokens": 167, "n_pass": [206, 22, 13]}
{"time": "2023-09-24 01:10:20.007022", "score": "0.2741", "loss": "1.9445", "code": "public void configure(JobConf job) { new Path(job.get(DST_DIR_LABEL, \"/\")); try { destFileSys.getFileSystem(job); } catch (IOException ex) { throw new RuntimeException(\"Unable \", ex); } sizeBufgetInt(\"copy.buf.size\", 128 * 1024); bufferjob.update = job.getBoolean(Options.UPDATE.propertyname, false); overwrite =  job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Options.SKIPCRC.propertyname, false);  job; }", "n_tokens": 163, "n_pass": [225, 24, 14]}
{"time": "2023-09-24 01:10:23.928533", "score": "0.2767", "loss": "2.0657", "code": "public void configure(JobConf job) {(job.get(DST_DIR_LABEL, \"/\")); try { destFileSys.getFileSystem(job); } catch (IOException ex) { throw new RuntimeException(\"Unable \", ex); } sizeBufgetInt(\"copy.buf.size\", 128 * 1024); bufferjob.update = job.getBoolean(Options.UPDATE.propertyname, false); overwrite =  job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Options.SKIPCRC.propertyname, false);  job; }", "n_tokens": 159, "n_pass": [248, 26, 15]}
{"time": "2023-09-24 01:10:30.844654", "score": "0.2271", "loss": "2.2692", "code": "public void configure(JobConf job) {(job.get(DST_LABEL, \"/\")); try { destFileSys.getFileSystem(job); } catch (IOException ex) { throw new RuntimeException(\"Unable \", ex); } sizeBufgetInt(\"copy.buf.size\", 128 * 1024); bufferjob.update = job.getBoolean(Options.UPDATE.propertyname, false); overwrite =  job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Options.SKIPCRC.propertyname, false);  job; }", "n_tokens": 157, "n_pass": [357, 29, 16]}
{"time": "2023-09-24 01:10:32.668252", "score": "0.2841", "loss": "1.9001", "code": "public void configure(JobConf job) {(job.get(DST, \"/\")); try { destFileSys.getFileSystem(job); } catch (IOException ex) { throw new RuntimeException(\"Unable \", ex); } sizeBufgetInt(\"copy.buf.size\", 128 * 1024); bufferjob.update = job.getBoolean(Options.UPDATE.propertyname, false); overwrite =  job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Options.SKIPCRC.propertyname, false);  job; }", "n_tokens": 155, "n_pass": [358, 30, 17]}
{"time": "2023-09-24 01:10:34.477932", "score": "0.2884", "loss": "1.9319", "code": "public void configure(JobConf job) {(job.get(DST, \"/\")); try { destFileSys(job); } catch (IOException ex) { throw new RuntimeException(\"Unable \", ex); } sizeBufgetInt(\"copy.buf.size\", 128 * 1024); bufferjob.update = job.getBoolean(Options.UPDATE.propertyname, false); overwrite =  job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Options.SKIPCRC.propertyname, false);  job; }", "n_tokens": 153, "n_pass": [366, 31, 18]}
{"time": "2023-09-24 01:10:36.465642", "score": "0.2529", "loss": "2.1308", "code": "public void configure(JobConf job) {(job.get(DST, \"/\")); try { destFileSys(job); } catch (IOException ex) { new RuntimeException(\"Unable \", ex); } sizeBufgetInt(\"copy.buf.size\", 128 * 1024); bufferjob.update = job.getBoolean(Options.UPDATE.propertyname, false); overwrite =  job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Options.SKIPCRC.propertyname, false);  job; }", "n_tokens": 151, "n_pass": [375, 32, 19]}
{"time": "2023-09-24 01:10:38.153025", "score": "0.1954", "loss": "2.4784", "code": "public void configure(JobConf job) {(job.get(DST, \"/\")); try { destFileSys(job); } catch (IOException ex) { RuntimeException(\"Unable \", ex); } sizeBufgetInt(\"copy.buf.size\", 128 * 1024); bufferjob.update = job.getBoolean(Options.UPDATE.propertyname, false); overwrite =  job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Options.SKIPCRC.propertyname, false);  job; }", "n_tokens": 149, "n_pass": [376, 33, 20]}
{"time": "2023-09-24 01:10:43.415671", "score": "0.2339", "loss": "2.3029", "code": "public void configure(JobConf job) {(job.get(DST, \"/\")); try { destFileSys(job); } catch (IOException ex) { RuntimeException(\"Unable \", ex); } sizeBufgetInt(\"copy.size\", 128 * 1024); bufferjob.update = job.getBoolean(Options.UPDATE.propertyname, false); overwrite =  job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Options.SKIPCRC.propertyname, false);  job; }", "n_tokens": 147, "n_pass": [387, 36, 21]}
{"time": "2023-09-24 01:10:47.001432", "score": "0.2732", "loss": "1.9227", "code": "public void configure(JobConf job) {(job.get(DST, \"/\")); try { destFileSys(job); } catch (IOException ex) { RuntimeException(\"Unable \", ex); } sizeBufgetInt(\"copy.size\",28 * 1024); bufferjob.update = job.getBoolean(Options.UPDATE.propertyname, false); overwrite =  job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Options.SKIPCRC.propertyname, false);  job; }", "n_tokens": 145, "n_pass": [390, 38, 22]}
{"time": "2023-09-24 01:10:48.765187", "score": "0.2457", "loss": "2.0885", "code": "public void configure(JobConf job) {(job.get(DST, \"/\")); try { destFileSys(job); } catch (IOException ex) { RuntimeException(\"Unable \", ex); } sizeBufgetInt(\"copy.size\",28 *024); bufferjob.update = job.getBoolean(Options.UPDATE.propertyname, false); overwrite =  job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Options.SKIPCRC.propertyname, false);  job; }", "n_tokens": 143, "n_pass": [393, 39, 23]}
{"time": "2023-09-24 01:10:50.497828", "score": "0.2392", "loss": "2.2384", "code": "public void configure(JobConf job) {(job.get(DST, \"/\")); try { destFileSys(job); } catch (IOException ex) { RuntimeException(\"Unable \", ex); } sizeBufgetInt(\"copy.size\",28 *4); bufferjob.update = job.getBoolean(Options.UPDATE.propertyname, false); overwrite =  job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Options.SKIPCRC.propertyname, false);  job; }", "n_tokens": 141, "n_pass": [394, 40, 24]}
{"time": "2023-09-24 01:10:55.851299", "score": "0.326", "loss": "1.7557", "code": "public void configure(JobConf job) {(job.get(DST, \"/\")); try { destFileSys(job); } catch (IOException ex) { RuntimeException(\"Unable \", ex); } sizeBufgetInt(\"copy.size\",28 *4); bufferjob.update = job.getBoolean(Options.UPDATE.propertyname); overwrite =  job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Options.SKIPCRC.propertyname, false);  job; }", "n_tokens": 138, "n_pass": [403, 43, 25]}
{"time": "2023-09-24 01:10:59.473899", "score": "0.1839", "loss": "2.4834", "code": "public void configure(JobConf job) {(job.get(DST, \"/\")); try { destFileSys(job); } catch (IOException ex) { RuntimeException(\"Unable \", ex); } sizeBufgetInt(\"copy.size\",28 *4); bufferjob.update = job.getBoolean(Options.UPDATE.propertyname); overwrite =  job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Optionspropertyname, false);  job; }", "n_tokens": 135, "n_pass": [413, 45, 26]}
{"time": "2023-09-24 01:11:01.197882", "score": "0.2722", "loss": "1.8614", "code": "public void configure(JobConf job) {(job.get(DST, \"/\")); try { destFileSys(job); } catch (IOException ex) { RuntimeException(\"Unable \", ex); } sizeBufgetInt(\"copy.size\",28 *4); bufferjob.update = job.getBoolean(Options.UPDATE.propertyname); overwrite =  job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Optionsfalse);  job; }", "n_tokens": 132, "n_pass": [414, 46, 27]}
{"time": "2023-09-24 01:11:03.012772", "score": "0.2158", "loss": "2.23", "code": "public void configure(JobConf job) {(job.get(DST, \"/\")); try { destFileSys(job); } catch (IOException ex) { RuntimeException(\"Unable \", ex); } sizeBufgetInt(\"copy.size\",28 *4); bufferjob.update = job.getBoolean(Options.UPDATE.propertyname); overwrite =  job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Optionsfalse);; }", "n_tokens": 129, "n_pass": [416, 47, 28]}
{"time": "2023-09-24 01:11:04.738093", "score": "0.3043", "loss": "1.8079", "code": "void configure(JobConf job) {(job.get(DST, \"/\")); try { destFileSys(job); } catch (IOException ex) { RuntimeException(\"Unable \", ex); } sizeBufgetInt(\"copy.size\",28 *4); bufferjob.update = job.getBoolean(Options.UPDATE.propertyname); overwrite =  job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Optionsfalse);; }", "n_tokens": 127, "n_pass": [418, 48, 29]}
{"time": "2023-09-24 01:11:06.870516", "score": "0.242", "loss": "2.1114", "code": "void configure(JobConf job) {(job(DST, \"/\")); try { destFileSys(job); } catch (IOException ex) { RuntimeException(\"Unable \", ex); } sizeBufgetInt(\"copy.size\",28 *4); bufferjob.update = job.getBoolean(Options.UPDATE.propertyname); overwrite =  job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Optionsfalse);; }", "n_tokens": 125, "n_pass": [425, 49, 30]}
{"time": "2023-09-24 01:11:08.678682", "score": "0.2735", "loss": "1.8772", "code": "void configure(JobConf job) {(job(DST, \"/\")); try {(job); } catch (IOException ex) { RuntimeException(\"Unable \", ex); } sizeBufgetInt(\"copy.size\",28 *4); bufferjob.update = job.getBoolean(Options.UPDATE.propertyname); overwrite =  job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Optionsfalse);; }", "n_tokens": 123, "n_pass": [433, 50, 31]}
{"time": "2023-09-24 01:11:10.487143", "score": "0.2952", "loss": "1.7647", "code": "void configure(JobConf job) {(job(DST, \"/\")); try {(job); } catch (IOException ex) { RuntimeException(\"\", ex); } sizeBufgetInt(\"copy.size\",28 *4); bufferjob.update = job.getBoolean(Options.UPDATE.propertyname); overwrite =  job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Optionsfalse);; }", "n_tokens": 121, "n_pass": [444, 51, 32]}
{"time": "2023-09-24 01:11:12.342452", "score": "0.2605", "loss": "1.9382", "code": "void configure(JobConf job) {(job(DST, \"/\")); try {(job); } catch (IOException ex) { RuntimeException(\"\", ex); }getInt(\"copy.size\",28 *4); bufferjob.update = job.getBoolean(Options.UPDATE.propertyname); overwrite =  job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Optionsfalse);; }", "n_tokens": 119, "n_pass": [449, 52, 33]}
{"time": "2023-09-24 01:11:15.742292", "score": "0.1938", "loss": "2.2246", "code": "void configure(JobConf job) {(job(DST, \"/\")); try {(job); } catch (IOException ex) { RuntimeException(\"\", ex); }getInt(\"copy.size\",284); bufferjob.update = job.getBoolean(Options.UPDATE.propertyname); overwrite =  job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Optionsfalse);; }", "n_tokens": 117, "n_pass": [455, 54, 34]}
{"time": "2023-09-24 01:11:17.513920", "score": "0.3394", "loss": "1.4343", "code": "void configure(JobConf job) {(job(DST, \"/\")); try {(job); } catch (IOException ex) { RuntimeException(\"\", ex); }getInt(\"copy.size\",284); bufferjob = job.getBoolean(Options.UPDATE.propertyname); overwrite =  job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Optionsfalse);; }", "n_tokens": 115, "n_pass": [459, 55, 35]}
{"time": "2023-09-24 01:11:19.186079", "score": "0.3184", "loss": "1.6376", "code": "void configure(JobConf job) {(job(DST, \"/\")); try {(job); } catch (IOException ex) { RuntimeException(\"\", ex); }getInt(\"copy.size\",284); bufferjobjob.getBoolean(Options.UPDATE.propertyname); overwrite =  job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Optionsfalse);; }", "n_tokens": 112, "n_pass": [460, 56, 36]}
{"time": "2023-09-24 01:11:21.062130", "score": "0.2481", "loss": "1.9704", "code": "void configure(JobConf job) {(job(DST, \"/\")); try {(job); } catch (IOException ex) { RuntimeException(\"\", ex); }getInt(\"copy.size\",284); bufferjob(Options.UPDATE.propertyname); overwrite =  job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Optionsfalse);; }", "n_tokens": 109, "n_pass": [461, 57, 37]}
{"time": "2023-09-24 01:11:27.000740", "score": "0.2761", "loss": "1.8424", "code": "void configure(JobConf job) {(job(DST, \"/\")); try {(job); } catch (IOException ex) { RuntimeException(\"\", ex); }getInt(\"copy.size\",4); bufferjob(Options.UPDATE.propertyname); overwrite =  job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Optionsfalse);; }", "n_tokens": 107, "n_pass": [506, 60, 38]}
{"time": "2023-09-24 01:11:42.068062", "score": "0.2439", "loss": "1.997", "code": "void configure(JobConf job) {(job(DST, \"/\")); try {(job); } catch (IOException ex) { RuntimeException(\"\", ex); }getInt(\"copy.size\",4);bufferjob(Options.UPDATE.propertyname); overwrite =  job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Optionsfalse);; }", "n_tokens": 106, "n_pass": [651, 64, 39]}
{"time": "2023-09-24 01:11:47.194462", "score": "0.2276", "loss": "2.066", "code": "void configure(JobConf job) {(job(DST, \"/\")); try {(job); } catch (IOException ex) { RuntimeException(\"\", ex); }getInt(\"copy.size\",4);bufferjob(OptionsUPDATE.propertyname); overwrite =  job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Optionsfalse);; }", "n_tokens": 105, "n_pass": [656, 67, 40]}
{"time": "2023-09-24 01:11:49.016035", "score": "0.2363", "loss": "1.9684", "code": "void configure(JobConf job) {(job(DST, \"/\")); try {(job); } catch (IOException ex) { RuntimeException(\"\", ex); }getInt(\"copy.size\",4);bufferjob(Options.propertyname); overwrite =  job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Optionsfalse);; }", "n_tokens": 104, "n_pass": [657, 68, 41]}
{"time": "2023-09-24 01:11:52.487776", "score": "0.2406", "loss": "1.9506", "code": "void configure(JobConf job) {(job(DST, \"/\")); try {(job); } catch (IOException ex) { RuntimeException(\"\", ex); }getInt(\"copy.size\",4);bufferjob(Options.propertyname);overwrite =  job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Optionsfalse);; }", "n_tokens": 103, "n_pass": [662, 70, 42]}
{"time": "2023-09-24 01:11:54.206043", "score": "0.2398", "loss": "1.927", "code": "void configure(JobConf job) {(job(DST, \"/\")); try {(job); } catch (IOException ex) { RuntimeException(\"\", ex); }getInt(\"copy.size\",4);bufferjob(Options.propertyname);overwrite=  job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Optionsfalse);; }", "n_tokens": 102, "n_pass": [664, 71, 43]}
{"time": "2023-09-24 01:11:55.979762", "score": "0.2578", "loss": "1.8564", "code": "void configure(JobConf job) {(job(DST, \"/\")); try {(job); } catch (IOException ex) { RuntimeException(\"\", ex); }getInt(\"copy.size\",4);bufferjob(Options.propertyname);overwrite= job.getBoolean(Options.OVERWRITE.propertyname, false);job.getBoolean(Optionsfalse);; }", "n_tokens": 101, "n_pass": [666, 72, 44]}
{"time": "2023-09-24 01:11:59.418017", "score": "0.2524", "loss": "1.8815", "code": "void configure(JobConf job) {(job(DST, \"/\")); try {(job); } catch (IOException ex) { RuntimeException(\"\", ex); }getInt(\"copy.size\",4);bufferjob(Options.propertyname);overwrite= job.getBoolean(Options.propertyname, false);job.getBoolean(Optionsfalse);; }", "n_tokens": 99, "n_pass": [670, 74, 45]}
{"time": "2023-09-24 01:12:04.582062", "score": "0.2521", "loss": "1.8979", "code": "void configure(JobConf job) {(job(DST, \"/\")); try {(job); } catch (IOException ex) { RuntimeException(\"\", ex); }getInt(\"copy.size\",4);bufferjob(Options.propertyname);overwrite= job.getBoolean(Options.propertyname, false).getBoolean(Optionsfalse);; }", "n_tokens": 97, "n_pass": [674, 77, 46]}
{"time": "2023-09-24 01:12:07.128144", "score": "0.2521", "loss": "1.8979", "code": "void configure(JobConf job){(job(DST, \"/\")); try {(job); } catch (IOException ex) { RuntimeException(\"\", ex); }getInt(\"copy.size\",4);bufferjob(Options.propertyname);overwrite= job.getBoolean(Options.propertyname, false).getBoolean(Optionsfalse);; }", "n_tokens": 96, "n_pass": [688, 78, 47]}
{"time": "2023-09-24 01:12:08.869294", "score": "0.2521", "loss": "1.8979", "code": "void configure(JobConf job){(job(DST,\"/\")); try {(job); } catch (IOException ex) { RuntimeException(\"\", ex); }getInt(\"copy.size\",4);bufferjob(Options.propertyname);overwrite= job.getBoolean(Options.propertyname, false).getBoolean(Optionsfalse);; }", "n_tokens": 95, "n_pass": [695, 79, 48]}
{"time": "2023-09-24 01:12:10.652477", "score": "0.2481", "loss": "1.9125", "code": "void configure(JobConf job){(job(DST,\"\")); try {(job); } catch (IOException ex) { RuntimeException(\"\", ex); }getInt(\"copy.size\",4);bufferjob(Options.propertyname);overwrite= job.getBoolean(Options.propertyname, false).getBoolean(Optionsfalse);; }", "n_tokens": 94, "n_pass": [697, 80, 49]}
{"time": "2023-09-24 01:12:12.375856", "score": "0.2481", "loss": "1.9125", "code": "void configure(JobConf job){(job(DST,\"\"));try {(job); } catch (IOException ex) { RuntimeException(\"\", ex); }getInt(\"copy.size\",4);bufferjob(Options.propertyname);overwrite= job.getBoolean(Options.propertyname, false).getBoolean(Optionsfalse);; }", "n_tokens": 93, "n_pass": [702, 81, 50]}
{"time": "2023-09-24 01:12:14.107571", "score": "0.2481", "loss": "1.9125", "code": "void configure(JobConf job){(job(DST,\"\"));try{(job); } catch (IOException ex) { RuntimeException(\"\", ex); }getInt(\"copy.size\",4);bufferjob(Options.propertyname);overwrite= job.getBoolean(Options.propertyname, false).getBoolean(Optionsfalse);; }", "n_tokens": 92, "n_pass": [704, 82, 51]}
{"time": "2023-09-24 01:12:15.875579", "score": "0.2481", "loss": "1.9125", "code": "void configure(JobConf job){(job(DST,\"\"));try{(job);} catch (IOException ex) { RuntimeException(\"\", ex); }getInt(\"copy.size\",4);bufferjob(Options.propertyname);overwrite= job.getBoolean(Options.propertyname, false).getBoolean(Optionsfalse);; }", "n_tokens": 91, "n_pass": [710, 83, 52]}
{"time": "2023-09-24 01:12:17.692336", "score": "0.2481", "loss": "1.9125", "code": "void configure(JobConf job){(job(DST,\"\"));try{(job);}catch (IOException ex) { RuntimeException(\"\", ex); }getInt(\"copy.size\",4);bufferjob(Options.propertyname);overwrite= job.getBoolean(Options.propertyname, false).getBoolean(Optionsfalse);; }", "n_tokens": 90, "n_pass": [712, 84, 53]}
{"time": "2023-09-24 01:12:19.549379", "score": "0.2481", "loss": "1.9125", "code": "void configure(JobConf job){(job(DST,\"\"));try{(job);}catch(IOException ex) { RuntimeException(\"\", ex); }getInt(\"copy.size\",4);bufferjob(Options.propertyname);overwrite= job.getBoolean(Options.propertyname, false).getBoolean(Optionsfalse);; }", "n_tokens": 89, "n_pass": [714, 85, 54]}
{"time": "2023-09-24 01:12:21.377761", "score": "0.2481", "loss": "1.9125", "code": "void configure(JobConf job){(job(DST,\"\"));try{(job);}catch(IOException ex){ RuntimeException(\"\", ex); }getInt(\"copy.size\",4);bufferjob(Options.propertyname);overwrite= job.getBoolean(Options.propertyname, false).getBoolean(Optionsfalse);; }", "n_tokens": 88, "n_pass": [720, 86, 55]}
{"time": "2023-09-24 01:12:23.153664", "score": "0.2481", "loss": "1.9125", "code": "void configure(JobConf job){(job(DST,\"\"));try{(job);}catch(IOException ex){RuntimeException(\"\", ex); }getInt(\"copy.size\",4);bufferjob(Options.propertyname);overwrite= job.getBoolean(Options.propertyname, false).getBoolean(Optionsfalse);; }", "n_tokens": 87, "n_pass": [722, 87, 56]}
{"time": "2023-09-24 01:12:24.939403", "score": "0.2481", "loss": "1.9125", "code": "void configure(JobConf job){(job(DST,\"\"));try{(job);}catch(IOException ex){RuntimeException(\"\",ex); }getInt(\"copy.size\",4);bufferjob(Options.propertyname);overwrite= job.getBoolean(Options.propertyname, false).getBoolean(Optionsfalse);; }", "n_tokens": 86, "n_pass": [728, 88, 57]}
{"time": "2023-09-24 01:12:26.682950", "score": "0.2481", "loss": "1.9125", "code": "void configure(JobConf job){(job(DST,\"\"));try{(job);}catch(IOException ex){RuntimeException(\"\",ex);}getInt(\"copy.size\",4);bufferjob(Options.propertyname);overwrite= job.getBoolean(Options.propertyname, false).getBoolean(Optionsfalse);; }", "n_tokens": 85, "n_pass": [732, 89, 58]}
{"time": "2023-09-24 01:12:30.209939", "score": "0.2481", "loss": "1.9125", "code": "void configure(JobConf job){(job(DST,\"\"));try{(job);}catch(IOException ex){RuntimeException(\"\",ex);}getInt(\"copysize\",4);bufferjob(Options.propertyname);overwrite= job.getBoolean(Options.propertyname, false).getBoolean(Optionsfalse);; }", "n_tokens": 84, "n_pass": [738, 91, 59]}
{"time": "2023-09-24 01:12:33.694438", "score": "0.2214", "loss": "2.0237", "code": "void configure(JobConf job){(job(DST,\"\"));try{(job);}catch(IOException ex){RuntimeException(\"\",ex);}getInt(\"copysize\",4);job(Options.propertyname);overwrite= job.getBoolean(Options.propertyname, false).getBoolean(Optionsfalse);; }", "n_tokens": 83, "n_pass": [745, 93, 60]}
{"time": "2023-09-24 01:12:40.611740", "score": "0.231", "loss": "1.9999", "code": "void configure(JobConf job){(job(DST,\"\"));try{(job);}catch(IOException ex){RuntimeException(\"\",ex);}getInt(\"copysize\",4);job(Options.propertyname);overwrite= job.getBoolean(Options, false).getBoolean(Optionsfalse);; }", "n_tokens": 81, "n_pass": [758, 97, 61]}
{"time": "2023-09-24 01:12:42.315842", "score": "0.2067", "loss": "2.1212", "code": "void configure(JobConf job){(job(DST,\"\"));try{(job);}catch(IOException ex){RuntimeException(\"\",ex);}getInt(\"copysize\",4);job(Options.propertyname);overwrite= job.getBoolean(Optionsfalse).getBoolean(Optionsfalse);; }", "n_tokens": 79, "n_pass": [759, 98, 62]}
{"time": "2023-09-24 01:12:55.058865", "score": "0.2163", "loss": "2.1053", "code": "void configure(JobConf job){(job(DST,\"\"));try{(job);}catch(IOException ex){RuntimeException(\"\",ex);}getInt(\"copysize\",4);job(Options.propertyname);overwrite= job.getBoolean(Optionsfalse).getBoolean(false);; }", "n_tokens": 78, "n_pass": [848, 104, 63]}
{"time": "2023-09-24 01:12:58.502237", "score": "0.2163", "loss": "2.1053", "code": "void configure(JobConf job){(job(DST,\"\"));try{(job);}catch(IOException ex){RuntimeException(\"\",ex);}getInt(\"copysize\",4);job(Options.propertyname);overwrite= job.getBoolean(Optionsfalse).getBoolean(false); }", "n_tokens": 77, "n_pass": [851, 106, 64]}
{"time": "2023-09-24 01:13:00.305734", "score": "0.2163", "loss": "2.1053", "code": "void configure(JobConf job){(job(DST,\"\"));try{(job);}catch(IOException ex){RuntimeException(\"\",ex);}getInt(\"copysize\",4);job(Options.propertyname);overwrite= job.getBoolean(Optionsfalse).getBoolean(false);}", "n_tokens": 76, "n_pass": [853, 107, 65]}
{"time": "2023-09-24 01:13:09.986207", "score": "0.2163", "loss": "2.1053", "code": "void configure(JobConf job){(job(DST,\"\"));try{(job);}catch(IOException ex){RuntimeException(\"\",ex);}getInt(\"copysize\",4);job(Options.propertyname);overwrite=job.getBoolean(Optionsfalse).getBoolean(false);}", "n_tokens": 75, "n_pass": [916, 112, 66]}
{"time": "2023-09-24 01:13:14.600921", "score": "0.1964", "loss": "2.2245", "code": "void configure(JobConf job){(job(DST,\"\"));try{(job);}catch(IOException ex){RuntimeException(\"\",ex);}getInt(\"copysize\",4);job(Options.propertyname);overwrite=job.getBoolean(false).getBoolean(false);}", "n_tokens": 74, "n_pass": [921, 114, 67]}

Minimal simplified code:
void configure(JobConf job){(job(DST,""));try{(job);}catch(IOException ex){RuntimeException("",ex);}getInt("copysize",4);job(Options.propertyname);overwrite=job.getBoolean(false).getBoolean(false);}

