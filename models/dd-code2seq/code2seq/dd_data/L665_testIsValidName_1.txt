
path = /Users/lap13494/workspace/ppl-extra-final/java-small/test/hadoop-splitted/TestDFSUtil_testIsValidName_0.java
method_name = testIsValidName
method_body = public void testIsValidName() { assertFalse(DFSUtil.isValidName("/foo/../bar")); assertFalse(DFSUtil.isValidName("/foo/./bar")); assertFalse(DFSUtil.isValidName("/foo//bar")); assertTrue(DFSUtil.isValidName("/")); assertTrue(DFSUtil.isValidName("/bar/")); assertFalse(DFSUtil.isValidName("/foo/:/bar")); assertFalse(DFSUtil.isValidName("/foo:bar")); }
predict, score, loss = testIsValidName, 0.9085925817489624, 0.4648803174495697

Trace of simplified code(s):
{"time": "2023-09-24 02:06:35.874625", "score": "0.9049", "loss": "0.4765", "code": "public void testIsValidName() { assertFalse(DFSUtil.isValidName(\"/foo/../bar\")); assertFalse(DFSUtil.isValidName(\"/foo/./bar\")); assertFalse(DFSUtil.isValidName(\"/foo//bar\")); assertTrue(DFSUtil.isValidName(\"/\")); assertTrue(DFSUtil.isValidName(\"/bar/\")); assertFalse(DFSUtil.isValidName(\"/foo/:/bar\")); assertFalse(DFSUtil.isValidName(\"/foo:bar\")); }", "n_tokens": 127, "n_pass": [1, 1, 1]}
{"time": "2023-09-24 02:06:37.710503", "score": "0.9079", "loss": "0.4761", "code": "public void testIsValidName() { assertFalse(DFSUtil.isValidNameDFSUtil.isValidName(\"/foo/./bar\")); assertFalse(DFSUtil.isValidName(\"/foo//bar\")); assertTrue(DFSUtil.isValidName(\"/\")); assertTrue(DFSUtil.isValidName(\"/bar/\")); assertFalse(DFSUtil.isValidName(\"/foo/:/bar\")); assertFalse(DFSUtil.isValidName(\"/foo:bar\")); }", "n_tokens": 111, "n_pass": [21, 2, 2]}
{"time": "2023-09-24 02:06:39.358685", "score": "0.908", "loss": "0.4816", "code": "public void testIsValidName() { assertFalse(DFSUtil.isValidNameDFSUtil.isValidName(\"/foo/./bar\"));  assertTrue(DFSUtil.isValidName(\"/\")); assertTrue(DFSUtil.isValidName(\"/bar/\")); assertFalse(DFSUtil.isValidName(\"/foo/:/bar\")); assertFalse(DFSUtil.isValidName(\"/foo:bar\")); }", "n_tokens": 95, "n_pass": [23, 3, 3]}
{"time": "2023-09-24 02:06:41.656442", "score": "0.9045", "loss": "0.5121", "code": "public void testIsValidName() { assertFalse(DFSUtil.isValidNameDFSUtil.isValidName(\"/foo/./bar\"));  assertTrue(DFSUtil.isValidName(\"/\")); assertTrue(DFSUtil.isValidName(\"/bar/\")); assertFalse(DFSUtil.isValidName(\"/bar\")); assertFalse(DFSUtil.isValidName(\"/foo:bar\")); }", "n_tokens": 91, "n_pass": [87, 4, 4]}
{"time": "2023-09-24 02:06:44.608179", "score": "0.9144", "loss": "0.4506", "code": "public void testIsValidName() { assertFalse(DFSUtil.isValidNameDFSUtil.isValidName(\"/foo/./bar\"));  assertTrue(DFSUtil.isValidName(\"/\")); assertTrue(DFSUtil.isValidName(\"/bar/\")); assertFalse(DFSUtil.isValidName(\"\")); assertFalse(DFSUtil.isValidName(\"/foo:bar\")); }", "n_tokens": 89, "n_pass": [156, 5, 5]}
{"time": "2023-09-24 02:06:46.308346", "score": "0.8933", "loss": "0.5637", "code": "public void testIsValidName() { assertFalse(DFSUtil.isValidNameDFSUtil.isValidName(\"/foo/./bar\"));  assertTrue(DFSUtil.isValidName(\"/\")); assertTrue(DFSUtil.isValidName(\"/bar/\")); assertFalse(DFSUtil.isValidName(\"\"));(DFSUtil.isValidName(\"/foo:bar\")); }", "n_tokens": 87, "n_pass": [158, 6, 6]}
{"time": "2023-09-24 02:06:48.096023", "score": "0.9023", "loss": "0.5346", "code": "public void testIsValidName() { assertFalse(DFSUtil.isValidNameDFSUtil.isValidName(\"/foo/./bar\"));  assertTrue(DFSUtil.isValidName(\"/\")); assertTrue(DFSUtil.isValidName(\"/bar/\")); assertFalse(DFSUtil.isValidName(\"\"));(DFSUtil(\"/foo:bar\")); }", "n_tokens": 85, "n_pass": [160, 7, 7]}
{"time": "2023-09-24 02:06:49.835609", "score": "0.8963", "loss": "0.5892", "code": "public void testIsValidName() { assertFalse(DFSUtil.isValidNameDFSUtil.isValidName(\"/foo/./bar\"));  assertTrue(DFSUtil.isValidName(\"/\")); assertTrue(DFSUtil.isValidName(\"/bar/\")); assertFalse(DFSUtil.isValidName(\"\"));(DFSUtil(\":bar\")); }", "n_tokens": 83, "n_pass": [162, 8, 8]}
{"time": "2023-09-24 02:06:51.494698", "score": "0.9117", "loss": "0.4859", "code": "public void testIsValidName() { assertFalse(DFSUtil.isValidNameDFSUtil.isValidName(\"/foo/./bar\"));  assertTrue(DFSUtil.isValidName(\"/\")); assertTrue(DFSUtil.isValidName(\"/bar/\")); assertFalse(DFSUtil.isValidName(\"\"));(DFSUtil(\"\")); }", "n_tokens": 81, "n_pass": [163, 9, 9]}
{"time": "2023-09-24 02:06:53.189304", "score": "0.9117", "loss": "0.4859", "code": " void testIsValidName() { assertFalse(DFSUtil.isValidNameDFSUtil.isValidName(\"/foo/./bar\"));  assertTrue(DFSUtil.isValidName(\"/\")); assertTrue(DFSUtil.isValidName(\"/bar/\")); assertFalse(DFSUtil.isValidName(\"\"));(DFSUtil(\"\")); }", "n_tokens": 80, "n_pass": [167, 10, 10]}
{"time": "2023-09-24 02:06:55.192841", "score": "0.9086", "loss": "0.5324", "code": " void testIsValidName() {(DFSUtil.isValidNameDFSUtil.isValidName(\"/foo/./bar\"));  assertTrue(DFSUtil.isValidName(\"/\")); assertTrue(DFSUtil.isValidName(\"/bar/\")); assertFalse(DFSUtil.isValidName(\"\"));(DFSUtil(\"\")); }", "n_tokens": 78, "n_pass": [172, 11, 11]}
{"time": "2023-09-24 02:06:56.874904", "score": "0.9081", "loss": "0.5335", "code": " void testIsValidName() {(DFSUtilDFSUtil.isValidName(\"/foo/./bar\"));  assertTrue(DFSUtil.isValidName(\"/\")); assertTrue(DFSUtil.isValidName(\"/bar/\")); assertFalse(DFSUtil.isValidName(\"\"));(DFSUtil(\"\")); }", "n_tokens": 76, "n_pass": [174, 12, 12]}
{"time": "2023-09-24 02:07:00.351854", "score": "0.9037", "loss": "0.593", "code": " void testIsValidName() {(DFSUtilDFSUtil.isValidName(\"/./bar\"));  assertTrue(DFSUtil.isValidName(\"/\")); assertTrue(DFSUtil.isValidName(\"/bar/\")); assertFalse(DFSUtil.isValidName(\"\"));(DFSUtil(\"\")); }", "n_tokens": 74, "n_pass": [178, 14, 13]}
{"time": "2023-09-24 02:07:02.025294", "score": "0.9037", "loss": "0.593", "code": " void testIsValidName() {(DFSUtilDFSUtil.isValidName(\"/bar\"));  assertTrue(DFSUtil.isValidName(\"/\")); assertTrue(DFSUtil.isValidName(\"/bar/\")); assertFalse(DFSUtil.isValidName(\"\"));(DFSUtil(\"\")); }", "n_tokens": 72, "n_pass": [179, 15, 14]}
{"time": "2023-09-24 02:07:03.734199", "score": "0.8995", "loss": "0.6899", "code": " void testIsValidName() {(DFSUtilDFSUtil.isValidName(\"/bar\")); (DFSUtil.isValidName(\"/\")); assertTrue(DFSUtil.isValidName(\"/bar/\")); assertFalse(DFSUtil.isValidName(\"\"));(DFSUtil(\"\")); }", "n_tokens": 70, "n_pass": [183, 16, 15]}
{"time": "2023-09-24 02:07:05.420002", "score": "0.8996", "loss": "0.7143", "code": " void testIsValidName() {(DFSUtilDFSUtil.isValidName(\"/bar\")); (DFSUtil(\"/\")); assertTrue(DFSUtil.isValidName(\"/bar/\")); assertFalse(DFSUtil.isValidName(\"\"));(DFSUtil(\"\")); }", "n_tokens": 68, "n_pass": [185, 17, 16]}
{"time": "2023-09-24 02:07:07.105221", "score": "0.8634", "loss": "1.0325", "code": " void testIsValidName() {(DFSUtilDFSUtil.isValidName(\"/bar\")); (DFSUtil(\"/\")); assertTrue(isValidName(\"/bar/\")); assertFalse(DFSUtil.isValidName(\"\"));(DFSUtil(\"\")); }", "n_tokens": 66, "n_pass": [191, 18, 17]}
{"time": "2023-09-24 02:07:08.863145", "score": "0.8726", "loss": "0.9276", "code": " void testIsValidName() {(DFSUtilDFSUtil.isValidName(\"/bar\")); (DFSUtil(\"/\")); assertTrue(isValidName(\"/\")); assertFalse(DFSUtil.isValidName(\"\"));(DFSUtil(\"\")); }", "n_tokens": 64, "n_pass": [194, 19, 18]}
{"time": "2023-09-24 02:07:10.616949", "score": "0.8182", "loss": "1.3395", "code": " void testIsValidName() {(DFSUtilDFSUtil.isValidName(\"/bar\")); (DFSUtil(\"/\")); assertTrue(isValidName(\"/\"));(DFSUtil.isValidName(\"\"));(DFSUtil(\"\")); }", "n_tokens": 62, "n_pass": [197, 20, 19]}
{"time": "2023-09-24 02:07:12.297424", "score": "0.8102", "loss": "1.6505", "code": " void testIsValidName() {(DFSUtilDFSUtil.isValidName(\"/bar\")); (DFSUtil(\"/\")); assertTrue(isValidName(\"/\"));(DFSUtil(\"\"));(DFSUtil(\"\")); }", "n_tokens": 60, "n_pass": [199, 21, 20]}
{"time": "2023-09-24 02:07:21.442432", "score": "0.8102", "loss": "1.6505", "code": " void testIsValidName() {(DFSUtilDFSUtil.isValidName(\"/bar\")); (DFSUtil(\"/\")); assertTrue(isValidName(\"/\"));(DFSUtil(\"\"));(DFSUtil(\"\"));}", "n_tokens": 59, "n_pass": [304, 24, 21]}
{"time": "2023-09-24 02:07:23.120760", "score": "0.8102", "loss": "1.6505", "code": "void testIsValidName() {(DFSUtilDFSUtil.isValidName(\"/bar\")); (DFSUtil(\"/\")); assertTrue(isValidName(\"/\"));(DFSUtil(\"\"));(DFSUtil(\"\"));}", "n_tokens": 58, "n_pass": [305, 25, 22]}
{"time": "2023-09-24 02:07:25.355174", "score": "0.8102", "loss": "1.6505", "code": "void testIsValidName(){(DFSUtilDFSUtil.isValidName(\"/bar\")); (DFSUtil(\"/\")); assertTrue(isValidName(\"/\"));(DFSUtil(\"\"));(DFSUtil(\"\"));}", "n_tokens": 57, "n_pass": [311, 26, 23]}
{"time": "2023-09-24 02:07:27.199669", "score": "0.813", "loss": "1.6868", "code": "void testIsValidName(){(DFSUtil.isValidName(\"/bar\")); (DFSUtil(\"/\")); assertTrue(isValidName(\"/\"));(DFSUtil(\"\"));(DFSUtil(\"\"));}", "n_tokens": 56, "n_pass": [314, 27, 24]}
{"time": "2023-09-24 02:07:30.889120", "score": "0.813", "loss": "1.6868", "code": "void testIsValidName(){(DFSUtil.isValidName(\"bar\")); (DFSUtil(\"/\")); assertTrue(isValidName(\"/\"));(DFSUtil(\"\"));(DFSUtil(\"\"));}", "n_tokens": 55, "n_pass": [320, 29, 25]}
{"time": "2023-09-24 02:07:32.655167", "score": "0.8303", "loss": "1.4065", "code": "void testIsValidName(){(DFSUtil.isValidName(\"\")); (DFSUtil(\"/\")); assertTrue(isValidName(\"/\"));(DFSUtil(\"\"));(DFSUtil(\"\"));}", "n_tokens": 54, "n_pass": [321, 30, 26]}
{"time": "2023-09-24 02:07:34.323875", "score": "0.8303", "loss": "1.4065", "code": "void testIsValidName(){(DFSUtil.isValidName(\"\"));(DFSUtil(\"/\")); assertTrue(isValidName(\"/\"));(DFSUtil(\"\"));(DFSUtil(\"\"));}", "n_tokens": 53, "n_pass": [326, 31, 27]}
{"time": "2023-09-24 02:07:36.077757", "score": "0.8304", "loss": "1.4028", "code": "void testIsValidName(){(DFSUtil.isValidName(\"\"));((\"/\")); assertTrue(isValidName(\"/\"));(DFSUtil(\"\"));(DFSUtil(\"\"));}", "n_tokens": 52, "n_pass": [328, 32, 28]}
{"time": "2023-09-24 02:07:37.831121", "score": "0.8494", "loss": "1.1794", "code": "void testIsValidName(){(DFSUtil.isValidName(\"\"));((\"\")); assertTrue(isValidName(\"/\"));(DFSUtil(\"\"));(DFSUtil(\"\"));}", "n_tokens": 51, "n_pass": [331, 33, 29]}
{"time": "2023-09-24 02:07:39.550988", "score": "0.8494", "loss": "1.1794", "code": "void testIsValidName(){(DFSUtil.isValidName(\"\"));((\"\"));assertTrue(isValidName(\"/\"));(DFSUtil(\"\"));(DFSUtil(\"\"));}", "n_tokens": 50, "n_pass": [336, 34, 30]}
{"time": "2023-09-24 02:07:44.649973", "score": "0.8779", "loss": "0.9822", "code": "void testIsValidName(){(DFSUtil.isValidName(\"\"));((\"\"));assertTrue(isValidName(\"\"));(DFSUtil(\"\"));(DFSUtil(\"\"));}", "n_tokens": 49, "n_pass": [342, 37, 31]}
{"time": "2023-09-24 02:07:46.349639", "score": "0.8139", "loss": "1.3038", "code": "void testIsValidName(){(DFSUtil.isValidName(\"\"));((\"\"));assertTrue(isValidName(\"\"));((\"\"));(DFSUtil(\"\"));}", "n_tokens": 48, "n_pass": [348, 38, 32]}
{"time": "2023-09-24 02:07:54.107420", "score": "0.7139", "loss": "2.7771", "code": "void testIsValidName(){(DFSUtil.isValidName(\"\"));((\"\"));assertTrue((\"\"));((\"\"));(DFSUtil(\"\"));}", "n_tokens": 47, "n_pass": [389, 42, 33]}

Minimal simplified code:
void testIsValidName(){(DFSUtil.isValidName(""));((""));assertTrue((""));((""));(DFSUtil(""));}

