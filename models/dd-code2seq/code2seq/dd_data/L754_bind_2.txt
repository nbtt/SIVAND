
path = /Users/lap13494/workspace/ppl-extra-final/java-small/test/hadoop-splitted/Server_bind_1.java
method_name = bind
method_body = public static void bind(ServerSocket socket, InetSocketAddress address, int backlog, Configuration conf, String rangeConf) throws IOException { try { IntegerRanges range = null; if (rangeConf != null) { range = conf.getRange(rangeConf, ""); } if (range == null || range.isEmpty() || (address.getPort() != 0)) { socket.bind(address, backlog); } else { for (Integer port : range) { if (socket.isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress(), port); socket.bind(temp, backlog); } catch (BindException e) { } } if (!socket.isBound()) { throw new BindException("Could not find a free port in " + range); } } } catch (SocketException e) { throw NetUtils.wrapException(null, 0, address.getHostName(), address.getPort(), e); } }
predict, score, loss = bind, 0.9759387373924255, 0.11297307163476944

Trace of simplified code(s):
{"time": "2023-09-24 02:28:36.889076", "score": "0.9744", "loss": "0.1085", "code": "public static void bind(ServerSocket socket, InetSocketAddress address, int backlog, Configuration conf, String rangeConf) throws IOException { try { IntegerRanges range = null; if (rangeConf != null) { range = conf.getRange(rangeConf, \"\"); } if (range == null || range.isEmpty() || (address.getPort() != 0)) { socket.bind(address, backlog); } else { for (Integer port : range) { if (socket.isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress(), port); socket.bind(temp, backlog); } catch (BindException e) { } } if (!socket.isBound()) { throw new BindException(\"Could not find a free port in \" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(null, 0, address.getHostName(), address.getPort(), e); } }", "n_tokens": 308, "n_pass": [1, 1, 1]}
{"time": "2023-09-24 02:28:39.260587", "score": "0.8539", "loss": "0.3565", "code": "public static void bind(ServerSocketint backlog, Configuration conf, String rangeConf) throws IOException { try { IntegerRanges range = null; if (rangeConf != null) { range = conf.getRange(rangeConf, \"\"); } if (range == null || range.isEmpty() || (address.getPort() != 0)) { socket.bind(address, backlog); } else { for (Integer port : range) { if (socket.isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress(), port); socket.bind(temp, backlog); } catch (BindException e) { } } if (!socket.isBound()) { throw new BindException(\"Could not find a free port in \" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(null, 0, address.getHostName(), address.getPort(), e); } }", "n_tokens": 299, "n_pass": [93, 2, 2]}
{"time": "2023-09-24 02:28:41.512320", "score": "0.9154", "loss": "0.236", "code": "public static void bind(ServerSocketint backlog, Configuration conf, String rangeConf) throws IOException { try { IntegerRanges range = null; if (rangeConf != null) { range = conf.getRange(rangeConf, \"\"); } if (range == null || range.isEmpty() || (address.getPort() != 0)) { socket.bind(address, backlog); } else { for (Integer port : range) { if (socket.isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress(), port); socket.bind(temp, backlog); } catch (BindException e) { } } if (!socket.isBound()) { throw new BindException(\"Could in \" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(null, 0, address.getHostName(), address.getPort(), e); } }", "n_tokens": 289, "n_pass": [117, 3, 3]}
{"time": "2023-09-24 02:28:43.879259", "score": "0.934", "loss": "0.1808", "code": "void bind(ServerSocketint backlog, Configuration conf, String rangeConf) throws IOException { try { IntegerRanges range = null; if (rangeConf != null) { range = conf.getRange(rangeConf, \"\"); } if (range == null || range.isEmpty() || (address.getPort() != 0)) { socket.bind(address, backlog); } else { for (Integer port : range) { if (socket.isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress(), port); socket.bind(temp, backlog); } catch (BindException e) { } } if (!socket.isBound()) { throw new BindException(\"Could in \" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(null, 0, address.getHostName(), address.getPort(), e); } }", "n_tokens": 285, "n_pass": [220, 4, 4]}
{"time": "2023-09-24 02:28:45.633197", "score": "0.8615", "loss": "0.3653", "code": "void bind(ServerSocketint backlogconf, String rangeConf) throws IOException { try { IntegerRanges range = null; if (rangeConf != null) { range = conf.getRange(rangeConf, \"\"); } if (range == null || range.isEmpty() || (address.getPort() != 0)) { socket.bind(address, backlog); } else { for (Integer port : range) { if (socket.isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress(), port); socket.bind(temp, backlog); } catch (BindException e) { } } if (!socket.isBound()) { throw new BindException(\"Could in \" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(null, 0, address.getHostName(), address.getPort(), e); } }", "n_tokens": 281, "n_pass": [223, 5, 5]}
{"time": "2023-09-24 02:28:47.475337", "score": "0.94", "loss": "0.1756", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { IntegerRanges range = null; if (rangeConf != null) { range = conf.getRange(rangeConf, \"\"); } if (range == null || range.isEmpty() || (address.getPort() != 0)) { socket.bind(address, backlog); } else { for (Integer port : range) { if (socket.isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress(), port); socket.bind(temp, backlog); } catch (BindException e) { } } if (!socket.isBound()) { throw new BindException(\"Could in \" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(null, 0, address.getHostName(), address.getPort(), e); } }", "n_tokens": 277, "n_pass": [226, 6, 6]}
{"time": "2023-09-24 02:28:49.497967", "score": "0.96", "loss": "0.1264", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { IntegerRanges range = null; if (rangeConf != null) { range = conf.getRange(); } if (range == null || range.isEmpty() || (address.getPort() != 0)) { socket.bind(address, backlog); } else { for (Integer port : range) { if (socket.isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress(), port); socket.bind(temp, backlog); } catch (BindException e) { } } if (!socket.isBound()) { throw new BindException(\"Could in \" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(null, 0, address.getHostName(), address.getPort(), e); } }", "n_tokens": 272, "n_pass": [235, 7, 7]}
{"time": "2023-09-24 02:28:51.330146", "score": "0.9305", "loss": "0.1951", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { IntegerRanges range = null; if (rangeConf != null) { range = conf.getRange(); } if (range || range.isEmpty() || (address.getPort() != 0)) { socket.bind(address, backlog); } else { for (Integer port : range) { if (socket.isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress(), port); socket.bind(temp, backlog); } catch (BindException e) { } } if (!socket.isBound()) { throw new BindException(\"Could in \" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(null, 0, address.getHostName(), address.getPort(), e); } }", "n_tokens": 267, "n_pass": [238, 8, 8]}
{"time": "2023-09-24 02:28:54.016718", "score": "0.9653", "loss": "0.1219", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { IntegerRanges range = null; if (rangeConf != null) { range = conf.getRange(); } if (range || range() || (address.getPort() != 0)) { socket.bind(address, backlog); } else { for (Integer port : range) { if (socket.isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress(), port); socket.bind(temp, backlog); } catch (BindException e) { } } if (!socket.isBound()) { throw new BindException(\"Could in \" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(null, 0, address.getHostName(), address.getPort(), e); } }", "n_tokens": 265, "n_pass": [409, 9, 9]}
{"time": "2023-09-24 02:28:55.874608", "score": "0.9547", "loss": "0.1371", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { IntegerRanges range = null; if (rangeConf != null) { range = conf.getRange(); } if (range || range || (address.getPort() != 0)) { socket.bind(address, backlog); } else { for (Integer port : range) { if (socket.isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress(), port); socket.bind(temp, backlog); } catch (BindException e) { } } if (!socket.isBound()) { throw new BindException(\"Could in \" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(null, 0, address.getHostName(), address.getPort(), e); } }", "n_tokens": 263, "n_pass": [410, 10, 10]}
{"time": "2023-09-24 02:28:57.590930", "score": "0.9004", "loss": "0.2638", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { IntegerRanges range = null; if (rangeConf != null) { range = conf.getRange(); } if (range || range| (address.getPort() != 0)) { socket.bind(address, backlog); } else { for (Integer port : range) { if (socket.isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress(), port); socket.bind(temp, backlog); } catch (BindException e) { } } if (!socket.isBound()) { throw new BindException(\"Could in \" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(null, 0, address.getHostName(), address.getPort(), e); } }", "n_tokens": 261, "n_pass": [411, 11, 11]}
{"time": "2023-09-24 02:28:59.413776", "score": "0.8533", "loss": "0.3674", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { IntegerRanges range = null; if (rangeConf != null) { range = conf.getRange(); } if (range || range(address.getPort() != 0)) { socket.bind(address, backlog); } else { for (Integer port : range) { if (socket.isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress(), port); socket.bind(temp, backlog); } catch (BindException e) { } } if (!socket.isBound()) { throw new BindException(\"Could in \" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(null, 0, address.getHostName(), address.getPort(), e); } }", "n_tokens": 259, "n_pass": [412, 12, 12]}
{"time": "2023-09-24 02:29:01.149977", "score": "0.9463", "loss": "0.1451", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { IntegerRanges range = null; if (rangeConf != null) { range = conf.getRange(); } if (range || range(address() != 0)) { socket.bind(address, backlog); } else { for (Integer port : range) { if (socket.isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress(), port); socket.bind(temp, backlog); } catch (BindException e) { } } if (!socket.isBound()) { throw new BindException(\"Could in \" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(null, 0, address.getHostName(), address.getPort(), e); } }", "n_tokens": 257, "n_pass": [414, 13, 13]}
{"time": "2023-09-24 02:29:02.992634", "score": "0.9583", "loss": "0.1198", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { IntegerRanges range = null; if (rangeConf != null) { range = conf.getRange(); } if (range || range(address != 0)) { socket.bind(address, backlog); } else { for (Integer port : range) { if (socket.isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress(), port); socket.bind(temp, backlog); } catch (BindException e) { } } if (!socket.isBound()) { throw new BindException(\"Could in \" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(null, 0, address.getHostName(), address.getPort(), e); } }", "n_tokens": 255, "n_pass": [415, 14, 14]}
{"time": "2023-09-24 02:29:04.717804", "score": "0.9676", "loss": "0.1065", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { IntegerRanges range = null; if (rangeConf != null) { range = conf.getRange(); } if (range || range(address= 0)) { socket.bind(address, backlog); } else { for (Integer port : range) { if (socket.isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress(), port); socket.bind(temp, backlog); } catch (BindException e) { } } if (!socket.isBound()) { throw new BindException(\"Could in \" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(null, 0, address.getHostName(), address.getPort(), e); } }", "n_tokens": 253, "n_pass": [416, 15, 15]}
{"time": "2023-09-24 02:29:06.605032", "score": "0.9628", "loss": "0.109", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { IntegerRanges range = null; if (rangeConf != null) { range = conf.getRange(); } if (range || range(address0)) { socket.bind(address, backlog); } else { for (Integer port : range) { if (socket.isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress(), port); socket.bind(temp, backlog); } catch (BindException e) { } } if (!socket.isBound()) { throw new BindException(\"Could in \" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(null, 0, address.getHostName(), address.getPort(), e); } }", "n_tokens": 251, "n_pass": [417, 16, 16]}
{"time": "2023-09-24 02:29:08.336635", "score": "0.9701", "loss": "0.0828", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { IntegerRanges range = null; if (rangeConf != null) { range = conf.getRange(); } if (range || range(address0)) { bind(address, backlog); } else { for (Integer port : range) { if (socket.isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress(), port); socket.bind(temp, backlog); } catch (BindException e) { } } if (!socket.isBound()) { throw new BindException(\"Could in \" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(null, 0, address.getHostName(), address.getPort(), e); } }", "n_tokens": 249, "n_pass": [421, 17, 17]}
{"time": "2023-09-24 02:29:10.201881", "score": "0.9733", "loss": "0.0849", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { IntegerRanges range = null; if (rangeConf != null) { range = conf.getRange(); } if (range || range(address0)) { bind( backlog); } else { for (Integer port : range) { if (socket.isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress(), port); socket.bind(temp, backlog); } catch (BindException e) { } } if (!socket.isBound()) { throw new BindException(\"Could in \" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(null, 0, address.getHostName(), address.getPort(), e); } }", "n_tokens": 247, "n_pass": [423, 18, 18]}
{"time": "2023-09-24 02:29:12.024982", "score": "0.9694", "loss": "0.0916", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { IntegerRanges range = null; if (rangeConf != null) { range = conf.getRange(); } if (range || range(address0)) { bind(); } else { for (Integer port : range) { if (socket.isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress(), port); socket.bind(temp, backlog); } catch (BindException e) { } } if (!socket.isBound()) { throw new BindException(\"Could in \" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(null, 0, address.getHostName(), address.getPort(), e); } }", "n_tokens": 245, "n_pass": [424, 19, 19]}
{"time": "2023-09-24 02:29:13.793886", "score": "0.8757", "loss": "0.2981", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { IntegerRanges range = null; if (rangeConf != null) { range = conf.getRange(); } if (range || range(address0)) { bind(); } { for (Integer port : range) { if (socket.isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress(), port); socket.bind(temp, backlog); } catch (BindException e) { } } if (!socket.isBound()) { throw new BindException(\"Could in \" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(null, 0, address.getHostName(), address.getPort(), e); } }", "n_tokens": 243, "n_pass": [427, 20, 20]}
{"time": "2023-09-24 02:29:15.622625", "score": "0.9688", "loss": "0.0889", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { IntegerRanges range = null; if (rangeConf != null) { range = conf.getRange(); } if (range || range(address0)) { bind(); } { for (Integer port : range) { if (isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress(), port); socket.bind(temp, backlog); } catch (BindException e) { } } if (!socket.isBound()) { throw new BindException(\"Could in \" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(null, 0, address.getHostName(), address.getPort(), e); } }", "n_tokens": 241, "n_pass": [438, 21, 21]}
{"time": "2023-09-24 02:29:17.390054", "score": "0.9445", "loss": "0.1571", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { IntegerRanges range = null; if (rangeConf != null) { range = conf.getRange(); } if (range || range(address0)) { bind(); } { for (Integer port : range) { if (isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (!socket.isBound()) { throw new BindException(\"Could in \" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(null, 0, address.getHostName(), address.getPort(), e); } }", "n_tokens": 238, "n_pass": [448, 22, 22]}
{"time": "2023-09-24 02:29:19.319410", "score": "0.9172", "loss": "0.2157", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { IntegerRanges range = null; if (rangeConf != null) { range = conf.getRange(); } if (range || range(address0)) { bind(); } { for (Integer port : range) { if (isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) { throw new BindException(\"Could in \" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(null, 0, address.getHostName(), address.getPort(), e); } }", "n_tokens": 235, "n_pass": [460, 23, 23]}
{"time": "2023-09-24 02:29:21.081973", "score": "0.975", "loss": "0.1009", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { IntegerRanges range = null; if (rangeConf != null) { range = conf.getRange(); } if (range || range(address0)) { bind(); } { for (Integer port : range) { if (isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {new BindException(\"Could in \" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(null, 0, address.getHostName(), address.getPort(), e); } }", "n_tokens": 232, "n_pass": [463, 24, 24]}
{"time": "2023-09-24 02:29:22.856296", "score": "0.8748", "loss": "0.3029", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { IntegerRanges range = null; if (rangeConf != null) { range = conf.getRange(); } if (range || range(address0)) { bind(); } { for (Integer port : range) { if (isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could in \" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(null, 0, address.getHostName(), address.getPort(), e); } }", "n_tokens": 229, "n_pass": [464, 25, 25]}
{"time": "2023-09-24 02:29:24.804065", "score": "0.8838", "loss": "0.2891", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { IntegerRanges range = null; if (rangeConf != null) { range = conf.getRange(); } if (range || range(address0)) { bind(); } { for (Integer port : range) { if (isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(null, 0, address.getHostName(), address.getPort(), e); } }", "n_tokens": 226, "n_pass": [466, 26, 26]}
{"time": "2023-09-24 02:29:26.856306", "score": "0.9139", "loss": "0.2214", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { IntegerRanges range = null; if (rangeConf != null) { range = conf.getRange(); } if (range || range(address0)) { bind(); } { for (Integer port : range) { if (isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(0, address.getHostName(), address.getPort(), e); } }", "n_tokens": 223, "n_pass": [477, 27, 27]}
{"time": "2023-09-24 02:29:28.840676", "score": "0.9357", "loss": "0.1678", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { IntegerRanges range = null; if (rangeConf != null) { range = conf.getRange(); } if (range || range(address0)) { bind(); } { for (Integer port : range) { if (isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(address.getHostName(), address.getPort(), e); } }", "n_tokens": 220, "n_pass": [478, 28, 28]}
{"time": "2023-09-24 02:29:30.648370", "score": "0.9231", "loss": "0.2027", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { IntegerRanges range = null; if (rangeConf != null) { range = conf.getRange(); } if (range || range(address0)) { bind(); } { for (Integer port : range) { if (isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(address.getHostName(),getPort(), e); } }", "n_tokens": 217, "n_pass": [481, 29, 29]}
{"time": "2023-09-24 02:29:32.355683", "score": "0.9016", "loss": "0.2471", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { IntegerRanges range = null; if (rangeConf != null) { range = conf.getRange(); } if (range || range(address0)) { bind(); } { for (Integer port : range) { if (isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(address.getHostName(),getPort()); } }", "n_tokens": 214, "n_pass": [483, 30, 30]}
{"time": "2023-09-24 02:29:34.716352", "score": "0.9314", "loss": "0.1611", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = conf.getRange(); } if (range || range(address0)) { bind(); } { for (Integer port : range) { if (isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(address.getHostName(),getPort()); } }", "n_tokens": 212, "n_pass": [497, 31, 31]}
{"time": "2023-09-24 02:29:36.578028", "score": "0.8561", "loss": "0.3285", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if (range || range(address0)) { bind(); } { for (Integer port : range) { if (isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(address.getHostName(),getPort()); } }", "n_tokens": 210, "n_pass": [510, 32, 32]}
{"time": "2023-09-24 02:29:38.463466", "score": "0.9039", "loss": "0.2347", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if (range ||(address0)) { bind(); } { for (Integer port : range) { if (isBound()) break; try { InetSocketAddress temp = new InetSocketAddress(address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(address.getHostName(),getPort()); } }", "n_tokens": 208, "n_pass": [518, 33, 33]}
{"time": "2023-09-24 02:29:40.307538", "score": "0.8957", "loss": "0.2577", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if (range ||(address0)) { bind(); } { for (Integer port : range) { if (isBound()) break; try { InetSocketAddress temp = (address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(address.getHostName(),getPort()); } }", "n_tokens": 205, "n_pass": [542, 34, 34]}
{"time": "2023-09-24 02:29:42.318890", "score": "0.8987", "loss": "0.2436", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if (range ||(address0)) { bind(); } { for (Integer port : range) { if (isBound()) break; try { InetSocketAddress temp = (address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(address.getHostNamegetPort()); } }", "n_tokens": 202, "n_pass": [570, 35, 35]}
{"time": "2023-09-24 02:29:44.062231", "score": "0.8961", "loss": "0.2559", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if (range ||(address0)) { bind(); } { for (Integer port : range) { if (isBound()) break; try { InetSocketAddress temp = (address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(address.getHostName); } }", "n_tokens": 199, "n_pass": [571, 36, 36]}
{"time": "2023-09-24 02:29:46.374404", "score": "0.8925", "loss": "0.2685", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if (range (address0)) { bind(); } { for (Integer port : range) { if (isBound()) break; try { InetSocketAddress temp = (address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(address.getHostName); } }", "n_tokens": 197, "n_pass": [603, 37, 37]}
{"time": "2023-09-24 02:29:48.438506", "score": "0.8904", "loss": "0.2676", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if (range (address0)) { bind(); } { for (Integer port : range) { if (isBound()) break; try { InetSocketAddress temp = (address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(); } }", "n_tokens": 194, "n_pass": [653, 38, 38]}
{"time": "2023-09-24 02:29:50.701250", "score": "0.8878", "loss": "0.2754", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((address0)) { bind(); } { for (Integer port : range) { if (isBound()) break; try { InetSocketAddress temp = (address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(); } }", "n_tokens": 192, "n_pass": [684, 39, 39]}
{"time": "2023-09-24 02:30:08.932830", "score": "0.8752", "loss": "0.3108", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)) { bind(); } { for (Integer port : range) { if (isBound()) break; try { InetSocketAddress temp = (address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(); } }", "n_tokens": 191, "n_pass": [923, 40, 40]}
{"time": "2023-09-24 02:30:10.731102", "score": "0.8752", "loss": "0.3108", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){ bind(); } { for (Integer port : range) { if (isBound()) break; try { InetSocketAddress temp = (address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(); } }", "n_tokens": 190, "n_pass": [927, 41, 41]}
{"time": "2023-09-24 02:30:12.444556", "score": "0.8752", "loss": "0.3108", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind(); } { for (Integer port : range) { if (isBound()) break; try { InetSocketAddress temp = (address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(); } }", "n_tokens": 189, "n_pass": [929, 42, 42]}
{"time": "2023-09-24 02:30:14.290716", "score": "0.8752", "loss": "0.3108", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();} { for (Integer port : range) { if (isBound()) break; try { InetSocketAddress temp = (address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(); } }", "n_tokens": 188, "n_pass": [934, 43, 43]}
{"time": "2023-09-24 02:30:15.948170", "score": "0.8752", "loss": "0.3108", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{ for (Integer port : range) { if (isBound()) break; try { InetSocketAddress temp = (address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(); } }", "n_tokens": 187, "n_pass": [936, 44, 44]}
{"time": "2023-09-24 02:30:17.767551", "score": "0.8752", "loss": "0.3108", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for (Integer port : range) { if (isBound()) break; try { InetSocketAddress temp = (address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(); } }", "n_tokens": 186, "n_pass": [938, 45, 45]}
{"time": "2023-09-24 02:30:19.587973", "score": "0.8752", "loss": "0.3108", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port : range) { if (isBound()) break; try { InetSocketAddress temp = (address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(); } }", "n_tokens": 185, "n_pass": [940, 46, 46]}
{"time": "2023-09-24 02:30:21.664005", "score": "0.8752", "loss": "0.3108", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port: range) { if (isBound()) break; try { InetSocketAddress temp = (address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(); } }", "n_tokens": 184, "n_pass": [945, 47, 47]}
{"time": "2023-09-24 02:30:23.625008", "score": "0.8752", "loss": "0.3108", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range) { if (isBound()) break; try { InetSocketAddress temp = (address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(); } }", "n_tokens": 183, "n_pass": [947, 48, 48]}
{"time": "2023-09-24 02:30:25.486141", "score": "0.8752", "loss": "0.3108", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){ if (isBound()) break; try { InetSocketAddress temp = (address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(); } }", "n_tokens": 182, "n_pass": [950, 49, 49]}
{"time": "2023-09-24 02:30:27.192661", "score": "0.8752", "loss": "0.3108", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if (isBound()) break; try { InetSocketAddress temp = (address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(); } }", "n_tokens": 181, "n_pass": [952, 50, 50]}
{"time": "2023-09-24 02:30:29.003727", "score": "0.8752", "loss": "0.3108", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound()) break; try { InetSocketAddress temp = (address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(); } }", "n_tokens": 180, "n_pass": [954, 51, 51]}
{"time": "2023-09-24 02:30:30.779955", "score": "0.8752", "loss": "0.3108", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())break; try { InetSocketAddress temp = (address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(); } }", "n_tokens": 179, "n_pass": [960, 52, 52]}
{"time": "2023-09-24 02:30:32.458211", "score": "0.8752", "loss": "0.3108", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound()); try { InetSocketAddress temp = (address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(); } }", "n_tokens": 178, "n_pass": [961, 53, 53]}
{"time": "2023-09-24 02:30:34.167190", "score": "0.8498", "loss": "0.3527", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound()) try { InetSocketAddress temp = (address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(); } }", "n_tokens": 177, "n_pass": [962, 54, 54]}
{"time": "2023-09-24 02:30:35.944882", "score": "0.8498", "loss": "0.3527", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try { InetSocketAddress temp = (address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(); } }", "n_tokens": 176, "n_pass": [963, 55, 55]}
{"time": "2023-09-24 02:30:37.706607", "score": "0.8498", "loss": "0.3527", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try{ InetSocketAddress temp = (address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(); } }", "n_tokens": 175, "n_pass": [965, 56, 56]}
{"time": "2023-09-24 02:30:39.445085", "score": "0.8498", "loss": "0.3527", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try{InetSocketAddress temp = (address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(); } }", "n_tokens": 174, "n_pass": [967, 57, 57]}
{"time": "2023-09-24 02:30:41.121972", "score": "0.8386", "loss": "0.3719", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try{ temp = (address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(); } }", "n_tokens": 173, "n_pass": [968, 58, 58]}
{"time": "2023-09-24 02:30:43.028460", "score": "0.8386", "loss": "0.3719", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try{temp = (address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(); } }", "n_tokens": 172, "n_pass": [969, 59, 59]}
{"time": "2023-09-24 02:30:44.767787", "score": "0.8386", "loss": "0.3719", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try{temp= (address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(); } }", "n_tokens": 171, "n_pass": [971, 60, 60]}
{"time": "2023-09-24 02:30:46.521115", "score": "0.8399", "loss": "0.3752", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try{temp (address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(); } }", "n_tokens": 170, "n_pass": [972, 61, 61]}
{"time": "2023-09-24 02:30:48.404759", "score": "0.8399", "loss": "0.3752", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try{temp(address.getAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(); } }", "n_tokens": 169, "n_pass": [973, 62, 62]}
{"time": "2023-09-24 02:30:50.126544", "score": "0.848", "loss": "0.3416", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try{temp(addressgetAddress()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(); } }", "n_tokens": 168, "n_pass": [976, 63, 63]}
{"time": "2023-09-24 02:30:51.934009", "score": "0.8334", "loss": "0.3769", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try{temp(address()); socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(); } }", "n_tokens": 167, "n_pass": [977, 64, 64]}
{"time": "2023-09-24 02:30:53.799205", "score": "0.8334", "loss": "0.3769", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try{temp(address());socket.bind(temp, backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(); } }", "n_tokens": 166, "n_pass": [982, 65, 65]}
{"time": "2023-09-24 02:30:57.352272", "score": "0.8334", "loss": "0.3769", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try{temp(address());socket.bind(temp,backlog); } catch (BindException e) { } } if (isBound()) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(); } }", "n_tokens": 165, "n_pass": [989, 67, 66]}
{"time": "2023-09-24 02:30:59.166215", "score": "0.8301", "loss": "0.3987", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try{temp(address());socket.bind(temp,backlog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { throw NetUtils.wrapException(); } }", "n_tokens": 163, "n_pass": [1002, 68, 67]}
{"time": "2023-09-24 02:31:01.046975", "score": "0.8276", "loss": "0.4038", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try{temp(address());socket.bind(temp,backlog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { NetUtils.wrapException(); } }", "n_tokens": 161, "n_pass": [1018, 69, 68]}
{"time": "2023-09-24 02:31:02.759106", "score": "0.8268", "loss": "0.4074", "code": "void bind(ServerSocketint backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try{temp(address());socket.bind(temp,backlog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 159, "n_pass": [1019, 70, 69]}
{"time": "2023-09-24 02:31:05.415723", "score": "0.6957", "loss": "0.6834", "code": "void bind(int backlogconf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try{temp(address());socket.bind(temp,backlog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 158, "n_pass": [1028, 71, 70]}
{"time": "2023-09-24 02:31:07.135161", "score": "0.722", "loss": "0.5926", "code": "void bind(int conf, String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try{temp(address());socket.bind(temp,backlog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 157, "n_pass": [1031, 72, 71]}
{"time": "2023-09-24 02:31:08.905567", "score": "0.722", "loss": "0.5926", "code": "void bind(int conf,String rangeConf) { try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try{temp(address());socket.bind(temp,backlog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 156, "n_pass": [1034, 73, 72]}
{"time": "2023-09-24 02:31:10.630756", "score": "0.722", "loss": "0.5926", "code": "void bind(int conf,String rangeConf){ try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try{temp(address());socket.bind(temp,backlog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 155, "n_pass": [1039, 74, 73]}
{"time": "2023-09-24 02:31:12.377548", "score": "0.722", "loss": "0.5926", "code": "void bind(int conf,String rangeConf){try { range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try{temp(address());socket.bind(temp,backlog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 154, "n_pass": [1041, 75, 74]}
{"time": "2023-09-24 02:31:14.454116", "score": "0.722", "loss": "0.5926", "code": "void bind(int conf,String rangeConf){try{ range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try{temp(address());socket.bind(temp,backlog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 153, "n_pass": [1043, 76, 75]}
{"time": "2023-09-24 02:31:16.451553", "score": "0.722", "loss": "0.5926", "code": "void bind(int conf,String rangeConf){try{range = null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try{temp(address());socket.bind(temp,backlog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 152, "n_pass": [1045, 77, 76]}
{"time": "2023-09-24 02:31:18.360480", "score": "0.722", "loss": "0.5926", "code": "void bind(int conf,String rangeConf){try{range= null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try{temp(address());socket.bind(temp,backlog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 151, "n_pass": [1047, 78, 77]}
{"time": "2023-09-24 02:31:20.075328", "score": "0.722", "loss": "0.5926", "code": "void bind(int conf,String rangeConf){try{range=null; if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try{temp(address());socket.bind(temp,backlog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 150, "n_pass": [1049, 79, 78]}
{"time": "2023-09-24 02:31:21.851330", "score": "0.722", "loss": "0.5926", "code": "void bind(int conf,String rangeConf){try{range=null;if (rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try{temp(address());socket.bind(temp,backlog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 149, "n_pass": [1052, 80, 79]}
{"time": "2023-09-24 02:31:23.587159", "score": "0.722", "loss": "0.5926", "code": "void bind(int conf,String rangeConf){try{range=null;if(rangeConf != null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try{temp(address());socket.bind(temp,backlog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 148, "n_pass": [1054, 81, 80]}
{"time": "2023-09-24 02:31:25.302302", "score": "0.722", "loss": "0.5926", "code": "void bind(int conf,String rangeConf){try{range=null;if(rangeConf!= null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try{temp(address());socket.bind(temp,backlog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 147, "n_pass": [1057, 82, 81]}
{"time": "2023-09-24 02:31:27.088792", "score": "0.5891", "loss": "0.8753", "code": "void bind(int conf,String rangeConf){try{range=null;if(rangeConf= null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try{temp(address());socket.bind(temp,backlog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 146, "n_pass": [1058, 83, 82]}
{"time": "2023-09-24 02:31:28.896949", "score": "0.5891", "loss": "0.8753", "code": "void bind(int conf,String rangeConf){try{range=null;if(rangeConf=null) { range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try{temp(address());socket.bind(temp,backlog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 145, "n_pass": [1060, 84, 83]}
{"time": "2023-09-24 02:31:30.638361", "score": "0.5891", "loss": "0.8753", "code": "void bind(int conf,String rangeConf){try{range=null;if(rangeConf=null){ range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try{temp(address());socket.bind(temp,backlog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 144, "n_pass": [1063, 85, 84]}
{"time": "2023-09-24 02:31:32.401289", "score": "0.5891", "loss": "0.8753", "code": "void bind(int conf,String rangeConf){try{range=null;if(rangeConf=null){range = getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try{temp(address());socket.bind(temp,backlog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 143, "n_pass": [1065, 86, 85]}
{"time": "2023-09-24 02:31:34.214891", "score": "0.5891", "loss": "0.8753", "code": "void bind(int conf,String rangeConf){try{range=null;if(rangeConf=null){range= getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try{temp(address());socket.bind(temp,backlog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 142, "n_pass": [1067, 87, 86]}
{"time": "2023-09-24 02:31:35.907407", "score": "0.5891", "loss": "0.8753", "code": "void bind(int conf,String rangeConf){try{range=null;if(rangeConf=null){range=getRange(); } if ((0)){bind();}{for(Integer port:range){if(isBound())try{temp(address());socket.bind(temp,backlog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 141, "n_pass": [1069, 88, 87]}
{"time": "2023-09-24 02:31:37.677717", "score": "0.5891", "loss": "0.8753", "code": "void bind(int conf,String rangeConf){try{range=null;if(rangeConf=null){range=getRange();} if ((0)){bind();}{for(Integer port:range){if(isBound())try{temp(address());socket.bind(temp,backlog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 140, "n_pass": [1074, 89, 88]}
{"time": "2023-09-24 02:31:39.420575", "score": "0.5891", "loss": "0.8753", "code": "void bind(int conf,String rangeConf){try{range=null;if(rangeConf=null){range=getRange();}if ((0)){bind();}{for(Integer port:range){if(isBound())try{temp(address());socket.bind(temp,backlog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 139, "n_pass": [1076, 90, 89]}
{"time": "2023-09-24 02:31:41.260855", "score": "0.5891", "loss": "0.8753", "code": "void bind(int conf,String rangeConf){try{range=null;if(rangeConf=null){range=getRange();}if((0)){bind();}{for(Integer port:range){if(isBound())try{temp(address());socket.bind(temp,backlog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 138, "n_pass": [1078, 91, 90]}
{"time": "2023-09-24 02:31:43.328976", "score": "0.5502", "loss": "0.9376", "code": "void bind(int conf,String rangeConf){try{range=null;if(rangeConf=null){range=getRange();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind(temp,backlog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 137, "n_pass": [1108, 92, 91]}
{"time": "2023-09-24 02:31:49.830378", "score": "0.5169", "loss": "1.167", "code": "void bind(int conf,String rangeConf){try{rangenull;if(rangeConf=null){range=getRange();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind(temp,backlog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 136, "n_pass": [1168, 95, 92]}
{"time": "2023-09-24 02:31:51.538200", "score": "0.518", "loss": "1.141", "code": "void bind(int conf,String rangeConf){try{range;if(rangeConf=null){range=getRange();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind(temp,backlog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 135, "n_pass": [1169, 96, 93]}
{"time": "2023-09-24 02:31:53.321113", "score": "0.5928", "loss": "1.0762", "code": "void bind(int conf,String rangeConf){try{range;if(rangeConfnull){range=getRange();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind(temp,backlog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 134, "n_pass": [1174, 97, 94]}
{"time": "2023-09-24 02:31:55.070163", "score": "0.6614", "loss": "0.8477", "code": "void bind(int conf,String rangeConf){try{range;if(rangeConf){range=getRange();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind(temp,backlog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 133, "n_pass": [1175, 98, 95]}
{"time": "2023-09-24 02:31:56.824025", "score": "0.6838", "loss": "0.8255", "code": "void bind(int conf,String rangeConf){try{range;if(rangeConf){rangegetRange();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind(temp,backlog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 132, "n_pass": [1179, 99, 96]}
{"time": "2023-09-24 02:31:58.553779", "score": "0.6835", "loss": "0.832", "code": "void bind(int conf,String rangeConf){try{range;if(rangeConf){range();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind(temp,backlog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 131, "n_pass": [1180, 100, 97]}
{"time": "2023-09-24 02:32:02.360727", "score": "0.5349", "loss": "1.1525", "code": "void bind(int conf,String rangeConf){try{range;if(rangeConf){range();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind(tempbacklog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 130, "n_pass": [1226, 102, 98]}
{"time": "2023-09-24 02:32:05.146601", "score": "0.6053", "loss": "0.9761", "code": "void bind(int conf,String rangeConf){try{;if(rangeConf){range();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind(tempbacklog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 129, "n_pass": [1273, 103, 99]}
{"time": "2023-09-24 02:32:06.907953", "score": "0.6053", "loss": "0.9761", "code": "void bind(int conf,String rangeConf){try{if(rangeConf){range();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind(tempbacklog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 128, "n_pass": [1274, 104, 100]}
{"time": "2023-09-24 02:32:10.723441", "score": "0.6909", "loss": "0.7542", "code": "void bind(int conf,String rangeConf){try{if(rangeConf){range();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind(backlog); } catch (BindException e) { } } if (isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 127, "n_pass": [1325, 106, 101]}
{"time": "2023-09-24 02:32:23.158843", "score": "0.6909", "loss": "0.7542", "code": "void bind(int conf,String rangeConf){try{if(rangeConf){range();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind(backlog); } catch (BindException e) { } } if(isBound) {(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 126, "n_pass": [1485, 108, 102]}
{"time": "2023-09-24 02:32:24.951767", "score": "0.6909", "loss": "0.7542", "code": "void bind(int conf,String rangeConf){try{if(rangeConf){range();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind(backlog); } catch (BindException e) { } } if(isBound){(\"Could\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 125, "n_pass": [1489, 109, 103]}
{"time": "2023-09-24 02:32:26.750100", "score": "0.7401", "loss": "0.637", "code": "void bind(int conf,String rangeConf){try{if(rangeConf){range();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind(backlog); } catch (BindException e) { } } if(isBound){(\"\" + range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 124, "n_pass": [1493, 110, 104]}
{"time": "2023-09-24 02:32:28.493189", "score": "0.7401", "loss": "0.637", "code": "void bind(int conf,String rangeConf){try{if(rangeConf){range();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind(backlog); } catch (BindException e) { } } if(isBound){(\"\"+ range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 123, "n_pass": [1495, 111, 105]}
{"time": "2023-09-24 02:32:30.169026", "score": "0.7401", "loss": "0.637", "code": "void bind(int conf,String rangeConf){try{if(rangeConf){range();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind(backlog); } catch (BindException e) { } } if(isBound){(\"\"+range); } } } catch (SocketException e) { wrapException(); } }", "n_tokens": 122, "n_pass": [1497, 112, 106]}
{"time": "2023-09-24 02:32:31.947968", "score": "0.7401", "loss": "0.637", "code": "void bind(int conf,String rangeConf){try{if(rangeConf){range();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind(backlog); } catch (BindException e) { } } if(isBound){(\"\"+range);} } } catch (SocketException e) { wrapException(); } }", "n_tokens": 121, "n_pass": [1501, 113, 107]}
{"time": "2023-09-24 02:32:33.809117", "score": "0.7401", "loss": "0.637", "code": "void bind(int conf,String rangeConf){try{if(rangeConf){range();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind(backlog); } catch (BindException e) { } } if(isBound){(\"\"+range);}} } catch (SocketException e) { wrapException(); } }", "n_tokens": 120, "n_pass": [1503, 114, 108]}
{"time": "2023-09-24 02:32:35.673221", "score": "0.7401", "loss": "0.637", "code": "void bind(int conf,String rangeConf){try{if(rangeConf){range();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind(backlog); } catch (BindException e) { } } if(isBound){(\"\"+range);}}} catch (SocketException e) { wrapException(); } }", "n_tokens": 119, "n_pass": [1505, 115, 109]}
{"time": "2023-09-24 02:32:37.562204", "score": "0.7401", "loss": "0.637", "code": "void bind(int conf,String rangeConf){try{if(rangeConf){range();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind(backlog); } catch (BindException e) { } } if(isBound){(\"\"+range);}}}catch (SocketException e) { wrapException(); } }", "n_tokens": 118, "n_pass": [1507, 116, 110]}
{"time": "2023-09-24 02:32:39.410928", "score": "0.7401", "loss": "0.637", "code": "void bind(int conf,String rangeConf){try{if(rangeConf){range();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind(backlog); } catch (BindException e) { } } if(isBound){(\"\"+range);}}}catch(SocketException e) { wrapException(); } }", "n_tokens": 117, "n_pass": [1509, 117, 111]}
{"time": "2023-09-24 02:32:41.163546", "score": "0.7401", "loss": "0.637", "code": "void bind(int conf,String rangeConf){try{if(rangeConf){range();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind(backlog); } catch (BindException e) { } } if(isBound){(\"\"+range);}}}catch(SocketException e){ wrapException(); } }", "n_tokens": 116, "n_pass": [1515, 118, 112]}
{"time": "2023-09-24 02:32:42.813563", "score": "0.7401", "loss": "0.637", "code": "void bind(int conf,String rangeConf){try{if(rangeConf){range();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind(backlog); } catch (BindException e) { } } if(isBound){(\"\"+range);}}}catch(SocketException e){wrapException(); } }", "n_tokens": 115, "n_pass": [1517, 119, 113]}
{"time": "2023-09-24 02:32:44.538124", "score": "0.7401", "loss": "0.637", "code": "void bind(int conf,String rangeConf){try{if(rangeConf){range();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind(backlog); } catch (BindException e) { } } if(isBound){(\"\"+range);}}}catch(SocketException e){wrapException();} }", "n_tokens": 114, "n_pass": [1522, 120, 114]}
{"time": "2023-09-24 02:32:46.284805", "score": "0.7401", "loss": "0.637", "code": "void bind(int conf,String rangeConf){try{if(rangeConf){range();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind(backlog); } catch (BindException e) { } } if(isBound){(\"\"+range);}}}catch(SocketException e){wrapException();}}", "n_tokens": 113, "n_pass": [1524, 121, 115]}
{"time": "2023-09-24 02:32:50.767611", "score": "0.6233", "loss": "0.8942", "code": "void bind(int conf,String rangeConf){try{if(rangeConf){range();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind(); } catch (BindException e) { } } if(isBound){(\"\"+range);}}}catch(SocketException e){wrapException();}}", "n_tokens": 112, "n_pass": [1591, 123, 116]}
{"time": "2023-09-24 02:32:52.541484", "score": "0.6233", "loss": "0.8942", "code": "void bind(int conf,String rangeConf){try{if(rangeConf){range();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind();} catch (BindException e) { } } if(isBound){(\"\"+range);}}}catch(SocketException e){wrapException();}}", "n_tokens": 111, "n_pass": [1594, 124, 117]}
{"time": "2023-09-24 02:32:54.213896", "score": "0.6233", "loss": "0.8942", "code": "void bind(int conf,String rangeConf){try{if(rangeConf){range();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind();}catch (BindException e) { } } if(isBound){(\"\"+range);}}}catch(SocketException e){wrapException();}}", "n_tokens": 110, "n_pass": [1596, 125, 118]}
{"time": "2023-09-24 02:32:55.972843", "score": "0.6233", "loss": "0.8942", "code": "void bind(int conf,String rangeConf){try{if(rangeConf){range();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind();}catch(BindException e) { } } if(isBound){(\"\"+range);}}}catch(SocketException e){wrapException();}}", "n_tokens": 109, "n_pass": [1598, 126, 119]}
{"time": "2023-09-24 02:32:57.731882", "score": "0.6233", "loss": "0.8942", "code": "void bind(int conf,String rangeConf){try{if(rangeConf){range();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind();}catch(BindException e){ } } if(isBound){(\"\"+range);}}}catch(SocketException e){wrapException();}}", "n_tokens": 108, "n_pass": [1604, 127, 120]}
{"time": "2023-09-24 02:32:59.510748", "score": "0.6233", "loss": "0.8942", "code": "void bind(int conf,String rangeConf){try{if(rangeConf){range();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind();}catch(BindException e){} } if(isBound){(\"\"+range);}}}catch(SocketException e){wrapException();}}", "n_tokens": 107, "n_pass": [1606, 128, 121]}
{"time": "2023-09-24 02:33:01.355619", "score": "0.6233", "loss": "0.8942", "code": "void bind(int conf,String rangeConf){try{if(rangeConf){range();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind();}catch(BindException e){}} if(isBound){(\"\"+range);}}}catch(SocketException e){wrapException();}}", "n_tokens": 106, "n_pass": [1608, 129, 122]}
{"time": "2023-09-24 02:33:03.053612", "score": "0.6233", "loss": "0.8942", "code": "void bind(int conf,String rangeConf){try{if(rangeConf){range();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind();}catch(BindException e){}}if(isBound){(\"\"+range);}}}catch(SocketException e){wrapException();}}", "n_tokens": 105, "n_pass": [1610, 130, 123]}

Minimal simplified code:
void bind(int conf,String rangeConf){try{if(rangeConf){range();}if((0)){bind();}{for(Integer port:range){if(isBound())try{(address());socket.bind();}catch(BindException e){}}if(isBound){(""+range);}}}catch(SocketException e){wrapException();}}

