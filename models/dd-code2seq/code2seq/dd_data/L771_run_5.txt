
path = /Users/lap13494/workspace/ppl-extra-final/java-small/test/hadoop-splitted/Server_run_1.java
method_name = run
method_body = public void run() { LOG.info(Thread.currentThread().getName() + ": starting"); SERVER.set(Server.this); connectionManager.startIdleScan(); while (running) { SelectionKey key = null; try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { key = iter.next(); iter.remove(); try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { } key = null; } } catch (OutOfMemoryError e) { LOG.warn("Out of Memory in server select", e); closeCurrentConnection(key, e); connectionManager.closeIdle(true); try { Thread.sleep(60000); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } LOG.info("Stopping " + Thread.currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selector = null; acceptChannel = null; connectionManager.stopIdleScan(); connectionManager.closeAll(); } }
predict, score, loss = run, 0.6707132458686829, 0.5490939617156982

Trace of simplified code(s):
{"time": "2023-09-24 02:36:22.954038", "score": "0.619", "loss": "0.5964", "code": "public void run() { LOG.info(Thread.currentThread().getName() + \": starting\"); SERVER.set(Server.this); connectionManager.startIdleScan(); while (running) { SelectionKey key = null; try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { key = iter.next(); iter.remove(); try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { } key = null; } } catch (OutOfMemoryError e) { LOG.warn(\"Out of Memory in server select\", e); closeCurrentConnection(key, e); connectionManager.closeIdle(true); try { Thread.sleep(60000); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } LOG.info(\"Stopping \" + Thread.currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selector = null; acceptChannel = null; connectionManager.stopIdleScan(); connectionManager.closeAll(); } }", "n_tokens": 391, "n_pass": [1, 1, 1]}
{"time": "2023-09-24 02:36:25.007924", "score": "0.7603", "loss": "0.3755", "code": "public void run() { LOG.info(Thread.currentThread().getName() ); while (running) { SelectionKey key = null; try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { key = iter.next(); iter.remove(); try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { } key = null; } } catch (OutOfMemoryError e) { LOG.warn(\"Out of Memory in server select\", e); closeCurrentConnection(key, e); connectionManager.closeIdle(true); try { Thread.sleep(60000); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } LOG.info(\"Stopping \" + Thread.currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selector = null; acceptChannel = null; connectionManager.stopIdleScan(); connectionManager.closeAll(); } }", "n_tokens": 367, "n_pass": [45, 2, 2]}
{"time": "2023-09-24 02:36:27.626911", "score": "0.953", "loss": "0.0877", "code": "public void run() { LOG.info(Thread.currentThread().getName() ); while (running) { SelectionKey; try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { key = iter.next(); iter.remove(); try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { } key = null; } } catch (OutOfMemoryError e) { LOG.warn(\"Out of Memory in server select\", e); closeCurrentConnection(key, e); connectionManager.closeIdle(true); try { Thread.sleep(60000); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } LOG.info(\"Stopping \" + Thread.currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selector = null; acceptChannel = null; connectionManager.stopIdleScan(); connectionManager.closeAll(); } }", "n_tokens": 361, "n_pass": [182, 3, 3]}
{"time": "2023-09-24 02:36:29.849205", "score": "0.8763", "loss": "0.2027", "code": "public void run() { LOG.info(Thread.currentThread().getName() ); while (running) { SelectionKey; try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { key = iteriter.remove(); try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { } key = null; } } catch (OutOfMemoryError e) { LOG.warn(\"Out of Memory in server select\", e); closeCurrentConnection(key, e); connectionManager.closeIdle(true); try { Thread.sleep(60000); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } LOG.info(\"Stopping \" + Thread.currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selector = null; acceptChannel = null; connectionManager.stopIdleScan(); connectionManager.closeAll(); } }", "n_tokens": 355, "n_pass": [191, 4, 4]}
{"time": "2023-09-24 02:36:31.769767", "score": "0.9378", "loss": "0.1089", "code": "public void run() { LOG.info(Thread.currentThread().getName() ); while (running) { SelectionKey; try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { key = iteriter.remove(); try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) { LOG.warn(\"Out of Memory in server select\", e); closeCurrentConnection(key, e); connectionManager.closeIdle(true); try { Thread.sleep(60000); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } LOG.info(\"Stopping \" + Thread.currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selector = null; acceptChannel = null; connectionManager.stopIdleScan(); connectionManager.closeAll(); } }", "n_tokens": 349, "n_pass": [201, 5, 5]}
{"time": "2023-09-24 02:36:33.639541", "score": "0.9495", "loss": "0.0908", "code": "public void run() { LOG.info(Thread.currentThread().getName() ); while (running) { SelectionKey; try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { key = iteriter.remove(); try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) { LOG.warn(\"Out of select\", e); closeCurrentConnection(key, e); connectionManager.closeIdle(true); try { Thread.sleep(60000); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } LOG.info(\"Stopping \" + Thread.currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selector = null; acceptChannel = null; connectionManager.stopIdleScan(); connectionManager.closeAll(); } }", "n_tokens": 343, "n_pass": [206, 6, 6]}
{"time": "2023-09-24 02:36:35.464453", "score": "0.9387", "loss": "0.1006", "code": "public void run() { LOG.info(Thread.currentThread().getName() ); while (running) { SelectionKey; try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { key = iteriter.remove(); try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) { LOG.warn(\"Out of select\", e, e); connectionManager.closeIdle(true); try { Thread.sleep(60000); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } LOG.info(\"Stopping \" + Thread.currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selector = null; acceptChannel = null; connectionManager.stopIdleScan(); connectionManager.closeAll(); } }", "n_tokens": 337, "n_pass": [208, 7, 7]}
{"time": "2023-09-24 02:36:37.291354", "score": "0.5994", "loss": "0.6546", "code": "public void run() { LOG.info(Thread.currentThread().getName() ); while (running) { SelectionKey; try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { key = iteriter.remove(); try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) { LOG.warn(\"Out of select\", e, e); ; try { Thread.sleep(60000); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } LOG.info(\"Stopping \" + Thread.currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selector = null; acceptChannel = null; connectionManager.stopIdleScan(); connectionManager.closeAll(); } }", "n_tokens": 331, "n_pass": [210, 8, 8]}
{"time": "2023-09-24 02:36:39.415279", "score": "0.8842", "loss": "0.1916", "code": "public void run() { LOG.info(Thread.currentThread().getName() ); while (running) { SelectionKey; try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { key = iteriter.remove(); try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) { LOG.warn(\"Out of select\", e, e); ; try { Thread.sleep(60000); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } LOG.info(\"Stopping \" + Thread.currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selector = null; connectionManager.stopIdleScan(); connectionManager.closeAll(); } }", "n_tokens": 324, "n_pass": [231, 9, 9]}
{"time": "2023-09-24 02:36:41.452101", "score": "0.9159", "loss": "0.1566", "code": "public void run() { LOG.info(Thread.currentThread().getName() ); while (running) { SelectionKey; try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { key = iteriter.remove(); try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) { LOG.warn(\"Out of select\", e, e); ; try { Thread.sleep(60000); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } LOG.info(\"Stopping \" + Thread.currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selector = null; connectionManager.stopIdleScan(); } }", "n_tokens": 317, "n_pass": [233, 10, 10]}
{"time": "2023-09-24 02:36:44.017882", "score": "0.8677", "loss": "0.2179", "code": "public void run() { LOG.info(Thread.currentThread().getName() ); while (running) { SelectionKey; try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) {iter.remove(); try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) { LOG.warn(\"Out of select\", e, e); ; try { Thread.sleep(60000); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } LOG.info(\"Stopping \" + Thread.currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selector = null; connectionManager.stopIdleScan(); } }", "n_tokens": 311, "n_pass": [249, 11, 11]}
{"time": "2023-09-24 02:36:45.750033", "score": "0.8364", "loss": "0.2991", "code": "public void run() { LOG.info(Thread.currentThread().getName() ); while (running) { SelectionKey; try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) { LOG.warn(\"Out of select\", e, e); ; try { Thread.sleep(60000); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } LOG.info(\"Stopping \" + Thread.currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selector = null; connectionManager.stopIdleScan(); } }", "n_tokens": 305, "n_pass": [250, 12, 12]}
{"time": "2023-09-24 02:36:49.169206", "score": "0.9481", "loss": "0.0985", "code": "public void run() { LOG.info(Thread.currentThread().getName() ); while (running) { SelectionKey; try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\"Out of select\", e, e); ; try { Thread.sleep(60000); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } LOG.info(\"Stopping \" + Thread.currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selector = null; connectionManager.stopIdleScan(); } }", "n_tokens": 302, "n_pass": [422, 13, 13]}
{"time": "2023-09-24 02:36:50.887465", "score": "0.9064", "loss": "0.1709", "code": "public void run() { LOG.info(Thread.currentThread().getName() ); while (running) { SelectionKey; try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\", e, e); ; try { Thread.sleep(60000); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } LOG.info(\"Stopping \" + Thread.currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selector = null; connectionManager.stopIdleScan(); } }", "n_tokens": 299, "n_pass": [424, 14, 14]}
{"time": "2023-09-24 02:36:52.752990", "score": "0.9529", "loss": "0.0912", "code": "public void run() { LOG.info(Thread.currentThread().getName() ); while (running) { SelectionKey; try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\", e); ; try { Thread.sleep(60000); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } LOG.info(\"Stopping \" + Thread.currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selector = null; connectionManager.stopIdleScan(); } }", "n_tokens": 296, "n_pass": [426, 15, 15]}
{"time": "2023-09-24 02:36:54.604815", "score": "0.8871", "loss": "0.1972", "code": "public void run() { LOG.info(Thread.currentThread().getName() ); while (running) { SelectionKey; try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { Thread.sleep(60000); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } LOG.info(\"Stopping \" + Thread.currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selector = null; connectionManager.stopIdleScan(); } }", "n_tokens": 293, "n_pass": [427, 16, 16]}
{"time": "2023-09-24 02:36:56.449442", "score": "0.9333", "loss": "0.1231", "code": "public void run() { LOG.info(Thread.currentThread().getName() ); while (running) { SelectionKey; try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60000); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } LOG.info(\"Stopping \" + Thread.currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selector = null; connectionManager.stopIdleScan(); } }", "n_tokens": 290, "n_pass": [431, 17, 17]}
{"time": "2023-09-24 02:36:58.263227", "score": "0.8989", "loss": "0.1729", "code": "public void run() { LOG.info(Thread.currentThread().getName() ); while (running) { SelectionKey; try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } LOG.info(\"Stopping \" + Thread.currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selector = null; connectionManager.stopIdleScan(); } }", "n_tokens": 287, "n_pass": [433, 18, 18]}
{"time": "2023-09-24 02:37:00.118753", "score": "0.8544", "loss": "0.2503", "code": "public void run() { LOG.info(Thread.currentThread().getName() ); while (running) { SelectionKey; try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" + Thread.currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selector = null; connectionManager.stopIdleScan(); } }", "n_tokens": 284, "n_pass": [448, 19, 19]}
{"time": "2023-09-24 02:37:01.998931", "score": "0.9567", "loss": "0.0843", "code": "public void run() { LOG.info(Thread.currentThread().getName() ); while (running) { SelectionKey; try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selector = null; connectionManager.stopIdleScan(); } }", "n_tokens": 281, "n_pass": [451, 20, 20]}
{"time": "2023-09-24 02:37:04.042703", "score": "0.9393", "loss": "0.1266", "code": "public void run() { LOG.info(Thread.currentThread().getName() ); while (running) { SelectionKey; try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selector; connectionManager.stopIdleScan(); } }", "n_tokens": 277, "n_pass": [469, 21, 21]}
{"time": "2023-09-24 02:37:05.791177", "score": "0.9355", "loss": "0.1352", "code": "public void run() { LOG.info(Thread.currentThread().getName() ); while (running) { SelectionKey; try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 273, "n_pass": [470, 22, 22]}
{"time": "2023-09-24 02:37:07.958462", "score": "0.9022", "loss": "0.2031", "code": "public void run() {info(Thread.currentThread().getName() ); while (running) { SelectionKey; try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 270, "n_pass": [476, 23, 23]}
{"time": "2023-09-24 02:37:09.750783", "score": "0.9359", "loss": "0.1318", "code": "public void run() {info(Thread.currentThread().getName); while (running) { SelectionKey; try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 267, "n_pass": [480, 24, 24]}
{"time": "2023-09-24 02:37:22.685327", "score": "0.923", "loss": "0.1744", "code": "public void run() {info(ThreadcurrentThread().getName); while (running) { SelectionKey; try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 266, "n_pass": [745, 25, 25]}
{"time": "2023-09-24 02:37:24.497727", "score": "0.9501", "loss": "0.1131", "code": "public void run() {info(Thread().getName); while (running) { SelectionKey; try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 265, "n_pass": [746, 26, 26]}
{"time": "2023-09-24 02:37:26.235206", "score": "0.8461", "loss": "0.3054", "code": "public void run() {info(Thread().getName);while (running) { SelectionKey; try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 264, "n_pass": [752, 27, 27]}
{"time": "2023-09-24 02:37:27.967769", "score": "0.9603", "loss": "0.1005", "code": "public void run() {info(Thread().getName);while(running) { SelectionKey; try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 263, "n_pass": [754, 28, 28]}
{"time": "2023-09-24 02:37:29.726953", "score": "0.9251", "loss": "0.1635", "code": "public void run() {info(Thread().getName);while(running){ SelectionKey; try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 262, "n_pass": [758, 29, 29]}
{"time": "2023-09-24 02:37:31.499189", "score": "0.9384", "loss": "0.1522", "code": "public void run() {info(Thread().getName);while(running){SelectionKey; try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 261, "n_pass": [760, 30, 30]}
{"time": "2023-09-24 02:37:33.194177", "score": "0.9205", "loss": "0.1823", "code": "public void run() {info(Thread().getName);while(running){; try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 260, "n_pass": [761, 31, 31]}
{"time": "2023-09-24 02:37:35.036992", "score": "0.9273", "loss": "0.1527", "code": "public void run() {info(Thread().getName);while(running){ try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 259, "n_pass": [762, 32, 32]}
{"time": "2023-09-24 02:37:36.958003", "score": "0.9234", "loss": "0.1664", "code": "public void run() {info(Thread().getName);while(running){try { getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 258, "n_pass": [763, 33, 33]}
{"time": "2023-09-24 02:37:38.957788", "score": "0.9209", "loss": "0.1719", "code": "public void run() {info(Thread().getName);while(running){try{ getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 257, "n_pass": [765, 34, 34]}
{"time": "2023-09-24 02:37:40.903376", "score": "0.8928", "loss": "0.2449", "code": "public void run() {info(Thread().getName);while(running){try{getSelector().select(); Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 256, "n_pass": [767, 35, 35]}
{"time": "2023-09-24 02:37:42.680940", "score": "0.9239", "loss": "0.1658", "code": "public void run() {info(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey> iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 255, "n_pass": [776, 36, 36]}
{"time": "2023-09-24 02:37:44.772455", "score": "0.9234", "loss": "0.1686", "code": "public void run() {info(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter = getSelector().selectedKeys().iterator(); while (iter.hasNext()) { try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 254, "n_pass": [781, 37, 37]}
{"time": "2023-09-24 02:37:46.577480", "score": "0.9287", "loss": "0.1584", "code": "public void run() {info(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter= getSelector().selectedKeys().iterator(); while (iter.hasNext()) { try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 253, "n_pass": [783, 38, 38]}
{"time": "2023-09-24 02:37:48.466708", "score": "0.9163", "loss": "0.1843", "code": "public void run() {info(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator(); while (iter.hasNext()) { try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 252, "n_pass": [785, 39, 39]}
{"time": "2023-09-24 02:37:50.247030", "score": "0.8898", "loss": "0.2427", "code": "public void run() {info(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while (iter.hasNext()) { try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 251, "n_pass": [798, 40, 40]}
{"time": "2023-09-24 02:37:51.946299", "score": "0.8916", "loss": "0.2361", "code": "public void run() {info(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter.hasNext()) { try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 250, "n_pass": [800, 41, 41]}
{"time": "2023-09-24 02:37:53.862503", "score": "0.8968", "loss": "0.222", "code": "public void run() {info(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iterhasNext()) { try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 249, "n_pass": [803, 42, 42]}
{"time": "2023-09-24 02:37:55.653415", "score": "0.9243", "loss": "0.1608", "code": "public void run() {info(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()) { try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 248, "n_pass": [804, 43, 43]}
{"time": "2023-09-24 02:37:57.434422", "score": "0.9379", "loss": "0.1338", "code": "public void run() {info(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){ try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 247, "n_pass": [808, 44, 44]}
{"time": "2023-09-24 02:37:59.219023", "score": "0.9219", "loss": "0.1664", "code": "public void run() {info(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try { if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 246, "n_pass": [810, 45, 45]}
{"time": "2023-09-24 02:38:01.032230", "score": "0.9246", "loss": "0.1571", "code": "public void run() {info(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{ if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 245, "n_pass": [812, 46, 46]}
{"time": "2023-09-24 02:38:02.776023", "score": "0.9129", "loss": "0.1894", "code": "public void run() {info(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if (key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 244, "n_pass": [814, 47, 47]}
{"time": "2023-09-24 02:38:04.734073", "score": "0.926", "loss": "0.1558", "code": "public void run() {info(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key.isValid()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 243, "n_pass": [816, 48, 48]}
{"time": "2023-09-24 02:38:06.512499", "score": "0.9181", "loss": "0.1726", "code": "public void run() {info(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key()) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 241, "n_pass": [818, 49, 49]}
{"time": "2023-09-24 02:38:08.244426", "score": "0.9261", "loss": "0.1546", "code": "public void run() {info(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key) { if (key.isAcceptable()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 239, "n_pass": [819, 50, 50]}
{"time": "2023-09-24 02:38:10.074782", "score": "0.9192", "loss": "0.1709", "code": "public void run() {info(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key) { if (key()) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 237, "n_pass": [824, 51, 51]}
{"time": "2023-09-24 02:38:11.776812", "score": "0.9228", "loss": "0.1653", "code": "public void run() {info(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key) { if (key) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); ; try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 235, "n_pass": [825, 52, 52]}
{"time": "2023-09-24 02:38:13.612181", "score": "0.9228", "loss": "0.1653", "code": "public void run() {info(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key) { if (key) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(key, e); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 233, "n_pass": [849, 53, 53]}
{"time": "2023-09-24 02:38:15.520409", "score": "0.9125", "loss": "0.1864", "code": "public void run() {info(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key) { if (key) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(keye); } } (\"Stopping \" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 231, "n_pass": [870, 54, 54]}
{"time": "2023-09-24 02:38:17.362687", "score": "0.9014", "loss": "0.1979", "code": "public void run() {info(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key) { if (key) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(keye); } } (\"\" .currentThread().getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 229, "n_pass": [876, 55, 55]}
{"time": "2023-09-24 02:38:19.203728", "score": "0.8958", "loss": "0.2107", "code": "public void run() {info(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key) { if (key) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(keye); } } (\"\" .currentThread.getName()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 227, "n_pass": [879, 56, 56]}
{"time": "2023-09-24 02:38:20.976919", "score": "0.9121", "loss": "0.1822", "code": "public void run() {info(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key) { if (key) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(keye); } } (\"\" .currentThread()); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 225, "n_pass": [880, 57, 57]}
{"time": "2023-09-24 02:38:22.956696", "score": "0.907", "loss": "0.1909", "code": "public void run() {info(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key) { if (key) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(keye); } } (\"\" .currentThread); synchronized (this) { try { acceptChannel.close(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 223, "n_pass": [881, 58, 58]}
{"time": "2023-09-24 02:38:24.995546", "score": "0.9018", "loss": "0.1978", "code": "public void run() {info(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key) { if (key) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(keye); } } (\"\" .currentThread); synchronized (this) { try { acceptChannel(); selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 221, "n_pass": [890, 59, 59]}
{"time": "2023-09-24 02:38:26.943278", "score": "0.9051", "loss": "0.1984", "code": "public void run() {info(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key) { if (key) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(keye); } } (\"\" .currentThread); synchronized (this) { try { acceptChannel; selector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 219, "n_pass": [891, 60, 60]}
{"time": "2023-09-24 02:38:28.769549", "score": "0.9016", "loss": "0.2008", "code": "public void run() {info(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key) { if (key) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(keye); } } (\"\" .currentThread); synchronized (this) { try { acceptChannelselector.close(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 217, "n_pass": [892, 61, 61]}
{"time": "2023-09-24 02:38:30.505370", "score": "0.9012", "loss": "0.1992", "code": "public void run() {info(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key) { if (key) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(keye); } } (\"\" .currentThread); synchronized (this) { try { acceptChannelclose(); } catch (IOException e) { } selectorstopIdleScan(); } }", "n_tokens": 215, "n_pass": [893, 62, 62]}
{"time": "2023-09-24 02:38:32.319252", "score": "0.9181", "loss": "0.1616", "code": "public void run() {info(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key) { if (key) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(keye); } } (\"\" .currentThread); synchronized (this) { try { acceptChannelclose(); } catch (IOException e) { }stopIdleScan(); } }", "n_tokens": 213, "n_pass": [903, 63, 63]}
{"time": "2023-09-24 02:38:34.361203", "score": "0.9181", "loss": "0.1616", "code": " void run() {info(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key) { if (key) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(keye); } } (\"\" .currentThread); synchronized (this) { try { acceptChannelclose(); } catch (IOException e) { }stopIdleScan(); } }", "n_tokens": 212, "n_pass": [908, 64, 64]}
{"time": "2023-09-24 02:38:36.082828", "score": "0.9181", "loss": "0.1616", "code": "void run() {info(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key) { if (key) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(keye); } } (\"\" .currentThread); synchronized (this) { try { acceptChannelclose(); } catch (IOException e) { }stopIdleScan(); } }", "n_tokens": 211, "n_pass": [909, 65, 65]}
{"time": "2023-09-24 02:38:38.715301", "score": "0.9181", "loss": "0.1616", "code": "void run(){info(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key) { if (key) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(keye); } } (\"\" .currentThread); synchronized (this) { try { acceptChannelclose(); } catch (IOException e) { }stopIdleScan(); } }", "n_tokens": 210, "n_pass": [915, 66, 66]}
{"time": "2023-09-24 02:38:40.566672", "score": "0.9258", "loss": "0.1387", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key) { if (key) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) { closeCurrentConnection(keye); } } (\"\" .currentThread); synchronized (this) { try { acceptChannelclose(); } catch (IOException e) { }stopIdleScan(); } }", "n_tokens": 209, "n_pass": [917, 67, 67]}
{"time": "2023-09-24 02:38:44.762458", "score": "0.9216", "loss": "0.1465", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key) { if (key) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" .currentThread); synchronized (this) { try { acceptChannelclose(); } catch (IOException e) { }stopIdleScan(); } }", "n_tokens": 207, "n_pass": [1015, 68, 68]}
{"time": "2023-09-24 02:38:46.534488", "score": "0.9177", "loss": "0.1495", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key) { if (key) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try { acceptChannelclose(); } catch (IOException e) { }stopIdleScan(); } }", "n_tokens": 205, "n_pass": [1023, 69, 69]}
{"time": "2023-09-24 02:38:48.375834", "score": "0.9179", "loss": "0.1472", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key) { if (key) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); } catch (IOException e) { }stopIdleScan(); } }", "n_tokens": 203, "n_pass": [1031, 70, 70]}
{"time": "2023-09-24 02:39:11.525374", "score": "0.9179", "loss": "0.1472", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key) { if (key) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch (IOException e) { }stopIdleScan(); } }", "n_tokens": 202, "n_pass": [1309, 71, 71]}
{"time": "2023-09-24 02:39:13.439683", "score": "0.9179", "loss": "0.1472", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key) { if (key) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e) { }stopIdleScan(); } }", "n_tokens": 201, "n_pass": [1310, 72, 72]}
{"time": "2023-09-24 02:39:15.386010", "score": "0.9179", "loss": "0.1472", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key) { if (key) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){ }stopIdleScan(); } }", "n_tokens": 200, "n_pass": [1316, 73, 73]}
{"time": "2023-09-24 02:39:17.294154", "score": "0.9179", "loss": "0.1472", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key) { if (key) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan(); } }", "n_tokens": 199, "n_pass": [1318, 74, 74]}
{"time": "2023-09-24 02:39:19.082562", "score": "0.9179", "loss": "0.1472", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key) { if (key) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();} }", "n_tokens": 198, "n_pass": [1324, 75, 75]}
{"time": "2023-09-24 02:39:20.831630", "score": "0.9179", "loss": "0.1472", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key) { if (key) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 197, "n_pass": [1326, 76, 76]}
{"time": "2023-09-24 02:39:25.034716", "score": "0.9179", "loss": "0.1472", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){ if (key) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 196, "n_pass": [1388, 77, 77]}
{"time": "2023-09-24 02:39:26.817460", "score": "0.9179", "loss": "0.1472", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if (key) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 195, "n_pass": [1390, 78, 78]}
{"time": "2023-09-24 02:39:28.925588", "score": "0.9179", "loss": "0.1472", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key) doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 194, "n_pass": [1392, 79, 79]}
{"time": "2023-09-24 02:39:30.699031", "score": "0.9179", "loss": "0.1472", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)doAccept(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 193, "n_pass": [1396, 80, 80]}
{"time": "2023-09-24 02:39:32.520606", "score": "0.8929", "loss": "0.2169", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key); } } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 192, "n_pass": [1397, 81, 81]}
{"time": "2023-09-24 02:39:34.245736", "score": "0.8929", "loss": "0.2169", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);} } catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 191, "n_pass": [1402, 82, 82]}
{"time": "2023-09-24 02:39:35.993444", "score": "0.8929", "loss": "0.2169", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}} catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 190, "n_pass": [1404, 83, 83]}
{"time": "2023-09-24 02:39:37.687866", "score": "0.8929", "loss": "0.2169", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch (IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 189, "n_pass": [1406, 84, 84]}
{"time": "2023-09-24 02:39:39.467747", "score": "0.8929", "loss": "0.2169", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e) { }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 188, "n_pass": [1408, 85, 85]}
{"time": "2023-09-24 02:39:41.403736", "score": "0.8929", "loss": "0.2169", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){ }; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 187, "n_pass": [1414, 86, 86]}
{"time": "2023-09-24 02:39:43.121997", "score": "0.8929", "loss": "0.2169", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}; } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 186, "n_pass": [1416, 87, 87]}
{"time": "2023-09-24 02:39:44.942197", "score": "0.8929", "loss": "0.2169", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){} } } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 185, "n_pass": [1418, 88, 88]}
{"time": "2023-09-24 02:39:46.731076", "score": "0.8929", "loss": "0.2169", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}} } catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 184, "n_pass": [1419, 89, 89]}
{"time": "2023-09-24 02:39:48.507313", "score": "0.8929", "loss": "0.2169", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}}} catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 183, "n_pass": [1421, 90, 90]}
{"time": "2023-09-24 02:39:50.225010", "score": "0.8929", "loss": "0.2169", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}}}catch (OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 182, "n_pass": [1423, 91, 91]}
{"time": "2023-09-24 02:39:51.978341", "score": "0.8929", "loss": "0.2169", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}}}catch(OutOfMemoryError e) {warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 181, "n_pass": [1425, 92, 92]}
{"time": "2023-09-24 02:39:53.758518", "score": "0.8929", "loss": "0.2169", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}}}catch(OutOfMemoryError e){warn(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 180, "n_pass": [1431, 93, 93]}
{"time": "2023-09-24 02:39:55.609563", "score": "0.9456", "loss": "0.1372", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}}}catch(OutOfMemoryError e){(\" select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 179, "n_pass": [1433, 94, 94]}
{"time": "2023-09-24 02:39:57.413027", "score": "0.9456", "loss": "0.1372", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}}}catch(OutOfMemoryError e){(\"select\"); try { (60); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 178, "n_pass": [1436, 95, 95]}
{"time": "2023-09-24 02:39:59.117826", "score": "0.9445", "loss": "0.1447", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}}}catch(OutOfMemoryError e){(\"\"); try { (60); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 177, "n_pass": [1437, 96, 96]}
{"time": "2023-09-24 02:40:00.924057", "score": "0.9445", "loss": "0.1447", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}}}catch(OutOfMemoryError e){(\"\");try { (60); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 176, "n_pass": [1441, 97, 97]}
{"time": "2023-09-24 02:40:02.655673", "score": "0.9445", "loss": "0.1447", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}}}catch(OutOfMemoryError e){(\"\");try{ (60); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 175, "n_pass": [1443, 98, 98]}
{"time": "2023-09-24 02:40:04.408086", "score": "0.9445", "loss": "0.1447", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}}}catch(OutOfMemoryError e){(\"\");try{(60); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 174, "n_pass": [1445, 99, 99]}
{"time": "2023-09-24 02:40:06.201160", "score": "0.9431", "loss": "0.1471", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}}}catch(OutOfMemoryError e){(\"\");try{(0); } catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 173, "n_pass": [1447, 100, 100]}
{"time": "2023-09-24 02:40:08.073952", "score": "0.9431", "loss": "0.1471", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}}}catch(OutOfMemoryError e){(\"\");try{(0);} catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 172, "n_pass": [1451, 101, 101]}
{"time": "2023-09-24 02:40:09.969632", "score": "0.9431", "loss": "0.1471", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}}}catch(OutOfMemoryError e){(\"\");try{(0);}catch (Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 171, "n_pass": [1453, 102, 102]}
{"time": "2023-09-24 02:40:11.966548", "score": "0.9431", "loss": "0.1471", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}}}catch(OutOfMemoryError e){(\"\");try{(0);}catch(Exception ie) { } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 170, "n_pass": [1455, 103, 103]}
{"time": "2023-09-24 02:40:13.793859", "score": "0.9431", "loss": "0.1471", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}}}catch(OutOfMemoryError e){(\"\");try{(0);}catch(Exception ie){ } } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 169, "n_pass": [1461, 104, 104]}
{"time": "2023-09-24 02:40:15.568989", "score": "0.9431", "loss": "0.1471", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}}}catch(OutOfMemoryError e){(\"\");try{(0);}catch(Exception ie){} } catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 168, "n_pass": [1463, 105, 105]}
{"time": "2023-09-24 02:40:17.307725", "score": "0.9431", "loss": "0.1471", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}}}catch(OutOfMemoryError e){(\"\");try{(0);}catch(Exception ie){}} catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 167, "n_pass": [1465, 106, 106]}
{"time": "2023-09-24 02:40:19.090575", "score": "0.9431", "loss": "0.1471", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}}}catch(OutOfMemoryError e){(\"\");try{(0);}catch(Exception ie){}}catch (Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 166, "n_pass": [1467, 107, 107]}
{"time": "2023-09-24 02:40:20.827223", "score": "0.9431", "loss": "0.1471", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}}}catch(OutOfMemoryError e){(\"\");try{(0);}catch(Exception ie){}}catch(Exception e) {(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 165, "n_pass": [1469, 108, 108]}
{"time": "2023-09-24 02:40:22.554505", "score": "0.9431", "loss": "0.1471", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}}}catch(OutOfMemoryError e){(\"\");try{(0);}catch(Exception ie){}}catch(Exception e){(keye); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 164, "n_pass": [1475, 109, 109]}
{"time": "2023-09-24 02:40:24.370902", "score": "0.9346", "loss": "0.1671", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}}}catch(OutOfMemoryError e){(\"\");try{(0);}catch(Exception ie){}}catch(Exception e){(e); } } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 163, "n_pass": [1478, 110, 110]}
{"time": "2023-09-24 02:40:26.109692", "score": "0.9346", "loss": "0.1671", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}}}catch(OutOfMemoryError e){(\"\");try{(0);}catch(Exception ie){}}catch(Exception e){(e);} } (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 162, "n_pass": [1482, 111, 111]}
{"time": "2023-09-24 02:40:27.860826", "score": "0.9346", "loss": "0.1671", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}}}catch(OutOfMemoryError e){(\"\");try{(0);}catch(Exception ie){}}catch(Exception e){(e);}} (\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 161, "n_pass": [1484, 112, 112]}
{"time": "2023-09-24 02:40:29.583511", "score": "0.9346", "loss": "0.1671", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}}}catch(OutOfMemoryError e){(\"\");try{(0);}catch(Exception ie){}}catch(Exception e){(e);}}(\"\" ); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 160, "n_pass": [1486, 113, 113]}
{"time": "2023-09-24 02:40:31.347183", "score": "0.9346", "loss": "0.1671", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}}}catch(OutOfMemoryError e){(\"\");try{(0);}catch(Exception ie){}}catch(Exception e){(e);}}(\"\"); synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 159, "n_pass": [1490, 114, 114]}
{"time": "2023-09-24 02:40:33.141484", "score": "0.9346", "loss": "0.1671", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}}}catch(OutOfMemoryError e){(\"\");try{(0);}catch(Exception ie){}}catch(Exception e){(e);}}(\"\");synchronized (this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 158, "n_pass": [1493, 115, 115]}
{"time": "2023-09-24 02:40:34.902620", "score": "0.9346", "loss": "0.1671", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}}}catch(OutOfMemoryError e){(\"\");try{(0);}catch(Exception ie){}}catch(Exception e){(e);}}(\"\");synchronized(this) { try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 157, "n_pass": [1495, 116, 116]}
{"time": "2023-09-24 02:40:36.755876", "score": "0.9346", "loss": "0.1671", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}}}catch(OutOfMemoryError e){(\"\");try{(0);}catch(Exception ie){}}catch(Exception e){(e);}}(\"\");synchronized(this){ try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 156, "n_pass": [1499, 117, 117]}
{"time": "2023-09-24 02:40:38.495741", "score": "0.9346", "loss": "0.1671", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}}}catch(OutOfMemoryError e){(\"\");try{(0);}catch(Exception ie){}}catch(Exception e){(e);}}(\"\");synchronized(this){try {close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 155, "n_pass": [1501, 118, 118]}
{"time": "2023-09-24 02:40:40.227414", "score": "0.9346", "loss": "0.1671", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}}}catch(OutOfMemoryError e){(\"\");try{(0);}catch(Exception ie){}}catch(Exception e){(e);}}(\"\");synchronized(this){try{close(); }catch(IOException e){}stopIdleScan();}}", "n_tokens": 154, "n_pass": [1503, 119, 119]}
{"time": "2023-09-24 02:40:42.024719", "score": "0.9346", "loss": "0.1671", "code": "void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}}}catch(OutOfMemoryError e){(\"\");try{(0);}catch(Exception ie){}}catch(Exception e){(e);}}(\"\");synchronized(this){try{close();}catch(IOException e){}stopIdleScan();}}", "n_tokens": 153, "n_pass": [1509, 120, 120]}

Minimal simplified code:
void run(){(Thread().getName);while(running){try{getSelector().select();Iterator<SelectionKey>iter=getSelector().selectedKeys().iterator();while(iter()){try{if(key){if(key)(key);}}catch(IOException e){}}}catch(OutOfMemoryError e){("");try{(0);}catch(Exception ie){}}catch(Exception e){(e);}}("");synchronized(this){try{close();}catch(IOException e){}stopIdleScan();}}

