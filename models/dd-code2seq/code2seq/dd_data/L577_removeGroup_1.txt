
path = /Users/lap13494/workspace/ppl-extra-final/java-small/test/hadoop-splitted/AccessControlList_removeGroup_0.java
method_name = removeGroup
method_body = public void removeGroup(String group) { if (isWildCardACLValue(group)) { throw new IllegalArgumentException("Group " + group + " can not be removed"); } if (!isAllAllowed()) { groups.remove(group); } }
predict, score, loss = removeGroup, 0.9061177968978882, 0.3042193055152893

Trace of simplified code(s):
{"time": "2023-09-24 01:49:46.182743", "score": "0.9061", "loss": "0.3042", "code": "public void removeGroup(String group) { if (isWildCardACLValue(group)) { throw new IllegalArgumentException(\"Group \" + group + \" can not be removed\"); } if (!isAllAllowed()) { groups.remove(group); } }", "n_tokens": 78, "n_pass": [1, 1, 1]}
{"time": "2023-09-24 01:49:48.536788", "score": "0.8333", "loss": "0.7169", "code": "public void removeGroup(String group) { if (isWildCardACLValue(group)) {IllegalArgumentException(\"Group \" + group + \" can not be removed\"); } if (!isAllAllowed()) { groups.remove(group); } }", "n_tokens": 73, "n_pass": [49, 2, 2]}
{"time": "2023-09-24 01:49:50.256445", "score": "0.8524", "loss": "0.5833", "code": "public void removeGroup(String group) { if (isWildCardACLValue(group)) {IllegalArgumentException(\"Group \" + group + \"  removed\"); } if (!isAllAllowed()) { groups.remove(group); } }", "n_tokens": 68, "n_pass": [53, 3, 3]}
{"time": "2023-09-24 01:49:54.171823", "score": "0.8474", "loss": "0.6469", "code": "public void removeGroup(String group) { if (isWildCardACLValue(group)) {IllegalArgumentException(\"Group \" +  \"  removed\"); } if (!isAllAllowed()) { groups.remove(group); } }", "n_tokens": 65, "n_pass": [96, 5, 4]}
{"time": "2023-09-24 01:49:55.907432", "score": "0.7484", "loss": "1.0734", "code": "public void removeGroup(String group) { if (isWildCardACLValue(group)) {IllegalArgumentException(\"Group \" +  \"  removed\"); } if (!isAllAllowed()) {remove(group); } }", "n_tokens": 62, "n_pass": [104, 6, 5]}
{"time": "2023-09-24 01:49:57.626103", "score": "0.7484", "loss": "1.0734", "code": "void removeGroup(String group) { if (isWildCardACLValue(group)) {IllegalArgumentException(\"Group \" +  \"  removed\"); } if (!isAllAllowed()) {remove(group); } }", "n_tokens": 60, "n_pass": [108, 7, 6]}
{"time": "2023-09-24 01:49:59.858049", "score": "0.643", "loss": "3.3669", "code": "void removeGroup(String group) { if (isWildCardACLValue(group)) {IllegalArgumentException(\"\" +  \"  removed\"); } if (!isAllAllowed()) {remove(group); } }", "n_tokens": 58, "n_pass": [121, 8, 7]}
{"time": "2023-09-24 01:50:06.414936", "score": "0.643", "loss": "3.3669", "code": "void removeGroup(String group) { if (isWildCardACLValue(group)) {IllegalArgumentException(\"\"+  \"  removed\"); } if (!isAllAllowed()) {remove(group); } }", "n_tokens": 57, "n_pass": [195, 9, 8]}
{"time": "2023-09-24 01:50:08.127962", "score": "0.643", "loss": "3.3669", "code": "void removeGroup(String group) { if (isWildCardACLValue(group)) {IllegalArgumentException(\"\"+ \"  removed\"); } if (!isAllAllowed()) {remove(group); } }", "n_tokens": 56, "n_pass": [197, 10, 9]}
{"time": "2023-09-24 01:50:09.815828", "score": "0.643", "loss": "3.3669", "code": "void removeGroup(String group) { if (isWildCardACLValue(group)) {IllegalArgumentException(\"\"+\"  removed\"); } if (!isAllAllowed()) {remove(group); } }", "n_tokens": 55, "n_pass": [198, 11, 10]}
{"time": "2023-09-24 01:50:11.545480", "score": "0.643", "loss": "3.3669", "code": "void removeGroup(String group) { if (isWildCardACLValue(group)) {IllegalArgumentException(\"\"+\" removed\"); } if (!isAllAllowed()) {remove(group); } }", "n_tokens": 54, "n_pass": [200, 12, 11]}
{"time": "2023-09-24 01:50:13.244415", "score": "0.643", "loss": "3.3669", "code": "void removeGroup(String group) { if (isWildCardACLValue(group)) {IllegalArgumentException(\"\"+\"removed\"); } if (!isAllAllowed()) {remove(group); } }", "n_tokens": 53, "n_pass": [201, 13, 12]}
{"time": "2023-09-24 01:50:14.946146", "score": "0.5227", "loss": "4.1659", "code": "void removeGroup(String group) { if (isWildCardACLValue(group)) {IllegalArgumentException(\"\"+\"\"); } if (!isAllAllowed()) {remove(group); } }", "n_tokens": 52, "n_pass": [202, 14, 13]}
{"time": "2023-09-24 01:50:16.726164", "score": "0.5227", "loss": "4.1659", "code": "void removeGroup(String group) { if (isWildCardACLValue(group)) {IllegalArgumentException(\"\"+\"\");} if (!isAllAllowed()) {remove(group); } }", "n_tokens": 51, "n_pass": [206, 15, 14]}
{"time": "2023-09-24 01:50:18.526607", "score": "0.5697", "loss": "3.9558", "code": "void removeGroup(String group) { if (isWildCardACLValue(group)) {IllegalArgumentException(\"\"+\"\");} if (!isAllAllowed) {remove(group); } }", "n_tokens": 49, "n_pass": [211, 16, 15]}
{"time": "2023-09-24 01:50:20.998781", "score": "0.5697", "loss": "3.9558", "code": "void removeGroup(String group){ if (isWildCardACLValue(group)) {IllegalArgumentException(\"\"+\"\");} if (!isAllAllowed) {remove(group); } }", "n_tokens": 48, "n_pass": [226, 17, 16]}
{"time": "2023-09-24 01:50:22.717511", "score": "0.5697", "loss": "3.9558", "code": "void removeGroup(String group){if (isWildCardACLValue(group)) {IllegalArgumentException(\"\"+\"\");} if (!isAllAllowed) {remove(group); } }", "n_tokens": 47, "n_pass": [228, 18, 17]}
{"time": "2023-09-24 01:50:24.452052", "score": "0.5697", "loss": "3.9558", "code": "void removeGroup(String group){if(isWildCardACLValue(group)) {IllegalArgumentException(\"\"+\"\");} if (!isAllAllowed) {remove(group); } }", "n_tokens": 46, "n_pass": [230, 19, 18]}
{"time": "2023-09-24 01:50:26.172559", "score": "0.7189", "loss": "0.9005", "code": "void removeGroup(String group){if((group)) {IllegalArgumentException(\"\"+\"\");} if (!isAllAllowed) {remove(group); } }", "n_tokens": 45, "n_pass": [232, 20, 19]}
{"time": "2023-09-24 01:50:27.831523", "score": "0.7189", "loss": "0.9005", "code": "void removeGroup(String group){if((group)){IllegalArgumentException(\"\"+\"\");} if (!isAllAllowed) {remove(group); } }", "n_tokens": 44, "n_pass": [237, 21, 20]}
{"time": "2023-09-24 01:50:29.612339", "score": "0.7943", "loss": "0.7195", "code": "void removeGroup(String group){if((group)){(\"\"+\"\");} if (!isAllAllowed) {remove(group); } }", "n_tokens": 43, "n_pass": [239, 22, 21]}
{"time": "2023-09-24 01:50:33.941964", "score": "0.7943", "loss": "0.7195", "code": "void removeGroup(String group){if((group)){(\"\"+\"\");}if (!isAllAllowed) {remove(group); } }", "n_tokens": 42, "n_pass": [292, 23, 22]}
{"time": "2023-09-24 01:50:35.657687", "score": "0.7943", "loss": "0.7195", "code": "void removeGroup(String group){if((group)){(\"\"+\"\");}if(!isAllAllowed) {remove(group); } }", "n_tokens": 41, "n_pass": [293, 24, 23]}
{"time": "2023-09-24 01:50:37.365116", "score": "0.7173", "loss": "0.9825", "code": "void removeGroup(String group){if((group)){(\"\"+\"\");}if(isAllAllowed) {remove(group); } }", "n_tokens": 40, "n_pass": [295, 25, 24]}
{"time": "2023-09-24 01:50:39.011341", "score": "0.7173", "loss": "0.9825", "code": "void removeGroup(String group){if((group)){(\"\"+\"\");}if(isAllAllowed){remove(group); } }", "n_tokens": 39, "n_pass": [298, 26, 25]}
{"time": "2023-09-24 01:50:44.029566", "score": "0.7173", "loss": "0.9825", "code": "void removeGroup(String group){if((group)){(\"\"+\"\");}if(isAllAllowed){remove(group);} }", "n_tokens": 38, "n_pass": [305, 29, 26]}
{"time": "2023-09-24 01:50:45.712464", "score": "0.7173", "loss": "0.9825", "code": "void removeGroup(String group){if((group)){(\"\"+\"\");}if(isAllAllowed){remove(group);}}", "n_tokens": 37, "n_pass": [307, 30, 27]}

Minimal simplified code:
void removeGroup(String group){if((group)){(""+"");}if(isAllAllowed){remove(group);}}

