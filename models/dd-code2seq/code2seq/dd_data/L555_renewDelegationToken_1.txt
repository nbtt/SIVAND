
path = /Users/lap13494/workspace/ppl-extra-final/java-small/test/hadoop-splitted/DelegationTokenAuthenticatedURL_renewDelegationToken_0.java
method_name = renewDelegationToken
method_body = public long renewDelegationToken(URL url, Token token) throws IOException, AuthenticationException { Preconditions.checkNotNull(url, "url"); Preconditions.checkNotNull(token, "token"); Preconditions.checkNotNull(token.delegationToken, "No delegation token available"); try { return ((KerberosDelegationTokenAuthenticator) getAuthenticator()).renewDelegationToken(url, token, token.delegationToken); } catch (IOException ex) { token.delegationToken = null; throw ex; } }
predict, score, loss = renewDelegationToken, 0.993346631526947, 0.023996539413928986

Trace of simplified code(s):
{"time": "2023-09-24 01:38:20.193600", "score": "0.992", "loss": "0.0285", "code": "public long renewDelegationToken(URL url, Token token) throws IOException, AuthenticationException { Preconditions.checkNotNull(url, \"url\"); Preconditions.checkNotNull(token, \"token\"); Preconditions.checkNotNull(token.delegationToken, \"No delegation token available\"); try { return ((KerberosDelegationTokenAuthenticator) getAuthenticator()).renewDelegationToken(url, token, token.delegationToken); } catch (IOException ex) { token.delegationToken = null; throw ex; } }", "n_tokens": 131, "n_pass": [1, 1, 1]}
{"time": "2023-09-24 01:38:22.162505", "score": "0.9924", "loss": "0.0268", "code": "public long renewDelegationToken(URL url, Token token) throws IOException, AuthenticationException { Preconditions.checkNotNull(url, \"url\"); Preconditions.checkNotNull(token, \"token\".delegationToken, \"No delegation token available\"); try { return ((KerberosDelegationTokenAuthenticator) getAuthenticator()).renewDelegationToken(url, token, token.delegationToken); } catch (IOException ex) { token.delegationToken = null; throw ex; } }", "n_tokens": 123, "n_pass": [50, 2, 2]}
{"time": "2023-09-24 01:38:23.897291", "score": "0.9918", "loss": "0.0299", "code": "public long renewDelegationToken(URL url, Token token) throws IOException, AuthenticationException { Preconditions.checkNotNull(url, \"url\"); Preconditions.checkNotNull(token, \"token\".delegationToken, \"No delegation token available\"); try { return ((KerberosDelegationTokenAuthenticator) getAuthenticator()).renewDelegationToken(url, token, token.delegationToken); } catch (IOException ex) { throw ex; } }", "n_tokens": 114, "n_pass": [57, 3, 3]}
{"time": "2023-09-24 01:38:26.165131", "score": "0.9879", "loss": "0.0456", "code": "public long renewDelegationToken(URL  token) throws IOException, AuthenticationException { Preconditions.checkNotNull(url, \"url\"); Preconditions.checkNotNull(token, \"token\".delegationToken, \"No delegation token available\"); try { return ((KerberosDelegationTokenAuthenticator) getAuthenticator()).renewDelegationToken(url, token, token.delegationToken); } catch (IOException ex) { throw ex; } }", "n_tokens": 110, "n_pass": [104, 4, 4]}
{"time": "2023-09-24 01:38:27.920717", "score": "0.9908", "loss": "0.0342", "code": "public long renewDelegationToken(URL  token) throws IOException, AuthenticationException { Preconditions.checkNotNull(url, \"url\"); Preconditions.checkNotNull(token, \"token\".delegationToken, \"No delegation\"); try { return ((KerberosDelegationTokenAuthenticator) getAuthenticator()).renewDelegationToken(url, token, token.delegationToken); } catch (IOException ex) { throw ex; } }", "n_tokens": 106, "n_pass": [115, 5, 5]}
{"time": "2023-09-24 01:38:29.755413", "score": "0.9937", "loss": "0.0247", "code": "public long renewDelegationToken(URL  token) throws IOException, AuthenticationException { Preconditions.checkNotNull(url, \"url\"); Preconditions.checkNotNull(token, \"token\".delegationToken, \"No delegation\"); try { return ((KerberosDelegationTokenAuthenticator) getAuthenticator()).renewDelegationToken(url,token.delegationToken); } catch (IOException ex) { throw ex; } }", "n_tokens": 102, "n_pass": [122, 6, 6]}
{"time": "2023-09-24 01:38:33.158492", "score": "0.9917", "loss": "0.0315", "code": "public long renewDelegationToken(URL  token) throws IOException, AuthenticationException { Preconditions.checkNotNull(url, \"url\"); Preconditions.checkNotNull(token, \"token\".delegationToken, \"No delegation\"); try { return ((KerberosDelegationTokenAuthenticator) getAuthenticator()).renewDelegationToken(url,delegationToken); } catch (IOException ex) { throw ex; } }", "n_tokens": 100, "n_pass": [198, 7, 7]}
{"time": "2023-09-24 01:38:34.948819", "score": "0.9809", "loss": "0.0719", "code": "public long renewDelegationToken(URL  token) throws IOException, AuthenticationException { Preconditions.checkNotNull(url, \"url\"); Preconditions.checkNotNull(token, \"token\".delegationToken, \"No delegation\"); try { return ((KerberosDelegationTokenAuthenticator) getAuthenticator()).renewDelegationToken(url,delegationToken); } catch (IOException ex) { ex; } }", "n_tokens": 98, "n_pass": [206, 8, 8]}
{"time": "2023-09-24 01:38:36.699373", "score": "0.9828", "loss": "0.0679", "code": "public long renewDelegationToken(URL  token) throws IOException, AuthenticationException { Preconditions.checkNotNull(url, \"url\"); Preconditions.checkNotNull(token, \"token\".delegationToken, \"No delegation\"); try { return ((KerberosDelegationTokenAuthenticator) getAuthenticator()).renewDelegationToken(url,delegationToken); } catch (IOException ex) { } }", "n_tokens": 95, "n_pass": [207, 9, 9]}
{"time": "2023-09-24 01:38:38.359097", "score": "0.9828", "loss": "0.0679", "code": "long renewDelegationToken(URL  token) throws IOException, AuthenticationException { Preconditions.checkNotNull(url, \"url\"); Preconditions.checkNotNull(token, \"token\".delegationToken, \"No delegation\"); try { return ((KerberosDelegationTokenAuthenticator) getAuthenticator()).renewDelegationToken(url,delegationToken); } catch (IOException ex) { } }", "n_tokens": 93, "n_pass": [209, 10, 10]}
{"time": "2023-09-24 01:38:40.444832", "score": "0.9937", "loss": "0.0261", "code": "long renewDelegationToken(URL  token) throws  AuthenticationException { Preconditions.checkNotNull(url, \"url\"); Preconditions.checkNotNull(token, \"token\".delegationToken, \"No delegation\"); try { return ((KerberosDelegationTokenAuthenticator) getAuthenticator()).renewDelegationToken(url,delegationToken); } catch (IOException ex) { } }", "n_tokens": 91, "n_pass": [216, 11, 11]}
{"time": "2023-09-24 01:38:42.191599", "score": "0.9917", "loss": "0.0353", "code": "long renewDelegationToken(URL  token) throws  AuthenticationException { Preconditions(url, \"url\"); Preconditions.checkNotNull(token, \"token\".delegationToken, \"No delegation\"); try { return ((KerberosDelegationTokenAuthenticator) getAuthenticator()).renewDelegationToken(url,delegationToken); } catch (IOException ex) { } }", "n_tokens": 89, "n_pass": [220, 12, 12]}
{"time": "2023-09-24 01:38:43.849300", "score": "0.9923", "loss": "0.0292", "code": "long renewDelegationToken(URL  token) throws  AuthenticationException { Preconditions(url, \"url\"); checkNotNull(token, \"token\".delegationToken, \"No delegation\"); try { return ((KerberosDelegationTokenAuthenticator) getAuthenticator()).renewDelegationToken(url,delegationToken); } catch (IOException ex) { } }", "n_tokens": 87, "n_pass": [226, 13, 13]}
{"time": "2023-09-24 01:38:45.599479", "score": "0.9929", "loss": "0.0269", "code": "long renewDelegationToken(URL  token) throws  AuthenticationException { Preconditions(url, \"url\"); checkNotNull( \"token\".delegationToken, \"No delegation\"); try { return ((KerberosDelegationTokenAuthenticator) getAuthenticator()).renewDelegationToken(url,delegationToken); } catch (IOException ex) { } }", "n_tokens": 85, "n_pass": [228, 14, 14]}
{"time": "2023-09-24 01:38:47.475019", "score": "0.9937", "loss": "0.0251", "code": "long renewDelegationToken(URL  token) throws  AuthenticationException { Preconditions(url, \"url\"); checkNotNull( \"token\", \"No delegation\"); try { return ((KerberosDelegationTokenAuthenticator) getAuthenticator()).renewDelegationToken(url,delegationToken); } catch (IOException ex) { } }", "n_tokens": 83, "n_pass": [231, 15, 15]}
{"time": "2023-09-24 01:38:49.327019", "score": "0.9937", "loss": "0.0242", "code": "long renewDelegationToken(URL  token) throws  AuthenticationException { Preconditions(url, \"url\"); checkNotNull( \"token\", \"No\"); try { return ((KerberosDelegationTokenAuthenticator) getAuthenticator()).renewDelegationToken(url,delegationToken); } catch (IOException ex) { } }", "n_tokens": 81, "n_pass": [234, 16, 16]}
{"time": "2023-09-24 01:38:51.181919", "score": "0.9913", "loss": "0.0383", "code": "long renewDelegationToken(URL  token) throws  AuthenticationException { Preconditions(url, \"url\"); checkNotNull( \"token\", \"No\"); try { ((KerberosDelegationTokenAuthenticator) getAuthenticator()).renewDelegationToken(url,delegationToken); } catch (IOException ex) { } }", "n_tokens": 79, "n_pass": [239, 17, 17]}
{"time": "2023-09-24 01:38:52.944779", "score": "0.991", "loss": "0.0391", "code": "long renewDelegationToken(URL  token) throws  AuthenticationException { Preconditions(url, \"url\"); checkNotNull( \"token\", \"No\"); try { ((KerberosDelegationTokenAuthenticator) getAuthenticator).renewDelegationToken(url,delegationToken); } catch (IOException ex) { } }", "n_tokens": 77, "n_pass": [243, 18, 18]}
{"time": "2023-09-24 01:38:54.654455", "score": "0.9846", "loss": "0.0657", "code": "long renewDelegationToken(URL  token) throws  AuthenticationException { Preconditions(url, \"url\"); checkNotNull( \"token\", \"No\"); try { ((KerberosDelegationTokenAuthenticator) getAuthenticator).renewDelegationToken(delegationToken); } catch (IOException ex) { } }", "n_tokens": 75, "n_pass": [246, 19, 19]}
{"time": "2023-09-24 01:38:56.863928", "score": "0.9839", "loss": "0.0691", "code": "long renewDelegationToken(URL  token) throws  AuthenticationException { Preconditions(url, \"url\"); checkNotNull( \"token\", \"No\"); try { ((KerberosDelegationTokenAuthenticator)).renewDelegationToken(delegationToken); } catch (IOException ex) { } }", "n_tokens": 73, "n_pass": [281, 20, 20]}
{"time": "2023-09-24 01:39:06.474840", "score": "0.9678", "loss": "0.1405", "code": "long renewDelegationToken(URL  token) throws  AuthenticationException { Preconditions(url, \"url\"); checkNotNull( \"token\", \"No\"); try { ((KerberosDelegationTokenAuthenticator)).renewDelegationToken(); } catch (IOException ex) { } }", "n_tokens": 72, "n_pass": [394, 21, 21]}
{"time": "2023-09-24 01:39:08.164867", "score": "0.9678", "loss": "0.1405", "code": "long renewDelegationToken(URL  token) throws  AuthenticationException { Preconditions(url, \"url\"); checkNotNull( \"token\", \"No\"); try { ((KerberosDelegationTokenAuthenticator)).renewDelegationToken();} catch (IOException ex) { } }", "n_tokens": 71, "n_pass": [396, 22, 22]}
{"time": "2023-09-24 01:39:09.953323", "score": "0.9678", "loss": "0.1405", "code": "long renewDelegationToken(URL  token) throws  AuthenticationException { Preconditions(url, \"url\"); checkNotNull( \"token\", \"No\"); try { ((KerberosDelegationTokenAuthenticator)).renewDelegationToken();}catch (IOException ex) { } }", "n_tokens": 70, "n_pass": [398, 23, 23]}
{"time": "2023-09-24 01:39:11.720930", "score": "0.9678", "loss": "0.1405", "code": "long renewDelegationToken(URL  token) throws  AuthenticationException { Preconditions(url, \"url\"); checkNotNull( \"token\", \"No\"); try { ((KerberosDelegationTokenAuthenticator)).renewDelegationToken();}catch(IOException ex) { } }", "n_tokens": 69, "n_pass": [400, 24, 24]}
{"time": "2023-09-24 01:39:13.466408", "score": "0.9678", "loss": "0.1405", "code": "long renewDelegationToken(URL  token) throws  AuthenticationException { Preconditions(url, \"url\"); checkNotNull( \"token\", \"No\"); try { ((KerberosDelegationTokenAuthenticator)).renewDelegationToken();}catch(IOException ex){ } }", "n_tokens": 68, "n_pass": [406, 25, 25]}
{"time": "2023-09-24 01:39:15.254111", "score": "0.9678", "loss": "0.1405", "code": "long renewDelegationToken(URL  token) throws  AuthenticationException { Preconditions(url, \"url\"); checkNotNull( \"token\", \"No\"); try { ((KerberosDelegationTokenAuthenticator)).renewDelegationToken();}catch(IOException ex){} }", "n_tokens": 67, "n_pass": [408, 26, 26]}
{"time": "2023-09-24 01:39:17.764539", "score": "0.9678", "loss": "0.1405", "code": "long renewDelegationToken(URL token) throws  AuthenticationException { Preconditions(url, \"url\"); checkNotNull( \"token\", \"No\"); try { ((KerberosDelegationTokenAuthenticator)).renewDelegationToken();}catch(IOException ex){} }", "n_tokens": 66, "n_pass": [416, 27, 27]}
{"time": "2023-09-24 01:39:19.505010", "score": "0.9678", "loss": "0.1405", "code": "long renewDelegationToken(URL token)throws  AuthenticationException { Preconditions(url, \"url\"); checkNotNull( \"token\", \"No\"); try { ((KerberosDelegationTokenAuthenticator)).renewDelegationToken();}catch(IOException ex){} }", "n_tokens": 65, "n_pass": [420, 28, 28]}
{"time": "2023-09-24 01:39:21.214679", "score": "0.9678", "loss": "0.1405", "code": "long renewDelegationToken(URL token)throws AuthenticationException { Preconditions(url, \"url\"); checkNotNull( \"token\", \"No\"); try { ((KerberosDelegationTokenAuthenticator)).renewDelegationToken();}catch(IOException ex){} }", "n_tokens": 64, "n_pass": [422, 29, 29]}
{"time": "2023-09-24 01:39:22.982280", "score": "0.9678", "loss": "0.1405", "code": "long renewDelegationToken(URL token)throws AuthenticationException{ Preconditions(url, \"url\"); checkNotNull( \"token\", \"No\"); try { ((KerberosDelegationTokenAuthenticator)).renewDelegationToken();}catch(IOException ex){} }", "n_tokens": 63, "n_pass": [425, 30, 30]}
{"time": "2023-09-24 01:39:24.607618", "score": "0.9678", "loss": "0.1405", "code": "long renewDelegationToken(URL token)throws AuthenticationException{Preconditions(url, \"url\"); checkNotNull( \"token\", \"No\"); try { ((KerberosDelegationTokenAuthenticator)).renewDelegationToken();}catch(IOException ex){} }", "n_tokens": 62, "n_pass": [427, 31, 31]}
{"time": "2023-09-24 01:39:26.289567", "score": "0.9678", "loss": "0.1405", "code": "long renewDelegationToken(URL token)throws AuthenticationException{Preconditions(url,\"url\"); checkNotNull( \"token\", \"No\"); try { ((KerberosDelegationTokenAuthenticator)).renewDelegationToken();}catch(IOException ex){} }", "n_tokens": 61, "n_pass": [432, 32, 32]}
{"time": "2023-09-24 01:39:27.998493", "score": "0.9483", "loss": "0.2068", "code": "long renewDelegationToken(URL token)throws AuthenticationException{Preconditions(url,\"\"); checkNotNull( \"token\", \"No\"); try { ((KerberosDelegationTokenAuthenticator)).renewDelegationToken();}catch(IOException ex){} }", "n_tokens": 60, "n_pass": [434, 33, 33]}
{"time": "2023-09-24 01:39:29.721793", "score": "0.9483", "loss": "0.2068", "code": "long renewDelegationToken(URL token)throws AuthenticationException{Preconditions(url,\"\");checkNotNull( \"token\", \"No\"); try { ((KerberosDelegationTokenAuthenticator)).renewDelegationToken();}catch(IOException ex){} }", "n_tokens": 59, "n_pass": [438, 34, 34]}
{"time": "2023-09-24 01:39:31.426305", "score": "0.9483", "loss": "0.2068", "code": "long renewDelegationToken(URL token)throws AuthenticationException{Preconditions(url,\"\");checkNotNull(\"token\", \"No\"); try { ((KerberosDelegationTokenAuthenticator)).renewDelegationToken();}catch(IOException ex){} }", "n_tokens": 58, "n_pass": [441, 35, 35]}
{"time": "2023-09-24 01:39:33.130266", "score": "0.9606", "loss": "0.1626", "code": "long renewDelegationToken(URL token)throws AuthenticationException{Preconditions(url,\"\");checkNotNull(\"\", \"No\"); try { ((KerberosDelegationTokenAuthenticator)).renewDelegationToken();}catch(IOException ex){} }", "n_tokens": 57, "n_pass": [443, 36, 36]}
{"time": "2023-09-24 01:39:34.869918", "score": "0.9606", "loss": "0.1626", "code": "long renewDelegationToken(URL token)throws AuthenticationException{Preconditions(url,\"\");checkNotNull(\"\",\"No\"); try { ((KerberosDelegationTokenAuthenticator)).renewDelegationToken();}catch(IOException ex){} }", "n_tokens": 56, "n_pass": [446, 37, 37]}
{"time": "2023-09-24 01:39:36.688815", "score": "0.9505", "loss": "0.1977", "code": "long renewDelegationToken(URL token)throws AuthenticationException{Preconditions(url,\"\");checkNotNull(\"\",\"\"); try { ((KerberosDelegationTokenAuthenticator)).renewDelegationToken();}catch(IOException ex){} }", "n_tokens": 55, "n_pass": [448, 38, 38]}
{"time": "2023-09-24 01:39:38.384579", "score": "0.9505", "loss": "0.1977", "code": "long renewDelegationToken(URL token)throws AuthenticationException{Preconditions(url,\"\");checkNotNull(\"\",\"\");try { ((KerberosDelegationTokenAuthenticator)).renewDelegationToken();}catch(IOException ex){} }", "n_tokens": 54, "n_pass": [452, 39, 39]}
{"time": "2023-09-24 01:39:40.127493", "score": "0.9505", "loss": "0.1977", "code": "long renewDelegationToken(URL token)throws AuthenticationException{Preconditions(url,\"\");checkNotNull(\"\",\"\");try{ ((KerberosDelegationTokenAuthenticator)).renewDelegationToken();}catch(IOException ex){} }", "n_tokens": 53, "n_pass": [454, 40, 40]}
{"time": "2023-09-24 01:39:41.920944", "score": "0.9505", "loss": "0.1977", "code": "long renewDelegationToken(URL token)throws AuthenticationException{Preconditions(url,\"\");checkNotNull(\"\",\"\");try{((KerberosDelegationTokenAuthenticator)).renewDelegationToken();}catch(IOException ex){} }", "n_tokens": 52, "n_pass": [456, 41, 41]}
{"time": "2023-09-24 01:39:45.055224", "score": "0.9505", "loss": "0.1977", "code": "long renewDelegationToken(URL token)throws AuthenticationException{Preconditions(url,\"\");checkNotNull(\"\",\"\");try{((KerberosDelegationTokenAuthenticator)).renewDelegationToken();}catch(IOException ex){}}", "n_tokens": 51, "n_pass": [510, 42, 42]}

Minimal simplified code:
long renewDelegationToken(URL token)throws AuthenticationException{Preconditions(url,"");checkNotNull("","");try{((KerberosDelegationTokenAuthenticator)).renewDelegationToken();}catch(IOException ex){}}

