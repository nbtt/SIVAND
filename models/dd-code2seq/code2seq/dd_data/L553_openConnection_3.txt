
path = /Users/lap13494/workspace/ppl-extra-final/java-small/test/hadoop-splitted/DelegationTokenAuthenticatedURL_openConnection_2.java
method_name = openConnection
method_body = public HttpURLConnection openConnection(URL url, Token token, String doAs) throws IOException, AuthenticationException { Preconditions.checkNotNull(url, "url"); Preconditions.checkNotNull(token, "token"); Map<String, String> extraParams = new HashMap<String, String>(); Credentials creds = UserGroupInformation.getCurrentUser().getCredentials(); if (!creds.getAllTokens().isEmpty()) { InetSocketAddress serviceAddr = new InetSocketAddress(url.getHost(), url.getPort()); Text service = SecurityUtil.buildTokenService(serviceAddr); org.apache.hadoop.security.token.Token<? extends TokenIdentifier> dt = creds.getToken(service); if (dt != null) { extraParams.put(KerberosDelegationTokenAuthenticator.DELEGATION_PARAM, dt.encodeToUrlString()); } } if (doAs != null) { extraParams.put(DO_AS, URLEncoder.encode(doAs, "UTF-8")); } url = augmentURL(url, extraParams); return super.openConnection(url, token); }
predict, score, loss = openConnection, 0.9740804433822632, 0.06954145431518555

Trace of simplified code(s):
{"time": "2023-09-24 01:33:56.514650", "score": "0.9887", "loss": "0.0283", "code": "public HttpURLConnection openConnection(URL url, Token token, String doAs) throws IOException, AuthenticationException { Preconditions.checkNotNull(url, \"url\"); Preconditions.checkNotNull(token, \"token\"); Map<String, String> extraParams = new HashMap<String, String>(); Credentials creds = UserGroupInformation.getCurrentUser().getCredentials(); if (!creds.getAllTokens().isEmpty()) { InetSocketAddress serviceAddr = new InetSocketAddress(url.getHost(), url.getPort()); Text service = SecurityUtil.buildTokenService(serviceAddr); org.apache.hadoop.security.token.Token<? extends TokenIdentifier> dt = creds.getToken(service); if (dt != null) { extraParams.put(KerberosDelegationTokenAuthenticator.DELEGATION_PARAM, dt.encodeToUrlString()); } } if (doAs != null) { extraParams.put(DO_AS, URLEncoder.encode(doAs, \"UTF-8\")); } url = augmentURL(url, extraParams); return super.openConnection(url, token); }", "n_tokens": 288, "n_pass": [1, 1, 1]}
{"time": "2023-09-24 01:33:58.699438", "score": "0.9922", "loss": "0.0195", "code": "public HttpURLConnection openConnection(URL url, Token token, String doAs) throws IOException, AuthenticationException { Preconditions.checkNotNull(url, \"url\"); Preconditions.checkNotNull(token, \"token\"); Map<String, String> extraParams = new HashMap<String, String>(); Credentials creds = UserGroupInformation.getCurrentUser().getCredentials(); if (!creds.getAllTokens().isEmpty()) { InetSocketAddress serviceAddr = new InetSocketAddress(url.getHost(), url.getPort()); Text service = SecurityUtil.buildTokenService(serviceAddr); org.apache.hadoop.security.token.Token<? extends TokenIdentifier> dt = creds.getToken(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(DO_AS, URLEncoder.encode(doAs, \"UTF-8\")); } url = augmentURL(url, extraParams); return super.openConnection(url, token); }", "n_tokens": 270, "n_pass": [55, 2, 2]}
{"time": "2023-09-24 01:34:00.760030", "score": "0.9908", "loss": "0.0226", "code": "public HttpURLConnection openConnection(URL urldoAs) throws IOException, AuthenticationException { Preconditions.checkNotNull(url, \"url\"); Preconditions.checkNotNull(token, \"token\"); Map<String, String> extraParams = new HashMap<String, String>(); Credentials creds = UserGroupInformation.getCurrentUser().getCredentials(); if (!creds.getAllTokens().isEmpty()) { InetSocketAddress serviceAddr = new InetSocketAddress(url.getHost(), url.getPort()); Text service = SecurityUtil.buildTokenService(serviceAddr); org.apache.hadoop.security.token.Token<? extends TokenIdentifier> dt = creds.getToken(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(DO_AS, URLEncoder.encode(doAs, \"UTF-8\")); } url = augmentURL(url, extraParams); return super.openConnection(url, token); }", "n_tokens": 261, "n_pass": [109, 3, 3]}
{"time": "2023-09-24 01:34:02.715798", "score": "0.991", "loss": "0.0221", "code": "public HttpURLConnection openConnection(URL urldoAs) throws IOException, AuthenticationException { Preconditions.checkNotNull(url, \"url\"); Preconditions.checkNotNull(token, \"token\"); Map<String, String> extraParams = new HashMap<String, String>(); Credentials creds = UserGroupInformation.getCurrentUser().getCredentials(); if (!creds.getAllTokens().isEmpty()) { InetSocketAddress serviceAddr = new InetSocketAddress(url()); Text service = SecurityUtil.buildTokenService(serviceAddr); org.apache.hadoop.security.token.Token<? extends TokenIdentifier> dt = creds.getToken(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(DO_AS, URLEncoder.encode(doAs, \"UTF-8\")); } url = augmentURL(url, extraParams); return super.openConnection(url, token); }", "n_tokens": 252, "n_pass": [122, 4, 4]}
{"time": "2023-09-24 01:34:04.518555", "score": "0.9855", "loss": "0.0348", "code": "public HttpURLConnection openConnection(URL urldoAs) throws IOException, AuthenticationException { Preconditions.checkNotNull(url, \"url\"); Preconditions.checkNotNull(token, \"token\"); Map<String, String> extraParams = new HashMap<String, String>(); Credentials creds = UserGroupInformation.getCurrentUser().getCredentials(); if (!creds.getAllTokens().isEmpty()) { InetSocketAddress serviceAddr = new InetSocketAddress(url()); Text service = SecurityUtil.buildTokenService(serviceAddr);token.Token<? extends TokenIdentifier> dt = creds.getToken(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(DO_AS, URLEncoder.encode(doAs, \"UTF-8\")); } url = augmentURL(url, extraParams); return super.openConnection(url, token); }", "n_tokens": 243, "n_pass": [125, 5, 5]}
{"time": "2023-09-24 01:34:07.104866", "score": "0.995", "loss": "0.0117", "code": "public HttpURLConnection openConnection(URL urldoAs) throws IOException, AuthenticationException { Preconditions.checkNotNull(url, \"url\"); Preconditions.checkNotNull(token, \"token\"); Map<String, String> extraParams = new HashMap<String, String>(); Credentials creds = UserGroupInformation.getCurrentUser().getCredentials(); if (!creds.getAllTokens().isEmpty()) { InetSocketAddress serviceAddr = new InetSocketAddress(url()); TextSecurityUtil.buildTokenService(serviceAddr);token.Token<? extends TokenIdentifier> dt = creds.getToken(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(DO_AS, URLEncoder.encode(doAs, \"UTF-8\")); } url = augmentURL(url, extraParams); return super.openConnection(url, token); }", "n_tokens": 238, "n_pass": [207, 6, 6]}
{"time": "2023-09-24 01:34:09.622595", "score": "0.9928", "loss": "0.0176", "code": "public HttpURLConnection openConnection(URL urldoAs) throws IOException, AuthenticationException { Preconditions.checkNotNull(url, \"url\"); Preconditions.checkNotNull(token, \"token\"); Map<String, String> extraParams = new HashMap<String, String>(); Credentials creds = UserGroupInformation.getCurrentUser().getCredentials(); if (!creds.getAllTokens().isEmpty()) { InetSocketAddress serviceAddr = new InetSocketAddress(url()); TextSecurityUtil.buildTokenService(serviceAddr);token.Token<? extends TokenIdentifier> dt = creds.getToken(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); } url = augmentURL(url, extraParams); return super.openConnection(url, token); }", "n_tokens": 233, "n_pass": [221, 7, 7]}
{"time": "2023-09-24 01:34:14.604855", "score": "0.9867", "loss": "0.0308", "code": "public HttpURLConnection openConnection(URL urldoAs) throws IOException, AuthenticationException { Preconditions.checkNotNull(url, \"url\"); Preconditions.checkNotNull(token, \"token\"); Map<String, String> extraParams = new HashMap<String, String>(); Credentials creds = UserGroupInformation.getCredentials(); if (!creds.getAllTokens().isEmpty()) { InetSocketAddress serviceAddr = new InetSocketAddress(url()); TextSecurityUtil.buildTokenService(serviceAddr);token.Token<? extends TokenIdentifier> dt = creds.getToken(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); } url = augmentURL(url, extraParams); return super.openConnection(url, token); }", "n_tokens": 229, "n_pass": [251, 9, 8]}
{"time": "2023-09-24 01:34:16.514011", "score": "0.9952", "loss": "0.0111", "code": "public HttpURLConnection openConnection(URL urldoAs) throws IOException, AuthenticationException { Preconditions.checkNotNull(url, \"url\"); Preconditions.checkNotNull(token, \"token\"); Map<String, String> extraParams = new HashMap<String, String>(); Credentials creds = UserGroupInformation.getCredentials(); if (!creds.getAllTokens()) { InetSocketAddress serviceAddr = new InetSocketAddress(url()); TextSecurityUtil.buildTokenService(serviceAddr);token.Token<? extends TokenIdentifier> dt = creds.getToken(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); } url = augmentURL(url, extraParams); return super.openConnection(url, token); }", "n_tokens": 225, "n_pass": [255, 10, 9]}
{"time": "2023-09-24 01:34:22.924394", "score": "0.9902", "loss": "0.025", "code": "public HttpURLConnection openConnection(URL urldoAs) throws IOException, AuthenticationException { Preconditions.checkNotNull(url, \"url\"); Preconditions.checkNotNull(token, \"token\"); Map<String, String> extraParams = new HashMap<String, String>(); Credentials creds = UserGroupInformation.getCredentials(); if (!creds.getAllTokens) { InetSocketAddress serviceAddr = new InetSocketAddress(url()); TextSecurityUtil.buildTokenService(serviceAddr);token.Token<? extends TokenIdentifier> dt = creds.getToken(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); } url = augmentURL(url, extraParams); return super.openConnection(url, token); }", "n_tokens": 223, "n_pass": [406, 12, 10]}
{"time": "2023-09-24 01:34:24.742417", "score": "0.9866", "loss": "0.0328", "code": "public HttpURLConnection openConnection(URL urldoAs) throws IOException, AuthenticationException { Preconditions.checkNotNull(url, \"url\"); Preconditions.checkNotNull(token, \"token\"); Map<String, String> extraParams = new HashMap<String, String>(); Credentials creds = UserGroupInformation.getCredentials(); if (!creds.getAllTokens) { serviceAddr = new InetSocketAddress(url()); TextSecurityUtil.buildTokenService(serviceAddr);token.Token<? extends TokenIdentifier> dt = creds.getToken(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); } url = augmentURL(url, extraParams); return super.openConnection(url, token); }", "n_tokens": 221, "n_pass": [408, 13, 11]}
{"time": "2023-09-24 01:34:26.866924", "score": "0.996", "loss": "0.01", "code": "public HttpURLConnection openConnection(URL urldoAs) throws IOException, AuthenticationException { Preconditions.checkNotNull(url, \"url\"); Preconditions.checkNotNull(token, \"token\"); Map<String, String> extraParams = new HashMap<String, String>(); Credentials creds = UserGroupInformation.getCredentials(); if (!creds.getAllTokens) { serviceAddr = InetSocketAddress(url()); TextSecurityUtil.buildTokenService(serviceAddr);token.Token<? extends TokenIdentifier> dt = creds.getToken(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); } url = augmentURL(url, extraParams); return super.openConnection(url, token); }", "n_tokens": 219, "n_pass": [411, 14, 12]}
{"time": "2023-09-24 01:34:28.868308", "score": "0.9929", "loss": "0.018", "code": "public HttpURLConnection openConnection(URL urldoAs) throws IOException, AuthenticationException { Preconditions.checkNotNull(url, \"url\"); Preconditions.checkNotNull(token, \"token\"); Map<String, String> extraParams = new HashMap<String, String>(); Credentials creds = UserGroupInformation.getCredentials(); if (!creds.getAllTokens) { serviceAddr = InetSocketAddress(url()); TextSecurityUtil(serviceAddr);token.Token<? extends TokenIdentifier> dt = creds.getToken(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); } url = augmentURL(url, extraParams); return super.openConnection(url, token); }", "n_tokens": 217, "n_pass": [417, 15, 13]}
{"time": "2023-09-24 01:34:30.622425", "score": "0.9953", "loss": "0.0112", "code": "public HttpURLConnection openConnection(URL urldoAs) throws IOException, AuthenticationException { Preconditions.checkNotNull(url, \"url\"); Preconditions.checkNotNull(token, \"token\"); Map<String, String> extraParams = new HashMap<String, String>(); Credentials creds = UserGroupInformation.getCredentials(); if (!creds.getAllTokens) { serviceAddr = InetSocketAddress(url()); TextSecurityUtil(serviceAddr);Token<? extends TokenIdentifier> dt = creds.getToken(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); } url = augmentURL(url, extraParams); return super.openConnection(url, token); }", "n_tokens": 215, "n_pass": [420, 16, 14]}
{"time": "2023-09-24 01:34:32.469775", "score": "0.995", "loss": "0.011", "code": "public HttpURLConnection openConnection(URL urldoAs) throws IOException, AuthenticationException { Preconditions.checkNotNull(url, \"url\"); Preconditions.checkNotNull(token, \"token\"); Map<String, String> extraParams = new HashMap<String, String>(); Credentials creds = UserGroupInformation.getCredentials(); if (!creds.getAllTokens) { serviceAddr = InetSocketAddress(url()); TextSecurityUtil(serviceAddr);Token<? extends TokenIdentifier> dt = creds(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); } url = augmentURL(url, extraParams); return super.openConnection(url, token); }", "n_tokens": 213, "n_pass": [428, 17, 15]}
{"time": "2023-09-24 01:34:34.571987", "score": "0.9903", "loss": "0.0243", "code": "public HttpURLConnection openConnection(URL urldoAs) throws IOException, AuthenticationException { Preconditions.checkNotNull(url, \"url\"); Preconditions.checkNotNull(token, \"token\"); Map<String, String> extraParams = new HashMap<String, String>(); Credentials creds = UserGroupInformation.getCredentials(); if (!creds.getAllTokens) { serviceAddr = InetSocketAddress(url()); TextSecurityUtil(serviceAddr);Token<? extends TokenIdentifier> dt = creds(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(url, extraParams); return super.openConnection(url, token); }", "n_tokens": 210, "n_pass": [450, 18, 16]}
{"time": "2023-09-24 01:34:36.262822", "score": "0.9947", "loss": "0.0132", "code": "public HttpURLConnection openConnection(URL urldoAs) throws IOException, AuthenticationException { Preconditions.checkNotNull(url, \"url\"); Preconditions.checkNotNull(token, \"token\"); Map<String, String> extraParams = new HashMap<String, String>(); Credentials creds = UserGroupInformation.getCredentials(); if (!creds.getAllTokens) { serviceAddr = InetSocketAddress(url()); TextSecurityUtil(serviceAddr);Token<? extends TokenIdentifier> dt = creds(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams); return super.openConnection(url, token); }", "n_tokens": 207, "n_pass": [452, 19, 17]}
{"time": "2023-09-24 01:34:39.853261", "score": "0.9954", "loss": "0.0106", "code": "HttpURLConnection openConnection(URL urldoAs) throws IOException, AuthenticationException { Preconditions.checkNotNull(url, \"url\"); Preconditions.checkNotNull(token, \"token\"); Map<String, String> extraParams = new HashMap<String, String>(); Credentials creds = UserGroupInformation.getCredentials(); if (!creds.getAllTokens) { serviceAddr = InetSocketAddress(url()); TextSecurityUtil(serviceAddr);Token<? extends TokenIdentifier> dt = creds(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams); return super.openConnection(url, token); }", "n_tokens": 205, "n_pass": [459, 21, 18]}
{"time": "2023-09-24 01:34:42.007930", "score": "0.9971", "loss": "0.0064", "code": "HttpURLConnection openConnection(URL urldoAs) throws  AuthenticationException { Preconditions.checkNotNull(url, \"url\"); Preconditions.checkNotNull(token, \"token\"); Map<String, String> extraParams = new HashMap<String, String>(); Credentials creds = UserGroupInformation.getCredentials(); if (!creds.getAllTokens) { serviceAddr = InetSocketAddress(url()); TextSecurityUtil(serviceAddr);Token<? extends TokenIdentifier> dt = creds(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams); return super.openConnection(url, token); }", "n_tokens": 203, "n_pass": [466, 22, 19]}
{"time": "2023-09-24 01:34:43.733476", "score": "0.9953", "loss": "0.0105", "code": "HttpURLConnection openConnection(URL urldoAs) throws  AuthenticationException { Preconditions(url, \"url\"); Preconditions.checkNotNull(token, \"token\"); Map<String, String> extraParams = new HashMap<String, String>(); Credentials creds = UserGroupInformation.getCredentials(); if (!creds.getAllTokens) { serviceAddr = InetSocketAddress(url()); TextSecurityUtil(serviceAddr);Token<? extends TokenIdentifier> dt = creds(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams); return super.openConnection(url, token); }", "n_tokens": 201, "n_pass": [470, 23, 20]}
{"time": "2023-09-24 01:34:45.663164", "score": "0.9877", "loss": "0.0315", "code": "HttpURLConnection openConnection(URL urldoAs) throws  AuthenticationException { Preconditions(url, \"url\"); checkNotNull(token, \"token\"); Map<String, String> extraParams = new HashMap<String, String>(); Credentials creds = UserGroupInformation.getCredentials(); if (!creds.getAllTokens) { serviceAddr = InetSocketAddress(url()); TextSecurityUtil(serviceAddr);Token<? extends TokenIdentifier> dt = creds(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams); return super.openConnection(url, token); }", "n_tokens": 199, "n_pass": [476, 24, 21]}
{"time": "2023-09-24 01:34:47.394643", "score": "0.995", "loss": "0.0113", "code": "HttpURLConnection openConnection(URL urldoAs) throws  AuthenticationException { Preconditions(url, \"url\"); checkNotNull( \"token\"); Map<String, String> extraParams = new HashMap<String, String>(); Credentials creds = UserGroupInformation.getCredentials(); if (!creds.getAllTokens) { serviceAddr = InetSocketAddress(url()); TextSecurityUtil(serviceAddr);Token<? extends TokenIdentifier> dt = creds(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams); return super.openConnection(url, token); }", "n_tokens": 197, "n_pass": [478, 25, 22]}
{"time": "2023-09-24 01:34:49.245552", "score": "0.9972", "loss": "0.0063", "code": "HttpURLConnection openConnection(URL urldoAs) throws  AuthenticationException { Preconditions(url, \"url\"); checkNotNull( \"token\"); Map<StringString> extraParams = new HashMap<String, String>(); Credentials creds = UserGroupInformation.getCredentials(); if (!creds.getAllTokens) { serviceAddr = InetSocketAddress(url()); TextSecurityUtil(serviceAddr);Token<? extends TokenIdentifier> dt = creds(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams); return super.openConnection(url, token); }", "n_tokens": 195, "n_pass": [484, 26, 23]}
{"time": "2023-09-24 01:34:51.119064", "score": "0.9956", "loss": "0.0096", "code": "HttpURLConnection openConnection(URL urldoAs) throws  AuthenticationException { Preconditions(url, \"url\"); checkNotNull( \"token\"); Map<StringString> extraParams = new HashMap<StringString>(); Credentials creds = UserGroupInformation.getCredentials(); if (!creds.getAllTokens) { serviceAddr = InetSocketAddress(url()); TextSecurityUtil(serviceAddr);Token<? extends TokenIdentifier> dt = creds(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams); return super.openConnection(url, token); }", "n_tokens": 193, "n_pass": [491, 27, 24]}
{"time": "2023-09-24 01:34:52.859673", "score": "0.9948", "loss": "0.0116", "code": "HttpURLConnection openConnection(URL urldoAs) throws  AuthenticationException { Preconditions(url, \"url\"); checkNotNull( \"token\"); Map<StringString> extraParams = new HashMap<StringString>(); creds = UserGroupInformation.getCredentials(); if (!creds.getAllTokens) { serviceAddr = InetSocketAddress(url()); TextSecurityUtil(serviceAddr);Token<? extends TokenIdentifier> dt = creds(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams); return super.openConnection(url, token); }", "n_tokens": 191, "n_pass": [495, 28, 25]}
{"time": "2023-09-24 01:34:54.654524", "score": "0.9967", "loss": "0.0075", "code": "HttpURLConnection openConnection(URL urldoAs) throws  AuthenticationException { Preconditions(url, \"url\"); checkNotNull( \"token\"); Map<StringString> extraParams = new HashMap<StringString>(); creds = getCredentials(); if (!creds.getAllTokens) { serviceAddr = InetSocketAddress(url()); TextSecurityUtil(serviceAddr);Token<? extends TokenIdentifier> dt = creds(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams); return super.openConnection(url, token); }", "n_tokens": 189, "n_pass": [498, 29, 26]}
{"time": "2023-09-24 01:34:56.538941", "score": "0.9969", "loss": "0.007", "code": "HttpURLConnection openConnection(URL urldoAs) throws  AuthenticationException { Preconditions(url, \"url\"); checkNotNull( \"token\"); Map<StringString> extraParams = new HashMap<StringString>(); creds = getCredentials(); if (!creds) { serviceAddr = InetSocketAddress(url()); TextSecurityUtil(serviceAddr);Token<? extends TokenIdentifier> dt = creds(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams); return super.openConnection(url, token); }", "n_tokens": 187, "n_pass": [504, 30, 27]}
{"time": "2023-09-24 01:34:58.630675", "score": "0.9972", "loss": "0.0065", "code": "HttpURLConnection openConnection(URL urldoAs) throws  AuthenticationException { Preconditions(url, \"url\"); checkNotNull( \"token\"); Map<StringString> extraParams = new HashMap<StringString>(); creds = getCredentials(); if (!creds) { serviceAddr = InetSocketAddress(url()); (serviceAddr);Token<? extends TokenIdentifier> dt = creds(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams); return super.openConnection(url, token); }", "n_tokens": 185, "n_pass": [513, 31, 28]}
{"time": "2023-09-24 01:35:00.615826", "score": "0.9968", "loss": "0.0074", "code": "HttpURLConnection openConnection(URL urldoAs) throws  AuthenticationException { Preconditions(url, \"url\"); checkNotNull( \"token\"); Map<StringString> extraParams = new HashMap<StringString>(); creds = getCredentials(); if (!creds) { serviceAddr = InetSocketAddress(url()); (serviceAddr);Token<? extends TokenIdentifier> dt =(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams); return super.openConnection(url, token); }", "n_tokens": 183, "n_pass": [522, 32, 29]}
{"time": "2023-09-24 01:35:02.940906", "score": "0.9918", "loss": "0.0186", "code": "HttpURLConnection openConnection(URL urldoAs) throws  AuthenticationException { Preconditions(url, \"url\"); checkNotNull( \"token\"); Map<StringString> extraParams = new HashMap<StringString>(); creds = getCredentials(); if (!creds) { serviceAddr = InetSocketAddress(url()); (serviceAddr);Token<? extends TokenIdentifier> dt =(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);super.openConnection(url, token); }", "n_tokens": 180, "n_pass": [546, 33, 30]}
{"time": "2023-09-24 01:35:21.668919", "score": "0.5409", "loss": "1.5292", "code": "HttpURLConnection openConnection(URL urldoAs) throws  AuthenticationException { Preconditions(url, \"url\"); checkNotNull( \"token\"); Map<StringString> extraParams = new HashMap<StringString>(); creds = getCredentials(); if (!creds) { serviceAddr = InetSocketAddress(url()); (serviceAddr);Token<? extends TokenIdentifier> dt =(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection(url, token); }", "n_tokens": 178, "n_pass": [786, 34, 31]}
{"time": "2023-09-24 01:35:23.480504", "score": "0.3565", "loss": "2.6325", "code": "HttpURLConnection openConnection(URL urldoAs) throws  AuthenticationException { Preconditions(url, \"url\"); checkNotNull( \"token\"); Map<StringString> extraParams = new HashMap<StringString>(); creds = getCredentials(); if (!creds) { serviceAddr = InetSocketAddress(url()); (serviceAddr);Token<? extends TokenIdentifier> dt =(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 176, "n_pass": [788, 35, 32]}
{"time": "2023-09-24 01:35:28.239131", "score": "0.3807", "loss": "2.4732", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException { Preconditions(url, \"url\"); checkNotNull( \"token\"); Map<StringString> extraParams = new HashMap<StringString>(); creds = getCredentials(); if (!creds) { serviceAddr = InetSocketAddress(url()); (serviceAddr);Token<? extends TokenIdentifier> dt =(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 175, "n_pass": [798, 37, 33]}
{"time": "2023-09-24 01:35:37.270532", "score": "0.4467", "loss": "2.0862", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url, \"url\"); checkNotNull( \"token\"); Map<StringString> extraParams = new HashMap<StringString>(); creds = getCredentials(); if (!creds) { serviceAddr = InetSocketAddress(url()); (serviceAddr);Token<? extends TokenIdentifier> dt =(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 174, "n_pass": [808, 42, 34]}
{"time": "2023-09-24 01:35:39.014582", "score": "0.4217", "loss": "2.2067", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"url\"); checkNotNull( \"token\"); Map<StringString> extraParams = new HashMap<StringString>(); creds = getCredentials(); if (!creds) { serviceAddr = InetSocketAddress(url()); (serviceAddr);Token<? extends TokenIdentifier> dt =(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 173, "n_pass": [813, 43, 35]}
{"time": "2023-09-24 01:35:40.848262", "score": "0.5114", "loss": "1.7521", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); checkNotNull( \"token\"); Map<StringString> extraParams = new HashMap<StringString>(); creds = getCredentials(); if (!creds) { serviceAddr = InetSocketAddress(url()); (serviceAddr);Token<? extends TokenIdentifier> dt =(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 172, "n_pass": [815, 44, 36]}
{"time": "2023-09-24 01:35:44.571908", "score": "0.4035", "loss": "2.334", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); ( \"token\"); Map<StringString> extraParams = new HashMap<StringString>(); creds = getCredentials(); if (!creds) { serviceAddr = InetSocketAddress(url()); (serviceAddr);Token<? extends TokenIdentifier> dt =(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 171, "n_pass": [820, 46, 37]}
{"time": "2023-09-24 01:35:46.565900", "score": "0.4717", "loss": "1.9643", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"token\"); Map<StringString> extraParams = new HashMap<StringString>(); creds = getCredentials(); if (!creds) { serviceAddr = InetSocketAddress(url()); (serviceAddr);Token<? extends TokenIdentifier> dt =(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 170, "n_pass": [822, 47, 38]}
{"time": "2023-09-24 01:35:48.350140", "score": "0.336", "loss": "2.8084", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<StringString> extraParams = new HashMap<StringString>(); creds = getCredentials(); if (!creds) { serviceAddr = InetSocketAddress(url()); (serviceAddr);Token<? extends TokenIdentifier> dt =(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 169, "n_pass": [824, 48, 39]}
{"time": "2023-09-24 01:35:52.202475", "score": "0.5831", "loss": "1.4229", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String> extraParams = new HashMap<StringString>(); creds = getCredentials(); if (!creds) { serviceAddr = InetSocketAddress(url()); (serviceAddr);Token<? extends TokenIdentifier> dt =(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 168, "n_pass": [831, 50, 40]}
{"time": "2023-09-24 01:35:53.919410", "score": "0.4593", "loss": "2.0773", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams = new HashMap<StringString>(); creds = getCredentials(); if (!creds) { serviceAddr = InetSocketAddress(url()); (serviceAddr);Token<? extends TokenIdentifier> dt =(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 167, "n_pass": [834, 51, 41]}
{"time": "2023-09-24 01:35:55.775706", "score": "0.5212", "loss": "1.7021", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<StringString>(); creds = getCredentials(); if (!creds) { serviceAddr = InetSocketAddress(url()); (serviceAddr);Token<? extends TokenIdentifier> dt =(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 166, "n_pass": [836, 52, 42]}
{"time": "2023-09-24 01:35:59.834855", "score": "0.3811", "loss": "2.5469", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<String>(); creds = getCredentials(); if (!creds) { serviceAddr = InetSocketAddress(url()); (serviceAddr);Token<? extends TokenIdentifier> dt =(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 165, "n_pass": [843, 54, 43]}
{"time": "2023-09-24 01:36:01.673321", "score": "0.5548", "loss": "1.5508", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<>(); creds = getCredentials(); if (!creds) { serviceAddr = InetSocketAddress(url()); (serviceAddr);Token<? extends TokenIdentifier> dt =(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 164, "n_pass": [844, 55, 44]}
{"time": "2023-09-24 01:36:03.494925", "score": "0.4402", "loss": "2.182", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<>();creds = getCredentials(); if (!creds) { serviceAddr = InetSocketAddress(url()); (serviceAddr);Token<? extends TokenIdentifier> dt =(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 163, "n_pass": [849, 56, 45]}
{"time": "2023-09-24 01:36:05.289914", "score": "0.5118", "loss": "1.7641", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<>();creds= getCredentials(); if (!creds) { serviceAddr = InetSocketAddress(url()); (serviceAddr);Token<? extends TokenIdentifier> dt =(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 162, "n_pass": [851, 57, 46]}
{"time": "2023-09-24 01:36:07.038866", "score": "0.5473", "loss": "1.5773", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<>();creds=getCredentials(); if (!creds) { serviceAddr = InetSocketAddress(url()); (serviceAddr);Token<? extends TokenIdentifier> dt =(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 161, "n_pass": [853, 58, 47]}
{"time": "2023-09-24 01:36:08.912920", "score": "0.4498", "loss": "2.1565", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<>();creds=getCredentials();if (!creds) { serviceAddr = InetSocketAddress(url()); (serviceAddr);Token<? extends TokenIdentifier> dt =(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 160, "n_pass": [858, 59, 48]}
{"time": "2023-09-24 01:36:10.761905", "score": "0.301", "loss": "3.1074", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<>();creds=getCredentials();if(!creds) { serviceAddr = InetSocketAddress(url()); (serviceAddr);Token<? extends TokenIdentifier> dt =(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 159, "n_pass": [860, 60, 49]}
{"time": "2023-09-24 01:36:12.574989", "score": "0.4915", "loss": "1.8807", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<>();creds=getCredentials();if(creds) { serviceAddr = InetSocketAddress(url()); (serviceAddr);Token<? extends TokenIdentifier> dt =(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 158, "n_pass": [862, 61, 50]}
{"time": "2023-09-24 01:36:14.531050", "score": "0.3857", "loss": "2.5213", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<>();creds=getCredentials();if(creds){ serviceAddr = InetSocketAddress(url()); (serviceAddr);Token<? extends TokenIdentifier> dt =(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 157, "n_pass": [865, 62, 51]}
{"time": "2023-09-24 01:36:16.314593", "score": "0.5877", "loss": "1.3896", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<>();creds=getCredentials();if(creds){serviceAddr = InetSocketAddress(url()); (serviceAddr);Token<? extends TokenIdentifier> dt =(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 156, "n_pass": [867, 63, 52]}
{"time": "2023-09-24 01:36:19.777967", "score": "0.5973", "loss": "1.3655", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<>();creds=getCredentials();if(creds){serviceAddr =InetSocketAddress(url()); (serviceAddr);Token<? extends TokenIdentifier> dt =(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 155, "n_pass": [871, 65, 53]}
{"time": "2023-09-24 01:36:21.678131", "score": "0.5718", "loss": "1.4589", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<>();creds=getCredentials();if(creds){serviceAddr =(url()); (serviceAddr);Token<? extends TokenIdentifier> dt =(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 154, "n_pass": [872, 66, 54]}
{"time": "2023-09-24 01:36:25.263999", "score": "0.5096", "loss": "1.7863", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<>();creds=getCredentials();if(creds){serviceAddr =(url()); (serviceAddr);Token<?extends TokenIdentifier> dt =(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 153, "n_pass": [887, 68, 55]}
{"time": "2023-09-24 01:36:27.093539", "score": "0.5534", "loss": "1.5568", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<>();creds=getCredentials();if(creds){serviceAddr =(url()); (serviceAddr);Token<?extends TokenIdentifier>dt =(service); if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 152, "n_pass": [892, 69, 56]}
{"time": "2023-09-24 01:36:30.739103", "score": "0.5435", "loss": "1.6065", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<>();creds=getCredentials();if(creds){serviceAddr =(url()); (serviceAddr);Token<?extends TokenIdentifier>dt =(service);if (dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 151, "n_pass": [900, 71, 57]}
{"time": "2023-09-24 01:36:32.488768", "score": "0.4548", "loss": "2.07", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<>();creds=getCredentials();if(creds){serviceAddr =(url()); (serviceAddr);Token<?extends TokenIdentifier>dt =(service);if(dt != null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 150, "n_pass": [902, 72, 58]}
{"time": "2023-09-24 01:36:34.209922", "score": "0.6033", "loss": "1.311", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<>();creds=getCredentials();if(creds){serviceAddr =(url()); (serviceAddr);Token<?extends TokenIdentifier>dt =(service);if(dt!= null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 149, "n_pass": [905, 73, 59]}
{"time": "2023-09-24 01:36:35.968896", "score": "0.4991", "loss": "1.8395", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<>();creds=getCredentials();if(creds){serviceAddr =(url()); (serviceAddr);Token<?extends TokenIdentifier>dt =(service);if(dt= null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 148, "n_pass": [906, 74, 60]}
{"time": "2023-09-24 01:36:37.661032", "score": "0.5831", "loss": "1.4087", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<>();creds=getCredentials();if(creds){serviceAddr =(url()); (serviceAddr);Token<?extends TokenIdentifier>dt =(service);if(dt=null) {  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 147, "n_pass": [908, 75, 61]}
{"time": "2023-09-24 01:36:39.547499", "score": "0.5315", "loss": "1.6527", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<>();creds=getCredentials();if(creds){serviceAddr =(url()); (serviceAddr);Token<?extends TokenIdentifier>dt =(service);if(dt=null){  } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 146, "n_pass": [911, 76, 62]}
{"time": "2023-09-24 01:36:41.325452", "score": "0.5638", "loss": "1.492", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<>();creds=getCredentials();if(creds){serviceAddr =(url()); (serviceAddr);Token<?extends TokenIdentifier>dt =(service);if(dt=null){ } } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 145, "n_pass": [913, 77, 63]}
{"time": "2023-09-24 01:36:43.089860", "score": "0.6162", "loss": "1.2713", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<>();creds=getCredentials();if(creds){serviceAddr =(url()); (serviceAddr);Token<?extends TokenIdentifier>dt =(service);if(dt=null){} } if (doAs != null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 144, "n_pass": [914, 78, 64]}
{"time": "2023-09-24 01:36:50.122416", "score": "0.487", "loss": "1.8722", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<>();creds=getCredentials();if(creds){serviceAddr =(url()); (serviceAddr);Token<?extends TokenIdentifier>dt =(service);if(dt=null){} } if (doAs!= null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 143, "n_pass": [923, 82, 65]}
{"time": "2023-09-24 01:36:52.077459", "score": "0.5319", "loss": "1.6605", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<>();creds=getCredentials();if(creds){serviceAddr =(url()); (serviceAddr);Token<?extends TokenIdentifier>dt =(service);if(dt=null){} } if (doAs= null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 142, "n_pass": [924, 83, 66]}
{"time": "2023-09-24 01:36:53.984442", "score": "0.5866", "loss": "1.392", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<>();creds=getCredentials();if(creds){serviceAddr =(url()); (serviceAddr);Token<?extends TokenIdentifier>dt =(service);if(dt=null){} } if (doAs=null) { extraParams.put(URLEncoder.encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 141, "n_pass": [926, 84, 67]}
{"time": "2023-09-24 01:36:58.062199", "score": "0.5846", "loss": "1.4103", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<>();creds=getCredentials();if(creds){serviceAddr =(url()); (serviceAddr);Token<?extends TokenIdentifier>dt =(service);if(dt=null){} } if (doAs=null) { extraParams.put(encode(doAs, \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 139, "n_pass": [932, 86, 68]}
{"time": "2023-09-24 01:36:59.862124", "score": "0.5368", "loss": "1.6516", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<>();creds=getCredentials();if(creds){serviceAddr =(url()); (serviceAddr);Token<?extends TokenIdentifier>dt =(service);if(dt=null){} } if (doAs=null) { extraParams.put(encode( \"UTF-8\")); }  augmentURL(extraParams);openConnection( token); }", "n_tokens": 137, "n_pass": [934, 87, 69]}
{"time": "2023-09-24 01:37:03.361827", "score": "0.8608", "loss": "0.418", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<>();creds=getCredentials();if(creds){serviceAddr =(url()); (serviceAddr);Token<?extends TokenIdentifier>dt =(service);if(dt=null){} } if (doAs=null) { extraParams.put(encode( \"UTF-8\")); } (extraParams);openConnection( token); }", "n_tokens": 135, "n_pass": [941, 89, 70]}
{"time": "2023-09-24 01:37:05.167368", "score": "0.6093", "loss": "1.2926", "code": "HttpURLConnection openConnection(URL doAs) throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<>();creds=getCredentials();if(creds){serviceAddr =(url()); (serviceAddr);Token<?extends TokenIdentifier>dt =(service);if(dt=null){} } if (doAs=null) { extraParams.put(encode( \"UTF-8\")); } (extraParams);openConnection(); }", "n_tokens": 133, "n_pass": [945, 90, 71]}
{"time": "2023-09-24 01:37:07.997322", "score": "0.6093", "loss": "1.2926", "code": "HttpURLConnection openConnection(URL doAs)throws  AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<>();creds=getCredentials();if(creds){serviceAddr =(url()); (serviceAddr);Token<?extends TokenIdentifier>dt =(service);if(dt=null){} } if (doAs=null) { extraParams.put(encode( \"UTF-8\")); } (extraParams);openConnection(); }", "n_tokens": 132, "n_pass": [956, 91, 72]}
{"time": "2023-09-24 01:37:09.767989", "score": "0.6093", "loss": "1.2926", "code": "HttpURLConnection openConnection(URL doAs)throws AuthenticationException {Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<>();creds=getCredentials();if(creds){serviceAddr =(url()); (serviceAddr);Token<?extends TokenIdentifier>dt =(service);if(dt=null){} } if (doAs=null) { extraParams.put(encode( \"UTF-8\")); } (extraParams);openConnection(); }", "n_tokens": 131, "n_pass": [958, 92, 73]}
{"time": "2023-09-24 01:37:11.471306", "score": "0.6093", "loss": "1.2926", "code": "HttpURLConnection openConnection(URL doAs)throws AuthenticationException{Preconditions(url,\"\"); (\"\"); Map<String>extraParams= new HashMap<>();creds=getCredentials();if(creds){serviceAddr =(url()); (serviceAddr);Token<?extends TokenIdentifier>dt =(service);if(dt=null){} } if (doAs=null) { extraParams.put(encode( \"UTF-8\")); } (extraParams);openConnection(); }", "n_tokens": 130, "n_pass": [961, 93, 74]}
{"time": "2023-09-24 01:37:13.321475", "score": "0.6093", "loss": "1.2926", "code": "HttpURLConnection openConnection(URL doAs)throws AuthenticationException{Preconditions(url,\"\");(\"\"); Map<String>extraParams= new HashMap<>();creds=getCredentials();if(creds){serviceAddr =(url()); (serviceAddr);Token<?extends TokenIdentifier>dt =(service);if(dt=null){} } if (doAs=null) { extraParams.put(encode( \"UTF-8\")); } (extraParams);openConnection(); }", "n_tokens": 129, "n_pass": [971, 94, 75]}
{"time": "2023-09-24 01:37:15.075901", "score": "0.6093", "loss": "1.2926", "code": "HttpURLConnection openConnection(URL doAs)throws AuthenticationException{Preconditions(url,\"\");(\"\");Map<String>extraParams= new HashMap<>();creds=getCredentials();if(creds){serviceAddr =(url()); (serviceAddr);Token<?extends TokenIdentifier>dt =(service);if(dt=null){} } if (doAs=null) { extraParams.put(encode( \"UTF-8\")); } (extraParams);openConnection(); }", "n_tokens": 128, "n_pass": [977, 95, 76]}
{"time": "2023-09-24 01:37:17.818360", "score": "0.6093", "loss": "1.2926", "code": "HttpURLConnection openConnection(URL doAs)throws AuthenticationException{Preconditions(url,\"\");(\"\");Map<String>extraParams=new HashMap<>();creds=getCredentials();if(creds){serviceAddr =(url()); (serviceAddr);Token<?extends TokenIdentifier>dt =(service);if(dt=null){} } if (doAs=null) { extraParams.put(encode( \"UTF-8\")); } (extraParams);openConnection(); }", "n_tokens": 127, "n_pass": [984, 96, 77]}
{"time": "2023-09-24 01:37:19.713789", "score": "0.6054", "loss": "1.3787", "code": "HttpURLConnection openConnection(URL doAs)throws AuthenticationException{Preconditions(url,\"\");(\"\");Map<String>extraParams=new HashMap<>();credsgetCredentials();if(creds){serviceAddr =(url()); (serviceAddr);Token<?extends TokenIdentifier>dt =(service);if(dt=null){} } if (doAs=null) { extraParams.put(encode( \"UTF-8\")); } (extraParams);openConnection(); }", "n_tokens": 126, "n_pass": [994, 97, 78]}
{"time": "2023-09-24 01:37:21.496194", "score": "0.6308", "loss": "1.2233", "code": "HttpURLConnection openConnection(URL doAs)throws AuthenticationException{Preconditions(url,\"\");(\"\");Map<String>extraParams=new HashMap<>();creds();if(creds){serviceAddr =(url()); (serviceAddr);Token<?extends TokenIdentifier>dt =(service);if(dt=null){} } if (doAs=null) { extraParams.put(encode( \"UTF-8\")); } (extraParams);openConnection(); }", "n_tokens": 125, "n_pass": [995, 98, 79]}
{"time": "2023-09-24 01:37:23.239229", "score": "0.6308", "loss": "1.2233", "code": "HttpURLConnection openConnection(URL doAs)throws AuthenticationException{Preconditions(url,\"\");(\"\");Map<String>extraParams=new HashMap<>();creds();if(creds){serviceAddr=(url()); (serviceAddr);Token<?extends TokenIdentifier>dt =(service);if(dt=null){} } if (doAs=null) { extraParams.put(encode( \"UTF-8\")); } (extraParams);openConnection(); }", "n_tokens": 124, "n_pass": [1005, 99, 80]}
{"time": "2023-09-24 01:37:24.971928", "score": "0.597", "loss": "1.3627", "code": "HttpURLConnection openConnection(URL doAs)throws AuthenticationException{Preconditions(url,\"\");(\"\");Map<String>extraParams=new HashMap<>();creds();if(creds){serviceAddr(url()); (serviceAddr);Token<?extends TokenIdentifier>dt =(service);if(dt=null){} } if (doAs=null) { extraParams.put(encode( \"UTF-8\")); } (extraParams);openConnection(); }", "n_tokens": 123, "n_pass": [1006, 100, 81]}
{"time": "2023-09-24 01:37:26.724774", "score": "0.597", "loss": "1.3627", "code": "HttpURLConnection openConnection(URL doAs)throws AuthenticationException{Preconditions(url,\"\");(\"\");Map<String>extraParams=new HashMap<>();creds();if(creds){serviceAddr(url());(serviceAddr);Token<?extends TokenIdentifier>dt =(service);if(dt=null){} } if (doAs=null) { extraParams.put(encode( \"UTF-8\")); } (extraParams);openConnection(); }", "n_tokens": 122, "n_pass": [1013, 101, 82]}
{"time": "2023-09-24 01:37:28.490246", "score": "0.597", "loss": "1.3627", "code": "HttpURLConnection openConnection(URL doAs)throws AuthenticationException{Preconditions(url,\"\");(\"\");Map<String>extraParams=new HashMap<>();creds();if(creds){serviceAddr(url());(serviceAddr);Token<?extends TokenIdentifier>dt=(service);if(dt=null){} } if (doAs=null) { extraParams.put(encode( \"UTF-8\")); } (extraParams);openConnection(); }", "n_tokens": 121, "n_pass": [1026, 102, 83]}
{"time": "2023-09-24 01:37:30.232459", "score": "0.5874", "loss": "1.4499", "code": "HttpURLConnection openConnection(URL doAs)throws AuthenticationException{Preconditions(url,\"\");(\"\");Map<String>extraParams=new HashMap<>();creds();if(creds){serviceAddr(url());(serviceAddr);Token<?extends TokenIdentifier>dt=(service);if(dtnull){} } if (doAs=null) { extraParams.put(encode( \"UTF-8\")); } (extraParams);openConnection(); }", "n_tokens": 120, "n_pass": [1035, 103, 84]}
{"time": "2023-09-24 01:37:32.005185", "score": "0.5945", "loss": "1.4338", "code": "HttpURLConnection openConnection(URL doAs)throws AuthenticationException{Preconditions(url,\"\");(\"\");Map<String>extraParams=new HashMap<>();creds();if(creds){serviceAddr(url());(serviceAddr);Token<?extends TokenIdentifier>dt=(service);if(dt){} } if (doAs=null) { extraParams.put(encode( \"UTF-8\")); } (extraParams);openConnection(); }", "n_tokens": 119, "n_pass": [1036, 104, 85]}
{"time": "2023-09-24 01:37:33.739954", "score": "0.5945", "loss": "1.4338", "code": "HttpURLConnection openConnection(URL doAs)throws AuthenticationException{Preconditions(url,\"\");(\"\");Map<String>extraParams=new HashMap<>();creds();if(creds){serviceAddr(url());(serviceAddr);Token<?extends TokenIdentifier>dt=(service);if(dt){}} if (doAs=null) { extraParams.put(encode( \"UTF-8\")); } (extraParams);openConnection(); }", "n_tokens": 118, "n_pass": [1040, 105, 86]}
{"time": "2023-09-24 01:37:35.614572", "score": "0.5945", "loss": "1.4338", "code": "HttpURLConnection openConnection(URL doAs)throws AuthenticationException{Preconditions(url,\"\");(\"\");Map<String>extraParams=new HashMap<>();creds();if(creds){serviceAddr(url());(serviceAddr);Token<?extends TokenIdentifier>dt=(service);if(dt){}}if (doAs=null) { extraParams.put(encode( \"UTF-8\")); } (extraParams);openConnection(); }", "n_tokens": 117, "n_pass": [1042, 106, 87]}
{"time": "2023-09-24 01:37:37.271439", "score": "0.5945", "loss": "1.4338", "code": "HttpURLConnection openConnection(URL doAs)throws AuthenticationException{Preconditions(url,\"\");(\"\");Map<String>extraParams=new HashMap<>();creds();if(creds){serviceAddr(url());(serviceAddr);Token<?extends TokenIdentifier>dt=(service);if(dt){}}if(doAs=null) { extraParams.put(encode( \"UTF-8\")); } (extraParams);openConnection(); }", "n_tokens": 116, "n_pass": [1044, 107, 88]}
{"time": "2023-09-24 01:37:39.019044", "score": "0.5248", "loss": "1.8312", "code": "HttpURLConnection openConnection(URL doAs)throws AuthenticationException{Preconditions(url,\"\");(\"\");Map<String>extraParams=new HashMap<>();creds();if(creds){serviceAddr(url());(serviceAddr);Token<?extends TokenIdentifier>dt=(service);if(dt){}}if(doAsnull) { extraParams.put(encode( \"UTF-8\")); } (extraParams);openConnection(); }", "n_tokens": 115, "n_pass": [1047, 108, 89]}
{"time": "2023-09-24 01:37:40.772346", "score": "0.5499", "loss": "1.6909", "code": "HttpURLConnection openConnection(URL doAs)throws AuthenticationException{Preconditions(url,\"\");(\"\");Map<String>extraParams=new HashMap<>();creds();if(creds){serviceAddr(url());(serviceAddr);Token<?extends TokenIdentifier>dt=(service);if(dt){}}if(doAs) { extraParams.put(encode( \"UTF-8\")); } (extraParams);openConnection(); }", "n_tokens": 114, "n_pass": [1048, 109, 90]}
{"time": "2023-09-24 01:37:42.530003", "score": "0.4495", "loss": "2.2554", "code": "HttpURLConnection openConnection(URL doAs)throws AuthenticationException{Preconditions(url,\"\");(\"\");Map<String>extraParams=new HashMap<>();creds();if(creds){serviceAddr(url());(serviceAddr);Token<?extends TokenIdentifier>dt=(service);if(dt){}}if(doAs) { put(encode( \"UTF-8\")); } (extraParams);openConnection(); }", "n_tokens": 112, "n_pass": [1051, 110, 91]}
{"time": "2023-09-24 01:37:44.262452", "score": "0.4543", "loss": "2.2979", "code": "HttpURLConnection openConnection(URL doAs)throws AuthenticationException{Preconditions(url,\"\");(\"\");Map<String>extraParams=new HashMap<>();creds();if(creds){serviceAddr(url());(serviceAddr);Token<?extends TokenIdentifier>dt=(service);if(dt){}}if(doAs) { put(encode( \"8\")); } (extraParams);openConnection(); }", "n_tokens": 110, "n_pass": [1055, 111, 92]}
{"time": "2023-09-24 01:37:48.380173", "score": "0.4274", "loss": "2.5533", "code": "HttpURLConnection openConnection(URL doAs)throws AuthenticationException{Preconditions(url,\"\");(\"\");Map<String>extraParams=new HashMap<>();creds();if(creds){(url());(serviceAddr);Token<?extends TokenIdentifier>dt=(service);if(dt){}}if(doAs) { put(encode( \"8\")); } (extraParams);openConnection(); }", "n_tokens": 109, "n_pass": [1113, 112, 93]}
{"time": "2023-09-24 01:37:55.795521", "score": "0.4274", "loss": "2.5533", "code": "HttpURLConnection openConnection(URL doAs)throws AuthenticationException{Preconditions(url,\"\");(\"\");Map<String>extraParams=new HashMap<>();creds();if(creds){(url());(serviceAddr);Token<?extends TokenIdentifier>dt=(service);if(dt){}}if(doAs){ put(encode( \"8\")); } (extraParams);openConnection(); }", "n_tokens": 108, "n_pass": [1238, 113, 94]}
{"time": "2023-09-24 01:37:57.592108", "score": "0.4274", "loss": "2.5533", "code": "HttpURLConnection openConnection(URL doAs)throws AuthenticationException{Preconditions(url,\"\");(\"\");Map<String>extraParams=new HashMap<>();creds();if(creds){(url());(serviceAddr);Token<?extends TokenIdentifier>dt=(service);if(dt){}}if(doAs){put(encode( \"8\")); } (extraParams);openConnection(); }", "n_tokens": 107, "n_pass": [1240, 114, 95]}
{"time": "2023-09-24 01:38:01.057969", "score": "0.5376", "loss": "1.808", "code": "HttpURLConnection openConnection(URL doAs)throws AuthenticationException{Preconditions(url,\"\");(\"\");Map<String>extraParams=new HashMap<>();creds();if(creds){(url());(serviceAddr);Token<?extends TokenIdentifier>dt=(service);if(dt){}}if(doAs){put(( \"8\")); } (extraParams);openConnection(); }", "n_tokens": 106, "n_pass": [1243, 116, 96]}
{"time": "2023-09-24 01:38:02.790763", "score": "0.5376", "loss": "1.808", "code": "HttpURLConnection openConnection(URL doAs)throws AuthenticationException{Preconditions(url,\"\");(\"\");Map<String>extraParams=new HashMap<>();creds();if(creds){(url());(serviceAddr);Token<?extends TokenIdentifier>dt=(service);if(dt){}}if(doAs){put((\"8\")); } (extraParams);openConnection(); }", "n_tokens": 105, "n_pass": [1245, 117, 97]}
{"time": "2023-09-24 01:38:04.539516", "score": "0.544", "loss": "1.7616", "code": "HttpURLConnection openConnection(URL doAs)throws AuthenticationException{Preconditions(url,\"\");(\"\");Map<String>extraParams=new HashMap<>();creds();if(creds){(url());(serviceAddr);Token<?extends TokenIdentifier>dt=(service);if(dt){}}if(doAs){put((\"\")); } (extraParams);openConnection(); }", "n_tokens": 104, "n_pass": [1247, 118, 98]}
{"time": "2023-09-24 01:38:06.283929", "score": "0.544", "loss": "1.7616", "code": "HttpURLConnection openConnection(URL doAs)throws AuthenticationException{Preconditions(url,\"\");(\"\");Map<String>extraParams=new HashMap<>();creds();if(creds){(url());(serviceAddr);Token<?extends TokenIdentifier>dt=(service);if(dt){}}if(doAs){put((\"\"));} (extraParams);openConnection(); }", "n_tokens": 103, "n_pass": [1252, 119, 99]}
{"time": "2023-09-24 01:38:08.044221", "score": "0.544", "loss": "1.7616", "code": "HttpURLConnection openConnection(URL doAs)throws AuthenticationException{Preconditions(url,\"\");(\"\");Map<String>extraParams=new HashMap<>();creds();if(creds){(url());(serviceAddr);Token<?extends TokenIdentifier>dt=(service);if(dt){}}if(doAs){put((\"\"));}(extraParams);openConnection(); }", "n_tokens": 102, "n_pass": [1254, 120, 100]}
{"time": "2023-09-24 01:38:10.135239", "score": "0.544", "loss": "1.7616", "code": "HttpURLConnection openConnection(URL doAs)throws AuthenticationException{Preconditions(url,\"\");(\"\");Map<String>extraParams=new HashMap<>();creds();if(creds){(url());(serviceAddr);Token<?extends TokenIdentifier>dt=(service);if(dt){}}if(doAs){put((\"\"));}(extraParams);openConnection();}", "n_tokens": 101, "n_pass": [1263, 121, 101]}

Minimal simplified code:
HttpURLConnection openConnection(URL doAs)throws AuthenticationException{Preconditions(url,"");("");Map<String>extraParams=new HashMap<>();creds();if(creds){(url());(serviceAddr);Token<?extends TokenIdentifier>dt=(service);if(dt){}}if(doAs){put((""));}(extraParams);openConnection();}

