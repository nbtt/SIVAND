
path = /Users/lap13494/workspace/ppl-extra-final/java-small/test/hadoop-splitted/TeraValidate_run_0.java
method_name = run
method_body = public int run(String[] args) throws Exception { Job job = Job.getInstance(getConf()); if (args.length != 2) { usage(); return 1; } TeraInputFormat.setInputPaths(job, new Path(args[0])); FileOutputFormat.setOutputPath(job, new Path(args[1])); job.setJobName("TeraValidate"); job.setJarByClass(TeraValidate.class); job.setMapperClass(ValidateMapper.class); job.setReducerClass(ValidateReducer.class); job.setOutputKeyClass(Text.class); job.setOutputValueClass(Text.class); job.setNumReduceTasks(1); FileInputFormat.setMinInputSplitSize(job, Long.MAX_VALUE); job.setInputFormatClass(TeraInputFormat.class); return job.waitForCompletion(true) ? 0 : 1; }
predict, score, loss = run, 0.44101908802986145, 1.0161933898925781

Trace of simplified code(s):
{"time": "2023-09-23 23:41:22.253259", "score": "0.5637", "loss": "0.6856", "code": "public int run(String[] args) throws Exception { Job job = Job.getInstance(getConf()); if (args.length != 2) { usage(); return 1; } TeraInputFormat.setInputPaths(job, new Path(args[0])); FileOutputFormat.setOutputPath(job, new Path(args[1])); job.setJobName(\"TeraValidate\"); job.setJarByClass(TeraValidate.class); job.setMapperClass(ValidateMapper.class); job.setReducerClass(ValidateReducer.class); job.setOutputKeyClass(Text.class); job.setOutputValueClass(Text.class); job.setNumReduceTasks(1); FileInputFormat.setMinInputSplitSize(job, Long.MAX_VALUE); job.setInputFormatClass(TeraInputFormat.class); return job.waitForCompletion(true) ? 0 : 1; }", "n_tokens": 212, "n_pass": [1, 1, 1]}
{"time": "2023-09-23 23:41:24.126313", "score": "0.4636", "loss": "0.9333", "code": "public int run(String[] args) throws Exception { Job job = Job.getInstance(getConf()); if (args.length != 2) { usage(); return 1; } TeraInputFormat.setInputPaths(job, new Path(args[0])); FileOutputFormat.setOutputPath(job, new Path(args[1])); job.setJobName(\"TeraValidate\"); job.setJarByClass(TeraValidate.class); job.setMapperClass(ValidateMapper.class); job; job.setNumReduceTasks(1); FileInputFormat.setMinInputSplitSize(job, Long.MAX_VALUE); job.setInputFormatClass(TeraInputFormat.class); return job.waitForCompletion(true) ? 0 : 1; }", "n_tokens": 185, "n_pass": [25, 2, 2]}
{"time": "2023-09-23 23:41:25.863739", "score": "0.453", "loss": "0.9521", "code": "public int run(String[] args) throws Exception { Job job = Job.getInstance(getConf()); if (args.length != 2) { usage(); return 1; } TeraInputFormat.setInputPaths(job, new Path(args[0])); FileOutputFormat.setOutputPath(job, new Path(args[1])); job.setJobName(\"TeraValidate\"); job.setJarByClass(TeraValidate.class); job.setMapperClass(ValidateMapper.class); jobsetInputFormatClass(TeraInputFormat.class); return job.waitForCompletion(true) ? 0 : 1; }", "n_tokens": 158, "n_pass": [26, 3, 3]}
{"time": "2023-09-23 23:41:28.036687", "score": "0.4255", "loss": "1.0025", "code": "public int run(String[] args) throws Exception { Job job = Job.getInstance(getConf()); if (args.length != 2) { usage(); return 1; } TeraInputFormat.setInputPaths(job, new Path(args[0])); FileOutputFormat.setOutputPath(job, new Path(args[1])); job.setJobName(); job.setMapperClass(ValidateMapper.class); jobsetInputFormatClass(TeraInputFormat.class); return job.waitForCompletion(true) ? 0 : 1; }", "n_tokens": 145, "n_pass": [55, 4, 4]}
{"time": "2023-09-23 23:41:30.232421", "score": "0.4232", "loss": "1.0683", "code": "public int run(String[] args) throws Exception { Job job = Job.getInstance(getConf()); if (args.length != 2) { usage(); return 1; } TeraInputFormat.setInputPaths(job, new Path(args[0])); FileOutputFormat.setOutputPath(job, new Path(args[1])); job.setJobName(ValidateMapper.class); jobsetInputFormatClass(TeraInputFormat.class); return job.waitForCompletion(true) ? 0 : 1; }", "n_tokens": 138, "n_pass": [89, 5, 5]}
{"time": "2023-09-23 23:41:31.941604", "score": "0.4942", "loss": "0.7595", "code": "public int run(String[] args) throws Exception { Job job = Job.getInstance(getConf()); if (args.length != 2) { usage(); return 1; } TeraInputFormat.setInputPaths(job, new Path(args[0])); FileOutputFormat.setOutputPath(job, new Path(args[1])); job.setJobNamejobsetInputFormatClass(TeraInputFormat.class); return job.waitForCompletion(true) ? 0 : 1; }", "n_tokens": 131, "n_pass": [90, 6, 6]}
{"time": "2023-09-23 23:41:33.682824", "score": "0.4435", "loss": "0.9283", "code": "public int run(String[] args) throws Exception { Job job = Job.getInstance(getConf()); if (args.length != 2) { usage(); return 1; } TeraInputFormat.setInputPaths(job, new Path(args[0])); FileOutputFormat.setOutputPath(job, new Path(args[1])); job.setJobName; return job.waitForCompletion(true) ? 0 : 1; }", "n_tokens": 124, "n_pass": [91, 7, 7]}
{"time": "2023-09-23 23:41:35.986609", "score": "0.3886", "loss": "1.0622", "code": "public int run(String[] args) throws Exception { Job.getInstance(getConf()); if (args.length != 2) { usage(); return 1; } TeraInputFormat.setInputPaths(job, new Path(args[0])); FileOutputFormat.setOutputPath(job, new Path(args[1])); job.setJobName; return job.waitForCompletion(true) ? 0 : 1; }", "n_tokens": 118, "n_pass": [98, 8, 8]}
{"time": "2023-09-23 23:41:40.107750", "score": "0.4471", "loss": "0.923", "code": "public int run(String[] args) throws Exception { Job.getInstance(getConf()); if (args!= 2) { usage(); return 1; } TeraInputFormat.setInputPaths(job, new Path(args[0])); FileOutputFormat.setOutputPath(job, new Path(args[1])); job.setJobName; return job.waitForCompletion(true) ? 0 : 1; }", "n_tokens": 115, "n_pass": [158, 10, 9]}
{"time": "2023-09-23 23:41:41.828568", "score": "0.4114", "loss": "0.9534", "code": "public int run(String[] args) throws Exception { Job.getInstance(getConf()); if (args2) { usage(); return 1; } TeraInputFormat.setInputPaths(job, new Path(args[0])); FileOutputFormat.setOutputPath(job, new Path(args[1])); job.setJobName; return job.waitForCompletion(true) ? 0 : 1; }", "n_tokens": 112, "n_pass": [159, 11, 10]}
{"time": "2023-09-23 23:41:43.592821", "score": "0.49", "loss": "0.8275", "code": "public int run(String[] args) throws Exception { Job.getInstance(getConf()); if (args2) { usage();1; } TeraInputFormat.setInputPaths(job, new Path(args[0])); FileOutputFormat.setOutputPath(job, new Path(args[1])); job.setJobName; return job.waitForCompletion(true) ? 0 : 1; }", "n_tokens": 109, "n_pass": [163, 12, 11]}
{"time": "2023-09-23 23:41:45.287724", "score": "0.4843", "loss": "0.923", "code": "public int run(String[] args) throws Exception { Job.getInstance(getConf()); if (args2) { usage();} TeraInputFormat.setInputPaths(job, new Path(args[0])); FileOutputFormat.setOutputPath(job, new Path(args[1])); job.setJobName; return job.waitForCompletion(true) ? 0 : 1; }", "n_tokens": 106, "n_pass": [164, 13, 12]}
{"time": "2023-09-23 23:41:47.070305", "score": "0.4647", "loss": "0.8557", "code": "public int run(String[] args) throws Exception { Job.getInstance(getConf()); if (args2) { usage();} TeraInputFormat.setInputPaths(new Path(args[0])); FileOutputFormat.setOutputPath(job, new Path(args[1])); job.setJobName; return job.waitForCompletion(true) ? 0 : 1; }", "n_tokens": 103, "n_pass": [167, 14, 13]}
{"time": "2023-09-23 23:41:48.752535", "score": "0.5259", "loss": "0.8071", "code": "public int run(String[] args) throws Exception { Job.getInstance(getConf()); if (args2) { usage();} TeraInputFormat.setInputPaths((args[0])); FileOutputFormat.setOutputPath(job, new Path(args[1])); job.setJobName; return job.waitForCompletion(true) ? 0 : 1; }", "n_tokens": 100, "n_pass": [168, 15, 14]}
{"time": "2023-09-23 23:41:50.435352", "score": "0.5697", "loss": "0.7303", "code": "public int run(String[] args) throws Exception { Job.getInstance(getConf()); if (args2) { usage();} TeraInputFormat.setInputPaths((args[0])); FileOutputFormat.setOutputPath(job, new Path()); job.setJobName; return job.waitForCompletion(true) ? 0 : 1; }", "n_tokens": 96, "n_pass": [175, 16, 15]}
{"time": "2023-09-23 23:41:52.127549", "score": "0.5556", "loss": "0.7377", "code": "public int run(String[] args) throws Exception { Job.getInstance(getConf()); if (args2) { usage();} TeraInputFormat.setInputPaths((args[0])); FileOutputFormat.setOutputPath(job, new Path());  return job.waitForCompletion(true) ? 0 : 1; }", "n_tokens": 92, "n_pass": [177, 17, 16]}
{"time": "2023-09-23 23:41:54.374043", "score": "0.563", "loss": "0.7109", "code": "public int run(String[] args) throws Exception {getInstance(getConf()); if (args2) { usage();} TeraInputFormat.setInputPaths((args[0])); FileOutputFormat.setOutputPath(job, new Path());  return job.waitForCompletion(true) ? 0 : 1; }", "n_tokens": 89, "n_pass": [189, 18, 17]}
{"time": "2023-09-23 23:41:58.915926", "score": "0.563", "loss": "0.7109", "code": "public int run(String[] args)throws Exception {getInstance(getConf()); if (args2) { usage();} TeraInputFormat.setInputPaths((args[0])); FileOutputFormat.setOutputPath(job, new Path());  return job.waitForCompletion(true) ? 0 : 1; }", "n_tokens": 88, "n_pass": [271, 19, 18]}
{"time": "2023-09-23 23:42:00.646531", "score": "0.563", "loss": "0.7109", "code": "public int run(String[] args)throws Exception{getInstance(getConf()); if (args2) { usage();} TeraInputFormat.setInputPaths((args[0])); FileOutputFormat.setOutputPath(job, new Path());  return job.waitForCompletion(true) ? 0 : 1; }", "n_tokens": 87, "n_pass": [275, 20, 19]}
{"time": "2023-09-23 23:42:02.487796", "score": "0.586", "loss": "0.6478", "code": "public int run(String[] args)throws Exception{(getConf()); if (args2) { usage();} TeraInputFormat.setInputPaths((args[0])); FileOutputFormat.setOutputPath(job, new Path());  return job.waitForCompletion(true) ? 0 : 1; }", "n_tokens": 86, "n_pass": [277, 21, 20]}
{"time": "2023-09-23 23:42:04.314504", "score": "0.592", "loss": "0.6496", "code": "public int run(String[] args)throws Exception{(getConf); if (args2) { usage();} TeraInputFormat.setInputPaths((args[0])); FileOutputFormat.setOutputPath(job, new Path());  return job.waitForCompletion(true) ? 0 : 1; }", "n_tokens": 84, "n_pass": [279, 22, 21]}
{"time": "2023-09-23 23:42:06.226058", "score": "0.5284", "loss": "0.7814", "code": "public int run(String[] args)throws Exception{(getConf); if (args2) { usage();} setInputPaths((args[0])); FileOutputFormat.setOutputPath(job, new Path());  return job.waitForCompletion(true) ? 0 : 1; }", "n_tokens": 82, "n_pass": [289, 23, 22]}
{"time": "2023-09-23 23:42:08.044976", "score": "0.5438", "loss": "0.7514", "code": "public int run(String[] args)throws Exception{(getConf); if (args2) { usage();} setInputPaths((args[0])); FileOutputFormat(job, new Path());  return job.waitForCompletion(true) ? 0 : 1; }", "n_tokens": 80, "n_pass": [296, 24, 23]}
{"time": "2023-09-23 23:42:09.739549", "score": "0.5223", "loss": "0.8401", "code": "public int run(String[] args)throws Exception{(getConf); if (args2) { usage();} setInputPaths((args[0])); FileOutputFormat(job, Path());  return job.waitForCompletion(true) ? 0 : 1; }", "n_tokens": 78, "n_pass": [299, 25, 24]}
{"time": "2023-09-23 23:42:11.773513", "score": "0.433", "loss": "1.0272", "code": "public int run(String[] args)throws Exception{(getConf); if (args2) { usage();} setInputPaths((args[0])); FileOutputFormat(job, Path());  return job(true) ? 0 : 1; }", "n_tokens": 76, "n_pass": [305, 26, 25]}
{"time": "2023-09-23 23:42:13.500580", "score": "0.433", "loss": "1.0272", "code": " int run(String[] args)throws Exception{(getConf); if (args2) { usage();} setInputPaths((args[0])); FileOutputFormat(job, Path());  return job(true) ? 0 : 1; }", "n_tokens": 75, "n_pass": [313, 27, 26]}
{"time": "2023-09-23 23:42:15.237063", "score": "0.433", "loss": "1.0272", "code": "int run(String[] args)throws Exception{(getConf); if (args2) { usage();} setInputPaths((args[0])); FileOutputFormat(job, Path());  return job(true) ? 0 : 1; }", "n_tokens": 74, "n_pass": [314, 28, 27]}
{"time": "2023-09-23 23:42:17.754245", "score": "0.433", "loss": "1.0272", "code": "int run(String[]args)throws Exception{(getConf); if (args2) { usage();} setInputPaths((args[0])); FileOutputFormat(job, Path());  return job(true) ? 0 : 1; }", "n_tokens": 73, "n_pass": [322, 29, 28]}
{"time": "2023-09-23 23:42:19.547925", "score": "0.4306", "loss": "1.0697", "code": "int run(String[]args)throws Exception{(getConf); if (args2) { usage();} setInputPaths((args[0])); FileOutputFormat(jobPath());  return job(true) ? 0 : 1; }", "n_tokens": 71, "n_pass": [346, 30, 29]}
{"time": "2023-09-23 23:42:21.700311", "score": "0.4218", "loss": "1.1184", "code": "int run(String[]args)throws Exception{(getConf); if (args2) { usage();} setInputPaths((args[0])); FileOutputFormat(jobPath());  return(true) ? 0 : 1; }", "n_tokens": 69, "n_pass": [351, 31, 30]}
{"time": "2023-09-23 23:42:24.312727", "score": "0.3721", "loss": "1.2759", "code": "int run(String[]args)throws Exception{(getConf); if (args2) { usage();} setInputPaths((args[0]));(jobPath());  return(true) ? 0 : 1; }", "n_tokens": 67, "n_pass": [387, 32, 31]}
{"time": "2023-09-23 23:42:32.679977", "score": "0.3721", "loss": "1.2759", "code": "int run(String[]args)throws Exception{(getConf); if (args2) { usage();} setInputPaths((args[0]));(jobPath()); return(true) ? 0 : 1; }", "n_tokens": 66, "n_pass": [486, 33, 32]}
{"time": "2023-09-23 23:42:34.348708", "score": "0.3721", "loss": "1.2759", "code": "int run(String[]args)throws Exception{(getConf); if (args2) { usage();} setInputPaths((args[0]));(jobPath());return(true) ? 0 : 1; }", "n_tokens": 65, "n_pass": [487, 34, 33]}
{"time": "2023-09-23 23:42:36.483765", "score": "0.3721", "loss": "1.2759", "code": "int run(String[]args)throws Exception{(getConf); if (args2) { usage();} setInputPaths((args[0]));(jobPath());return(true)? 0 : 1; }", "n_tokens": 64, "n_pass": [492, 35, 34]}
{"time": "2023-09-23 23:42:38.179816", "score": "0.3721", "loss": "1.2759", "code": "int run(String[]args)throws Exception{(getConf); if (args2) { usage();} setInputPaths((args[0]));(jobPath());return(true)?0 : 1; }", "n_tokens": 63, "n_pass": [494, 36, 35]}
{"time": "2023-09-23 23:42:39.927344", "score": "0.3721", "loss": "1.2759", "code": "int run(String[]args)throws Exception{(getConf); if (args2) { usage();} setInputPaths((args[0]));(jobPath());return(true)?0: 1; }", "n_tokens": 62, "n_pass": [496, 37, 36]}
{"time": "2023-09-23 23:42:41.720361", "score": "0.3721", "loss": "1.2759", "code": "int run(String[]args)throws Exception{(getConf); if (args2) { usage();} setInputPaths((args[0]));(jobPath());return(true)?0:1; }", "n_tokens": 61, "n_pass": [498, 38, 37]}
{"time": "2023-09-23 23:42:43.452102", "score": "0.3721", "loss": "1.2759", "code": "int run(String[]args)throws Exception{(getConf); if (args2) { usage();} setInputPaths((args[0]));(jobPath());return(true)?0:1;}", "n_tokens": 60, "n_pass": [501, 39, 38]}
{"time": "2023-09-23 23:42:45.880383", "score": "0.3721", "loss": "1.2759", "code": "int run(String[]args)throws Exception{(getConf);if (args2) { usage();} setInputPaths((args[0]));(jobPath());return(true)?0:1;}", "n_tokens": 59, "n_pass": [520, 40, 39]}
{"time": "2023-09-23 23:42:47.613306", "score": "0.3721", "loss": "1.2759", "code": "int run(String[]args)throws Exception{(getConf);if(args2) { usage();} setInputPaths((args[0]));(jobPath());return(true)?0:1;}", "n_tokens": 58, "n_pass": [522, 41, 40]}
{"time": "2023-09-23 23:42:49.306712", "score": "0.4032", "loss": "1.0639", "code": "int run(String[]args)throws Exception{(getConf);if(2) { usage();} setInputPaths((args[0]));(jobPath());return(true)?0:1;}", "n_tokens": 57, "n_pass": [524, 42, 41]}
{"time": "2023-09-23 23:42:51.067399", "score": "0.4032", "loss": "1.0639", "code": "int run(String[]args)throws Exception{(getConf);if(2){ usage();} setInputPaths((args[0]));(jobPath());return(true)?0:1;}", "n_tokens": 56, "n_pass": [527, 43, 42]}
{"time": "2023-09-23 23:42:52.872565", "score": "0.4032", "loss": "1.0639", "code": "int run(String[]args)throws Exception{(getConf);if(2){usage();} setInputPaths((args[0]));(jobPath());return(true)?0:1;}", "n_tokens": 55, "n_pass": [529, 44, 43]}
{"time": "2023-09-23 23:42:54.451634", "score": "0.4032", "loss": "1.0639", "code": "int run(String[]args)throws Exception{(getConf);if(2){usage();}setInputPaths((args[0]));(jobPath());return(true)?0:1;}", "n_tokens": 54, "n_pass": [535, 45, 44]}
{"time": "2023-09-23 23:42:56.167472", "score": "0.3687", "loss": "1.32", "code": "int run(String[]args)throws Exception{(getConf);if(2){usage();}((args[0]));(jobPath());return(true)?0:1;}", "n_tokens": 53, "n_pass": [536, 46, 45]}
{"time": "2023-09-23 23:42:57.916296", "score": "0.3121", "loss": "1.5216", "code": "int run(String[]args)throws Exception{(getConf);if(2){usage();}((args[0]));(Path());return(true)?0:1;}", "n_tokens": 52, "n_pass": [547, 47, 46]}

Minimal simplified code:
int run(String[]args)throws Exception{(getConf);if(2){usage();}((args[0]));(Path());return(true)?0:1;}

