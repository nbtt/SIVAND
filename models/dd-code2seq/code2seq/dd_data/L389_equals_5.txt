
path = /Users/lap13494/workspace/ppl-extra-final/java-small/test/hadoop-splitted/FileHandle_equals_0.java
method_name = equals
method_body = public boolean equals(Object o) { if (this == o) { return true; } if (!(o instanceof FileHandle)) { return false; } FileHandle h = (FileHandle) o; return Arrays.equals(handle, h.handle); }
predict, score, loss = equals, 0.9960141181945801, 0.004915100056678057

Trace of simplified code(s):
{"time": "2023-09-24 00:55:11.793775", "score": "0.996", "loss": "0.0049", "code": "public boolean equals(Object o) { if (this == o) { return true; } if (!(o instanceof FileHandle)) { return false; } FileHandle h = (FileHandle) o; return Arrays.equals(handle, h.handle); }", "n_tokens": 84, "n_pass": [1, 1, 1]}
{"time": "2023-09-24 00:55:14.014328", "score": "0.9957", "loss": "0.0054", "code": "public boolean equals(Object o) { if (this == o) { } if (!(o instanceof FileHandle)) { return false; } FileHandle h = (FileHandle) o; return Arrays.equals(handle, h.handle); }", "n_tokens": 79, "n_pass": [49, 2, 2]}
{"time": "2023-09-24 00:55:16.094236", "score": "0.9934", "loss": "0.0097", "code": "public boolean equals(Object o) { if (this == o) { } if (!(o instanceof FileHandle)) { return false; } FileHandle h = (FileHandle) oequals(handle, h.handle); }", "n_tokens": 73, "n_pass": [57, 3, 3]}
{"time": "2023-09-24 00:55:18.207566", "score": "0.9977", "loss": "0.0031", "code": "public boolean equals(Object o) { if (this == o) { } if (!(o instanceof FileHandle)) { return false; } FileHandle h =equals(handle, h.handle); }", "n_tokens": 67, "n_pass": [71, 4, 4]}
{"time": "2023-09-24 00:55:20.023331", "score": "0.9949", "loss": "0.0068", "code": "public boolean equals(Object o) { if (this == o) { } if (!(o instanceof FileHandle)) { return false; } equals(handle, h.handle); }", "n_tokens": 62, "n_pass": [84, 5, 5]}
{"time": "2023-09-24 00:55:21.875830", "score": "0.9958", "loss": "0.0054", "code": "public boolean equals(Object o) { if (this == o) { } if (!(o instanceof FileHandle)) { return false; } equals(handle.handle); }", "n_tokens": 59, "n_pass": [122, 6, 6]}
{"time": "2023-09-24 00:55:23.590872", "score": "0.9958", "loss": "0.0054", "code": "boolean equals(Object o) { if (this == o) { } if (!(o instanceof FileHandle)) { return false; } equals(handle.handle); }", "n_tokens": 57, "n_pass": [125, 7, 7]}
{"time": "2023-09-24 00:55:25.694414", "score": "0.9707", "loss": "0.0382", "code": "boolean equals(Object o) { if (this == o) { } if (!(o )) { return false; } equals(handle.handle); }", "n_tokens": 54, "n_pass": [140, 8, 8]}
{"time": "2023-09-24 00:55:31.244786", "score": "0.9721", "loss": "0.0379", "code": "boolean equals(Object o) { if (this == o) { } if ((o )) { return false; } equals(handle.handle); }", "n_tokens": 53, "n_pass": [205, 9, 9]}
{"time": "2023-09-24 00:55:32.866445", "score": "0.9432", "loss": "0.0878", "code": "boolean equals(Object o) { if (this == o) { } if ((o )) { false; } equals(handle.handle); }", "n_tokens": 51, "n_pass": [210, 10, 10]}
{"time": "2023-09-24 00:55:34.664463", "score": "0.9105", "loss": "0.1346", "code": "boolean equals(Object o) { if (this == o) { } if ((o )) {  } equals(handle.handle); }", "n_tokens": 49, "n_pass": [211, 11, 11]}
{"time": "2023-09-24 00:55:37.873058", "score": "0.7141", "loss": "0.587", "code": "boolean equals(Object o) { if (this == o) { } if ((o )) {  } equals(handle); }", "n_tokens": 47, "n_pass": [215, 13, 12]}
{"time": "2023-09-24 00:55:40.569772", "score": "0.7141", "loss": "0.587", "code": "boolean equals(Object o){ if (this == o) { } if ((o )) {  } equals(handle); }", "n_tokens": 46, "n_pass": [226, 14, 13]}
{"time": "2023-09-24 00:55:42.379194", "score": "0.7141", "loss": "0.587", "code": "boolean equals(Object o){if (this == o) { } if ((o )) {  } equals(handle); }", "n_tokens": 45, "n_pass": [228, 15, 14]}
{"time": "2023-09-24 00:55:44.162472", "score": "0.7141", "loss": "0.587", "code": "boolean equals(Object o){if(this == o) { } if ((o )) {  } equals(handle); }", "n_tokens": 44, "n_pass": [230, 16, 15]}
{"time": "2023-09-24 00:55:45.848702", "score": "0.7141", "loss": "0.587", "code": "boolean equals(Object o){if(this== o) { } if ((o )) {  } equals(handle); }", "n_tokens": 43, "n_pass": [233, 17, 16]}
{"time": "2023-09-24 00:55:48.231031", "score": "0.7141", "loss": "0.587", "code": "boolean equals(Object o){if(this==o) { } if ((o )) {  } equals(handle); }", "n_tokens": 42, "n_pass": [236, 18, 17]}
{"time": "2023-09-24 00:55:49.924249", "score": "0.7141", "loss": "0.587", "code": "boolean equals(Object o){if(this==o){ } if ((o )) {  } equals(handle); }", "n_tokens": 41, "n_pass": [239, 19, 18]}
{"time": "2023-09-24 00:55:51.651706", "score": "0.7141", "loss": "0.587", "code": "boolean equals(Object o){if(this==o){} if ((o )) {  } equals(handle); }", "n_tokens": 40, "n_pass": [241, 20, 19]}
{"time": "2023-09-24 00:55:53.318593", "score": "0.7141", "loss": "0.587", "code": "boolean equals(Object o){if(this==o){}if ((o )) {  } equals(handle); }", "n_tokens": 39, "n_pass": [243, 21, 20]}
{"time": "2023-09-24 00:55:55.062924", "score": "0.7141", "loss": "0.587", "code": "boolean equals(Object o){if(this==o){}if((o )) {  } equals(handle); }", "n_tokens": 38, "n_pass": [245, 22, 21]}
{"time": "2023-09-24 00:56:01.917342", "score": "0.7141", "loss": "0.587", "code": "boolean equals(Object o){if(this==o){}if((o )){  } equals(handle); }", "n_tokens": 37, "n_pass": [294, 24, 22]}
{"time": "2023-09-24 00:56:03.637484", "score": "0.7141", "loss": "0.587", "code": "boolean equals(Object o){if(this==o){}if((o )){ } equals(handle); }", "n_tokens": 36, "n_pass": [296, 25, 23]}
{"time": "2023-09-24 00:56:05.359048", "score": "0.7141", "loss": "0.587", "code": "boolean equals(Object o){if(this==o){}if((o )){} equals(handle); }", "n_tokens": 35, "n_pass": [297, 26, 24]}
{"time": "2023-09-24 00:56:07.054478", "score": "0.7141", "loss": "0.587", "code": "boolean equals(Object o){if(this==o){}if((o )){}equals(handle); }", "n_tokens": 34, "n_pass": [299, 27, 25]}
{"time": "2023-09-24 00:56:12.278366", "score": "0.7141", "loss": "0.587", "code": "boolean equals(Object o){if(this==o){}if((o )){}equals(handle);}", "n_tokens": 33, "n_pass": [305, 30, 26]}
{"time": "2023-09-24 00:56:15.323124", "score": "0.7141", "loss": "0.587", "code": "boolean equals(Object o){if(this==o){}if((o)){}equals(handle);}", "n_tokens": 32, "n_pass": [329, 31, 27]}

Minimal simplified code:
boolean equals(Object o){if(this==o){}if((o)){}equals(handle);}

