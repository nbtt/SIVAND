
path = /Users/lap13494/workspace/ppl-extra-final/java-small/test/hadoop-splitted/TestWebHdfsWithAuthenticationFilter_doFilter_0.java
method_name = doFilter
method_body = public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException { if (authorized) { chain.doFilter(request, response); } else { ((HttpServletResponse) response).sendError(HttpServletResponse.SC_FORBIDDEN); } }
predict, score, loss = doFilter, 0.91916424036026, 0.3076176643371582

Trace of simplified code(s):
{"time": "2023-09-24 01:19:35.289392", "score": "0.9192", "loss": "0.3076", "code": "public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException { if (authorized) { chain.doFilter(request, response); } else { ((HttpServletResponse) response).sendError(HttpServletResponse.SC_FORBIDDEN); } }", "n_tokens": 76, "n_pass": [1, 1, 1]}
{"time": "2023-09-24 01:19:37.046775", "score": "0.967", "loss": "0.1426", "code": "public void doFilter(ServletRequest requestchain) throws IOException, ServletException { if (authorized) { chain.doFilter(request, response); } else { ((HttpServletResponse) response).sendError(HttpServletResponse.SC_FORBIDDEN); } }", "n_tokens": 67, "n_pass": [21, 2, 2]}
{"time": "2023-09-24 01:19:38.960680", "score": "0.9846", "loss": "0.0967", "code": "public void doFilter(ServletRequest requestchain) throws IOException, ServletException { if (authorized) { chain.doFilter(request, response); } else { ((HttpServletResponse) response.SC_FORBIDDEN); } }", "n_tokens": 62, "n_pass": [52, 3, 3]}
{"time": "2023-09-24 01:19:41.281416", "score": "0.987", "loss": "0.0943", "code": "public void doFilter(ServletRequest requestchain) throws IOException, ServletException { if (authorized) { chain.doFilter(request, response); } else { ((HttpServletResponse)SC_FORBIDDEN); } }", "n_tokens": 59, "n_pass": [91, 4, 4]}
{"time": "2023-09-24 01:19:43.056663", "score": "0.9888", "loss": "0.0793", "code": "public void doFilter(ServletRequest requestchain) throws IOException, ServletException { if (authorized) { chain.doFilter(request, response); } else { ((HttpServletResponse)); } }", "n_tokens": 56, "n_pass": [92, 5, 5]}
{"time": "2023-09-24 01:19:44.821334", "score": "0.9888", "loss": "0.0793", "code": "void doFilter(ServletRequest requestchain) throws IOException, ServletException { if (authorized) { chain.doFilter(request, response); } else { ((HttpServletResponse)); } }", "n_tokens": 54, "n_pass": [95, 6, 6]}
{"time": "2023-09-24 01:19:46.866137", "score": "0.9837", "loss": "0.0849", "code": "void doFilter(ServletRequest requestchain) throws  ServletException { if (authorized) { chain.doFilter(request, response); } else { ((HttpServletResponse)); } }", "n_tokens": 52, "n_pass": [102, 7, 7]}
{"time": "2023-09-24 01:19:50.284893", "score": "0.9855", "loss": "0.0834", "code": "void doFilter(ServletRequest requestchain) throws  ServletException { if (authorized) { chain.doFilter(request, response); }{ ((HttpServletResponse)); } }", "n_tokens": 49, "n_pass": [114, 9, 8]}
{"time": "2023-09-24 01:19:59.146567", "score": "0.9891", "loss": "0.0721", "code": "void doFilter(ServletRequest chain) throws  ServletException { if (authorized) { chain.doFilter(request, response); }{ ((HttpServletResponse)); } }", "n_tokens": 48, "n_pass": [192, 11, 9]}
{"time": "2023-09-24 01:20:00.772176", "score": "0.9891", "loss": "0.0721", "code": "void doFilter(ServletRequest chain)throws  ServletException { if (authorized) { chain.doFilter(request, response); }{ ((HttpServletResponse)); } }", "n_tokens": 47, "n_pass": [194, 12, 10]}
{"time": "2023-09-24 01:20:02.504341", "score": "0.9891", "loss": "0.0721", "code": "void doFilter(ServletRequest chain)throws ServletException { if (authorized) { chain.doFilter(request, response); }{ ((HttpServletResponse)); } }", "n_tokens": 46, "n_pass": [196, 13, 11]}
{"time": "2023-09-24 01:20:04.259692", "score": "0.9891", "loss": "0.0721", "code": "void doFilter(ServletRequest chain)throws ServletException{ if (authorized) { chain.doFilter(request, response); }{ ((HttpServletResponse)); } }", "n_tokens": 45, "n_pass": [199, 14, 12]}
{"time": "2023-09-24 01:20:06.010926", "score": "0.9891", "loss": "0.0721", "code": "void doFilter(ServletRequest chain)throws ServletException{if (authorized) { chain.doFilter(request, response); }{ ((HttpServletResponse)); } }", "n_tokens": 44, "n_pass": [201, 15, 13]}
{"time": "2023-09-24 01:20:07.741417", "score": "0.9891", "loss": "0.0721", "code": "void doFilter(ServletRequest chain)throws ServletException{if(authorized) { chain.doFilter(request, response); }{ ((HttpServletResponse)); } }", "n_tokens": 43, "n_pass": [203, 16, 14]}
{"time": "2023-09-24 01:20:09.389345", "score": "0.9891", "loss": "0.0721", "code": "void doFilter(ServletRequest chain)throws ServletException{if(authorized){ chain.doFilter(request, response); }{ ((HttpServletResponse)); } }", "n_tokens": 42, "n_pass": [207, 17, 15]}
{"time": "2023-09-24 01:20:11.099178", "score": "0.9891", "loss": "0.0721", "code": "void doFilter(ServletRequest chain)throws ServletException{if(authorized){chain.doFilter(request, response); }{ ((HttpServletResponse)); } }", "n_tokens": 41, "n_pass": [209, 18, 16]}
{"time": "2023-09-24 01:20:12.699098", "score": "0.371", "loss": "2.7115", "code": "void doFilter(ServletRequest chain)throws ServletException{if(authorized){chaindoFilter(request, response); }{ ((HttpServletResponse)); } }", "n_tokens": 40, "n_pass": [211, 19, 17]}
{"time": "2023-09-24 01:20:16.060159", "score": "0.371", "loss": "2.7115", "code": "void doFilter(ServletRequest chain)throws ServletException{if(authorized){chaindoFilter(request,response); }{ ((HttpServletResponse)); } }", "n_tokens": 39, "n_pass": [216, 21, 18]}
{"time": "2023-09-24 01:20:18.667759", "score": "0.9875", "loss": "0.0908", "code": "void doFilter(ServletRequest chain)throws ServletException{if(authorized){doFilter(request,response); }{ ((HttpServletResponse)); } }", "n_tokens": 38, "n_pass": [244, 22, 19]}
{"time": "2023-09-24 01:20:20.415077", "score": "0.9788", "loss": "0.1808", "code": "void doFilter(ServletRequest chain)throws ServletException{if(authorized){doFilter(requestresponse); }{ ((HttpServletResponse)); } }", "n_tokens": 37, "n_pass": [248, 23, 20]}
{"time": "2023-09-24 01:20:22.087116", "score": "0.9796", "loss": "0.1567", "code": "void doFilter(ServletRequest chain)throws ServletException{if(authorized){doFilter(request); }{ ((HttpServletResponse)); } }", "n_tokens": 36, "n_pass": [249, 24, 21]}
{"time": "2023-09-24 01:20:26.172792", "score": "0.964", "loss": "0.2287", "code": "void doFilter(ServletRequest chain)throws ServletException{if(authorized){doFilter(); }{ ((HttpServletResponse)); } }", "n_tokens": 35, "n_pass": [278, 26, 22]}
{"time": "2023-09-24 01:20:30.143466", "score": "0.964", "loss": "0.2287", "code": "void doFilter(ServletRequest chain)throws ServletException{if(authorized){doFilter(); }{((HttpServletResponse)); } }", "n_tokens": 34, "n_pass": [322, 27, 23]}
{"time": "2023-09-24 01:20:31.738813", "score": "0.964", "loss": "0.2287", "code": "void doFilter(ServletRequest chain)throws ServletException{if(authorized){doFilter(); }{((HttpServletResponse));} }", "n_tokens": 33, "n_pass": [329, 28, 24]}
{"time": "2023-09-24 01:20:33.424905", "score": "0.964", "loss": "0.2287", "code": "void doFilter(ServletRequest chain)throws ServletException{if(authorized){doFilter(); }{((HttpServletResponse));}}", "n_tokens": 32, "n_pass": [331, 29, 25]}
{"time": "2023-09-24 01:20:35.789893", "score": "0.964", "loss": "0.2287", "code": "void doFilter(ServletRequest chain)throws ServletException{if(authorized){doFilter();}{((HttpServletResponse));}}", "n_tokens": 31, "n_pass": [354, 30, 26]}

Minimal simplified code:
void doFilter(ServletRequest chain)throws ServletException{if(authorized){doFilter();}{((HttpServletResponse));}}

