
path = /Users/lap13494/workspace/ppl-extra-final/java-small/test/hadoop-splitted/Queue_copySchedulingInfo_0.java
method_name = copySchedulingInfo
method_body = void copySchedulingInfo(Queue sourceQueue) { Set<Queue> destChildren = getChildren(); if (destChildren != null) { Iterator<Queue> itr1 = destChildren.iterator(); Iterator<Queue> itr2 = sourceQueue.getChildren().iterator(); while (itr1.hasNext()) { itr1.next().copySchedulingInfo(itr2.next()); } } setSchedulingInfo(sourceQueue.getSchedulingInfo()); }
predict, score, loss = copySchedulingInfo, 0.849331796169281, 0.6958795785903931

Trace of simplified code(s):
{"time": "2023-09-24 00:16:09.027664", "score": "0.8493", "loss": "0.6959", "code": "void copySchedulingInfo(Queue sourceQueue) { Set<Queue> destChildren = getChildren(); if (destChildren != null) { Iterator<Queue> itr1 = destChildren.iterator(); Iterator<Queue> itr2 = sourceQueue.getChildren().iterator(); while (itr1.hasNext()) { itr1.next().copySchedulingInfo(itr2.next()); } } setSchedulingInfo(sourceQueue.getSchedulingInfo()); }", "n_tokens": 122, "n_pass": [1, 1, 1]}
{"time": "2023-09-24 00:16:10.918490", "score": "0.8165", "loss": "0.8765", "code": "void copySchedulingInfo(Queue sourceQueue) { Set<Queue> destChildren = getChildren(); if (destChildren != null) { Iterator<Queue> itr1itr2 = sourceQueue.getChildren().iterator(); while (itr1.hasNext()) { itr1.next().copySchedulingInfo(itr2.next()); } } setSchedulingInfo(sourceQueue.getSchedulingInfo()); }", "n_tokens": 107, "n_pass": [23, 2, 2]}
{"time": "2023-09-24 00:16:12.855995", "score": "0.7983", "loss": "1.0161", "code": "void copySchedulingInfo(Queue sourceQueue) { Set<Queue> destChildren = getChildren(); if (destChildren != null) { Iterator<Queue> itr1itr2 = sourceQueue; while (itr1.hasNext()) { itr1.next().copySchedulingInfo(itr2.next()); } } setSchedulingInfo(sourceQueue.getSchedulingInfo()); }", "n_tokens": 99, "n_pass": [45, 3, 3]}
{"time": "2023-09-24 00:16:16.808002", "score": "0.7826", "loss": "1.0732", "code": "void copySchedulingInfo(Queue sourceQueue) { Set<Queue> destChildren = getChildren(); if (destChildren != null) { Iterator<Queue> itr1itr2 = sourceQueue; while (itr1.hasNext()) { itr1.next().copySchedulingInfo(itr2.next()); } } setSchedulingInfo(sourceQueue); }", "n_tokens": 95, "n_pass": [95, 5, 4]}
{"time": "2023-09-24 00:16:18.566993", "score": "0.7908", "loss": "1.0189", "code": "void copySchedulingInfo(Queue sourceQueue) { Set destChildren = getChildren(); if (destChildren != null) { Iterator<Queue> itr1itr2 = sourceQueue; while (itr1.hasNext()) { itr1.next().copySchedulingInfo(itr2.next()); } } setSchedulingInfo(sourceQueue); }", "n_tokens": 92, "n_pass": [100, 6, 5]}
{"time": "2023-09-24 00:16:20.261905", "score": "0.7373", "loss": "1.4137", "code": "void copySchedulingInfo(Queue sourceQueue) { Set destChildren = getChildren(); if (destChildren != null) { Iteratoritr1itr2 = sourceQueue; while (itr1.hasNext()) { itr1.next().copySchedulingInfo(itr2.next()); } } setSchedulingInfo(sourceQueue); }", "n_tokens": 88, "n_pass": [107, 7, 6]}
{"time": "2023-09-24 00:16:21.941457", "score": "0.7497", "loss": "1.3392", "code": "void copySchedulingInfo(Queue sourceQueue) { Set destChildren = getChildren(); if (destChildren != null) { Iterator = sourceQueue; while (itr1.hasNext()) { itr1.next().copySchedulingInfo(itr2.next()); } } setSchedulingInfo(sourceQueue); }", "n_tokens": 84, "n_pass": [108, 8, 7]}
{"time": "2023-09-24 00:16:23.661352", "score": "0.7805", "loss": "1.0658", "code": "void copySchedulingInfo(Queue sourceQueue) { Set destChildren = getChildren(); if (destChildren != null) { Iterator; while (itr1.hasNext()) { itr1.next().copySchedulingInfo(itr2.next()); } } setSchedulingInfo(sourceQueue); }", "n_tokens": 80, "n_pass": [109, 9, 8]}
{"time": "2023-09-24 00:16:28.237620", "score": "0.7124", "loss": "1.6574", "code": "void copySchedulingInfo(Queue sourceQueue) { Set destChildren = getChildren(); if (destChildren != null) { Iterator; while (itrhasNext()) { itr1.next().copySchedulingInfo(itr2.next()); } } setSchedulingInfo(sourceQueue); }", "n_tokens": 78, "n_pass": [176, 11, 9]}
{"time": "2023-09-24 00:16:29.940028", "score": "0.7016", "loss": "1.7152", "code": "void copySchedulingInfo(Queue sourceQueue) { Set destChildren = getChildren(); if (destChildren != null) { Iterator; while (itrhasNext()) { itrnext().copySchedulingInfo(itr2.next()); } } setSchedulingInfo(sourceQueue); }", "n_tokens": 76, "n_pass": [181, 12, 10]}
{"time": "2023-09-24 00:16:31.765455", "score": "0.6953", "loss": "1.7028", "code": "void copySchedulingInfo(Queue sourceQueue) { Set destChildren = getChildren(); if (destChildren != null) { Iterator; while (itrhasNext()) { itrnext().copySchedulingInfo(itr2()); } } setSchedulingInfo(sourceQueue); }", "n_tokens": 74, "n_pass": [186, 13, 11]}
{"time": "2023-09-24 00:16:33.495713", "score": "0.6964", "loss": "1.6703", "code": "void copySchedulingInfo(Queue sourceQueue) { Set destChildren = getChildren(); if (destChildren != null) { Iterator; while (itrhasNext()) { itrnext().copySchedulingInfo(itr2); } } setSchedulingInfo(sourceQueue); }", "n_tokens": 72, "n_pass": [187, 14, 12]}
{"time": "2023-09-24 00:16:41.530620", "score": "0.703", "loss": "1.6606", "code": "void copySchedulingInfo(Queue sourceQueue) { Set destChildren = getChildren; if (destChildren != null) { Iterator; while (itrhasNext()) { itrnext().copySchedulingInfo(itr2); } } setSchedulingInfo(sourceQueue); }", "n_tokens": 70, "n_pass": [206, 18, 13]}
{"time": "2023-09-24 00:16:43.266077", "score": "0.6264", "loss": "2.5418", "code": "void copySchedulingInfo(Queue sourceQueue) { Set destChildren = getChildren; if (destChildren= null) { Iterator; while (itrhasNext()) { itrnext().copySchedulingInfo(itr2); } } setSchedulingInfo(sourceQueue); }", "n_tokens": 68, "n_pass": [210, 19, 14]}
{"time": "2023-09-24 00:16:46.780666", "score": "0.6489", "loss": "2.4173", "code": "void copySchedulingInfo(Queue sourceQueue) { Set destChildren = getChildren; if (destChildren= null) {; while (itrhasNext()) { itrnext().copySchedulingInfo(itr2); } } setSchedulingInfo(sourceQueue); }", "n_tokens": 66, "n_pass": [214, 21, 15]}
{"time": "2023-09-24 00:16:48.505726", "score": "0.6489", "loss": "2.4173", "code": "void copySchedulingInfo(Queue sourceQueue) { Set destChildren = getChildren; if (destChildren= null) {while (itrhasNext()) { itrnext().copySchedulingInfo(itr2); } } setSchedulingInfo(sourceQueue); }", "n_tokens": 64, "n_pass": [215, 22, 16]}
{"time": "2023-09-24 00:16:50.289903", "score": "0.642", "loss": "2.4728", "code": "void copySchedulingInfo(Queue sourceQueue) { Set destChildren = getChildren; if (destChildren= null) {while (itrhasNext()) {next().copySchedulingInfo(itr2); } } setSchedulingInfo(sourceQueue); }", "n_tokens": 62, "n_pass": [221, 23, 17]}
{"time": "2023-09-24 00:17:07.527371", "score": "0.6034", "loss": "2.9362", "code": "void copySchedulingInfo(Queue sourceQueue) { Set destChildren = getChildren; if (destChildren= null) {while (itrhasNext()) {next().copySchedulingInfo(2); } } setSchedulingInfo(sourceQueue); }", "n_tokens": 61, "n_pass": [318, 29, 18]}
{"time": "2023-09-24 00:17:09.263349", "score": "0.6034", "loss": "2.9362", "code": "void copySchedulingInfo(Queue sourceQueue) { Set destChildren = getChildren; if (destChildren= null) {while (itrhasNext()) {next().copySchedulingInfo(2);} } setSchedulingInfo(sourceQueue); }", "n_tokens": 60, "n_pass": [321, 30, 19]}
{"time": "2023-09-24 00:17:11.004213", "score": "0.6034", "loss": "2.9362", "code": "void copySchedulingInfo(Queue sourceQueue) { Set destChildren = getChildren; if (destChildren= null) {while (itrhasNext()) {next().copySchedulingInfo(2);}} setSchedulingInfo(sourceQueue); }", "n_tokens": 59, "n_pass": [323, 31, 20]}
{"time": "2023-09-24 00:17:12.692194", "score": "0.6034", "loss": "2.9362", "code": "void copySchedulingInfo(Queue sourceQueue) { Set destChildren = getChildren; if (destChildren= null) {while (itrhasNext()) {next().copySchedulingInfo(2);}}setSchedulingInfo(sourceQueue); }", "n_tokens": 58, "n_pass": [325, 32, 21]}
{"time": "2023-09-24 00:17:17.889677", "score": "0.6034", "loss": "2.9362", "code": "void copySchedulingInfo(Queue sourceQueue) { Set destChildren = getChildren; if (destChildren= null) {while (itrhasNext()) {next().copySchedulingInfo(2);}}setSchedulingInfo(sourceQueue);}", "n_tokens": 57, "n_pass": [331, 35, 22]}
{"time": "2023-09-24 00:17:20.390306", "score": "0.6034", "loss": "2.9362", "code": "void copySchedulingInfo(Queue sourceQueue){ Set destChildren = getChildren; if (destChildren= null) {while (itrhasNext()) {next().copySchedulingInfo(2);}}setSchedulingInfo(sourceQueue);}", "n_tokens": 56, "n_pass": [341, 36, 23]}
{"time": "2023-09-24 00:17:22.056168", "score": "0.6034", "loss": "2.9362", "code": "void copySchedulingInfo(Queue sourceQueue){Set destChildren = getChildren; if (destChildren= null) {while (itrhasNext()) {next().copySchedulingInfo(2);}}setSchedulingInfo(sourceQueue);}", "n_tokens": 55, "n_pass": [343, 37, 24]}
{"time": "2023-09-24 00:17:28.993477", "score": "0.6034", "loss": "2.9362", "code": "void copySchedulingInfo(Queue sourceQueue){Set destChildren= getChildren; if (destChildren= null) {while (itrhasNext()) {next().copySchedulingInfo(2);}}setSchedulingInfo(sourceQueue);}", "n_tokens": 54, "n_pass": [347, 41, 25]}
{"time": "2023-09-24 00:17:30.743444", "score": "0.6034", "loss": "2.9362", "code": "void copySchedulingInfo(Queue sourceQueue){Set destChildren=getChildren; if (destChildren= null) {while (itrhasNext()) {next().copySchedulingInfo(2);}}setSchedulingInfo(sourceQueue);}", "n_tokens": 53, "n_pass": [349, 42, 26]}
{"time": "2023-09-24 00:17:32.520532", "score": "0.6034", "loss": "2.9362", "code": "void copySchedulingInfo(Queue sourceQueue){Set destChildren=getChildren;if (destChildren= null) {while (itrhasNext()) {next().copySchedulingInfo(2);}}setSchedulingInfo(sourceQueue);}", "n_tokens": 52, "n_pass": [352, 43, 27]}
{"time": "2023-09-24 00:17:34.259945", "score": "0.6034", "loss": "2.9362", "code": "void copySchedulingInfo(Queue sourceQueue){Set destChildren=getChildren;if(destChildren= null) {while (itrhasNext()) {next().copySchedulingInfo(2);}}setSchedulingInfo(sourceQueue);}", "n_tokens": 51, "n_pass": [354, 44, 28]}
{"time": "2023-09-24 00:17:36.211288", "score": "0.6034", "loss": "2.9362", "code": "void copySchedulingInfo(Queue sourceQueue){Set destChildren=getChildren;if(destChildren=null) {while (itrhasNext()) {next().copySchedulingInfo(2);}}setSchedulingInfo(sourceQueue);}", "n_tokens": 50, "n_pass": [358, 45, 29]}
{"time": "2023-09-24 00:17:37.991435", "score": "0.6034", "loss": "2.9362", "code": "void copySchedulingInfo(Queue sourceQueue){Set destChildren=getChildren;if(destChildren=null){while (itrhasNext()) {next().copySchedulingInfo(2);}}setSchedulingInfo(sourceQueue);}", "n_tokens": 49, "n_pass": [361, 46, 30]}
{"time": "2023-09-24 00:17:39.752829", "score": "0.6034", "loss": "2.9362", "code": "void copySchedulingInfo(Queue sourceQueue){Set destChildren=getChildren;if(destChildren=null){while(itrhasNext()) {next().copySchedulingInfo(2);}}setSchedulingInfo(sourceQueue);}", "n_tokens": 48, "n_pass": [364, 47, 31]}
{"time": "2023-09-24 00:17:41.475568", "score": "0.5976", "loss": "2.8317", "code": "void copySchedulingInfo(Queue sourceQueue){Set destChildren=getChildren;if(destChildren=null){while(hasNext()) {next().copySchedulingInfo(2);}}setSchedulingInfo(sourceQueue);}", "n_tokens": 47, "n_pass": [366, 48, 32]}
{"time": "2023-09-24 00:17:43.221842", "score": "0.5976", "loss": "2.8317", "code": "void copySchedulingInfo(Queue sourceQueue){Set destChildren=getChildren;if(destChildren=null){while(hasNext()){next().copySchedulingInfo(2);}}setSchedulingInfo(sourceQueue);}", "n_tokens": 46, "n_pass": [371, 49, 33]}
{"time": "2023-09-24 00:17:56.105499", "score": "0.5673", "loss": "3.2395", "code": "void copySchedulingInfo(Queue sourceQueue){Set destChildrengetChildren;if(destChildren=null){while(hasNext()){next().copySchedulingInfo(2);}}setSchedulingInfo(sourceQueue);}", "n_tokens": 45, "n_pass": [402, 56, 34]}
{"time": "2023-09-24 00:17:57.884056", "score": "0.5925", "loss": "3.034", "code": "void copySchedulingInfo(Queue sourceQueue){Set destChildren;if(destChildren=null){while(hasNext()){next().copySchedulingInfo(2);}}setSchedulingInfo(sourceQueue);}", "n_tokens": 44, "n_pass": [403, 57, 35]}
{"time": "2023-09-24 00:17:59.625851", "score": "0.4884", "loss": "4.2199", "code": "void copySchedulingInfo(Queue sourceQueue){Set destChildren;if(destChildrennull){while(hasNext()){next().copySchedulingInfo(2);}}setSchedulingInfo(sourceQueue);}", "n_tokens": 43, "n_pass": [408, 58, 36]}
{"time": "2023-09-24 00:18:01.417232", "score": "0.5502", "loss": "3.3973", "code": "void copySchedulingInfo(Queue sourceQueue){Set destChildren;if(destChildren){while(hasNext()){next().copySchedulingInfo(2);}}setSchedulingInfo(sourceQueue);}", "n_tokens": 42, "n_pass": [409, 59, 37]}

Minimal simplified code:
void copySchedulingInfo(Queue sourceQueue){Set destChildren;if(destChildren){while(hasNext()){next().copySchedulingInfo(2);}}setSchedulingInfo(sourceQueue);}

