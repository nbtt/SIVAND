
path = /Users/lap13494/workspace/ppl-extra-final/java-small/test/hadoop-splitted/DistCpV1_run_0.java
method_name = run
method_body = public int run(String[] args) { try { copy(conf, Arguments.valueOf(args, conf)); return 0; } catch (IllegalArgumentException e) { System.err.println(StringUtils.stringifyException(e) + "\n" + usage); ToolRunner.printGenericCommandUsage(System.err); return -1; } catch (DuplicationException e) { System.err.println(StringUtils.stringifyException(e)); return DuplicationException.ERROR_CODE; } catch (RemoteException e) { final IOException unwrapped = e.unwrapRemoteException(FileNotFoundException.class, AccessControlException.class, QuotaExceededException.class); System.err.println(StringUtils.stringifyException(unwrapped)); return -3; } catch (Exception e) { System.err.println("With failures, global counters are inaccurate; " + "consider running with -i"); System.err.println("Copy failed: " + StringUtils.stringifyException(e)); return -999; } }
predict, score, loss = run, 0.32449519634246826, 1.9137071371078491

Trace of simplified code(s):
{"time": "2023-09-24 01:13:44.819908", "score": "0.466", "loss": "1.1834", "code": "public int run(String[] args) { try { copy(conf, Arguments.valueOf(args, conf)); return 0; } catch (IllegalArgumentException e) { System.err.println(StringUtils.stringifyException(e) + \"\\n\" + usage); ToolRunner.printGenericCommandUsage(System.err); return -1; } catch (DuplicationException e) { System.err.println(StringUtils.stringifyException(e)); return DuplicationException.ERROR_CODE; } catch (RemoteException e) { final IOException unwrapped = e.unwrapRemoteException(FileNotFoundException.class, AccessControlException.class, QuotaExceededException.class); System.err.println(StringUtils.stringifyException(unwrapped)); return -3; } catch (Exception e) { System.err.println(\"With failures, global counters are inaccurate; \" + \"consider running with -i\"); System.err.println(\"Copy failed: \" + StringUtils.stringifyException(e)); return -999; } }", "n_tokens": 278, "n_pass": [1, 1, 1]}
{"time": "2023-09-24 01:13:46.746164", "score": "0.4605", "loss": "1.366", "code": "public int run(String[] args) { try { copy(conf, Arguments.valueOf(args, conf)); return 0; } catch (IllegalArgumentException e) { System.err.println(StringUtils.stringifyException(e) + \"\\n\" + usage); ToolRunner.printGenericCommandUsage(System.err); return -1; } catch (DuplicationException ee) { final IOException unwrapped = e.unwrapRemoteException(FileNotFoundException.class, AccessControlException.class, QuotaExceededException.class); System.err.println(StringUtils.stringifyException(unwrapped)); return -3; } catch (Exception e) { System.err.println(\"With failures, global counters are inaccurate; \" + \"consider running with -i\"); System.err.println(\"Copy failed: \" + StringUtils.stringifyException(e)); return -999; } }", "n_tokens": 243, "n_pass": [23, 2, 2]}
{"time": "2023-09-24 01:13:48.548223", "score": "0.5692", "loss": "0.9868", "code": "public int run(String[] args) { try { copy(conf, Arguments.valueOf(args, conf)); return 0; } catch (IllegalArgumentException e) { System.err.println(StringUtils.stringifyException(e) + \"\\n\" + usage); ToolRunner.printGenericCommandUsage(System.err); return -1; } catch (DuplicationException ee) { final IOException unwrapped = e.unwrapRemoteException(FileNotFoundException.class, AccessControlException.class, QuotaExceededException.class); System.println(\"With failures, global counters are inaccurate; \" + \"consider running with -i\"); System.err.println(\"Copy failed: \" + StringUtils.stringifyException(e)); return -999; } }", "n_tokens": 208, "n_pass": [25, 3, 3]}
{"time": "2023-09-24 01:13:50.519650", "score": "0.4101", "loss": "1.3732", "code": "public int run(String[] args) { try { copy(conf, Arguments.valueOf(args, conf)); return 0; } catch (IllegalArgumentException e) { System.err.println(StringUtils.stringifyException(e) + err); return -1; } catch (DuplicationException ee) { final IOException unwrapped = e.unwrapRemoteException(FileNotFoundException.class, AccessControlException.class, QuotaExceededException.class); System.println(\"With failures, global counters are inaccurate; \" + \"consider running with -i\"); System.err.println(\"Copy failed: \" + StringUtils.stringifyException(e)); return -999; } }", "n_tokens": 191, "n_pass": [52, 4, 4]}
{"time": "2023-09-24 01:13:52.239626", "score": "0.3762", "loss": "1.3979", "code": "public int run(String[] args) { try { copy(conf, Arguments.valueOf(args, conf)); return 0; } catch (IllegalArgumentException e) { System.err.println(StringUtils.stringifyException(e) + err); return -1; } catch (DuplicationException ee) { final IOException unwrapped = e.unwrapRemoteExceptionSystem.println(\"With failures, global counters are inaccurate; \" + \"consider running with -i\"); System.err.println(\"Copy failed: \" + StringUtils.stringifyException(e)); return -999; } }", "n_tokens": 174, "n_pass": [55, 5, 5]}
{"time": "2023-09-24 01:13:54.151310", "score": "0.4546", "loss": "1.4099", "code": "public int run(String[] args) { try { copy(conf, Arguments.valueOf(args, conf)); return 0; } catch (IllegalArgumentException e) { System.err.println(StringUtils.stringifyException(e) + err); return -1; } catch (DuplicationException ee) { final IOException unwrapped = e.unwrapRemoteExceptionSystem.println(\"With failures, \" + \"consider running with -i\"); System.err.println(\"Copy failed: \" + StringUtils.stringifyException(e)); return -999; } }", "n_tokens": 165, "n_pass": [87, 6, 6]}
{"time": "2023-09-24 01:13:55.948140", "score": "0.4189", "loss": "1.6015", "code": "public int run(String[] args) { try { copy(conf, Arguments.valueOf(args, conf)); return 0; } catch (IllegalArgumentException e) { System.err.println(StringUtils.stringifyException(e) + err); return -1; } catch (DuplicationException ee) { final IOException unwrapped = e.unwrapRemoteExceptionSystem.println(\"With failures, with -i\"); System.err.println(\"Copy failed: \" + StringUtils.stringifyException(e)); return -999; } }", "n_tokens": 156, "n_pass": [88, 7, 7]}
{"time": "2023-09-24 01:13:57.918629", "score": "0.4617", "loss": "1.3611", "code": "public int run(String[] args) { try { copy(conf, Arguments.valueOf(args, conf)); return 0; } catch (IllegalArgumentException e) { System.err.println(StringUtils.stringifyException(e) + err); return -1; } catch (DuplicationException ee) { final IOException unwrapped = e.unwrapRemoteExceptionSystem.println(\"With failures,\"); System.err.println(\"Copy failed: \" + StringUtils.stringifyException(e)); return -999; } }", "n_tokens": 151, "n_pass": [144, 8, 8]}
{"time": "2023-09-24 01:13:59.681672", "score": "0.3556", "loss": "1.5134", "code": "public int run(String[] args) { try { copy(conf, Arguments.valueOf(args, conf)); return 0; } catch (IllegalArgumentException e) { System.err.println(StringUtils.stringifyException(e) + err); return -1; } catch (DuplicationException ee) { final IOException unwrapped = e.unwrapRemoteExceptionSystem.println(\"With failures,\"); System.err.println(\"Copy failed: \" + StringUtils.stringifyException(e)); return; } }", "n_tokens": 146, "n_pass": [151, 9, 9]}
{"time": "2023-09-24 01:14:01.843216", "score": "0.3053", "loss": "1.8518", "code": "public int run(String[] args) { try { copy(conf, Arguments.valueOf()); return 0; } catch (IllegalArgumentException e) { System.err.println(StringUtils.stringifyException(e) + err); return -1; } catch (DuplicationException ee) { final IOException unwrapped = e.unwrapRemoteExceptionSystem.println(\"With failures,\"); System.err.println(\"Copy failed: \" + StringUtils.stringifyException(e)); return; } }", "n_tokens": 142, "n_pass": [160, 10, 10]}
{"time": "2023-09-24 01:14:03.669239", "score": "0.3127", "loss": "1.8429", "code": "public int run(String[] args) { try { copy(conf, Arguments.valueOf());  } catch (IllegalArgumentException e) { System.err.println(StringUtils.stringifyException(e) + err); return -1; } catch (DuplicationException ee) { final IOException unwrapped = e.unwrapRemoteExceptionSystem.println(\"With failures,\"); System.err.println(\"Copy failed: \" + StringUtils.stringifyException(e)); return; } }", "n_tokens": 138, "n_pass": [162, 11, 11]}
{"time": "2023-09-24 01:14:09.271383", "score": "0.3133", "loss": "1.7877", "code": "public int run(String[] args) { try { copy(conf, Arguments.valueOf());  } catch (IllegalArgumentException e) { System.println(StringUtils.stringifyException(e) + err); return -1; } catch (DuplicationException ee) { final IOException unwrapped = e.unwrapRemoteExceptionSystem.println(\"With failures,\"); System.err.println(\"Copy failed: \" + StringUtils.stringifyException(e)); return; } }", "n_tokens": 136, "n_pass": [266, 13, 12]}
{"time": "2023-09-24 01:14:11.043727", "score": "0.3152", "loss": "1.7554", "code": "public int run(String[] args) { try { copy(conf, Arguments.valueOf());  } catch (IllegalArgumentException e) { System(StringUtils.stringifyException(e) + err); return -1; } catch (DuplicationException ee) { final IOException unwrapped = e.unwrapRemoteExceptionSystem.println(\"With failures,\"); System.err.println(\"Copy failed: \" + StringUtils.stringifyException(e)); return; } }", "n_tokens": 134, "n_pass": [267, 14, 13]}
{"time": "2023-09-24 01:14:12.739658", "score": "0.3271", "loss": "1.6663", "code": "public int run(String[] args) { try { copy(conf, Arguments.valueOf());  } catch (IllegalArgumentException e) { System(StringUtils(e) + err); return -1; } catch (DuplicationException ee) { final IOException unwrapped = e.unwrapRemoteExceptionSystem.println(\"With failures,\"); System.err.println(\"Copy failed: \" + StringUtils.stringifyException(e)); return; } }", "n_tokens": 132, "n_pass": [269, 15, 14]}
{"time": "2023-09-24 01:14:16.708109", "score": "0.3271", "loss": "1.6663", "code": "public int run(String[] args) { try { copy(conf, Arguments.valueOf());  } catch (IllegalArgumentException e) { System(StringUtils(e) + err); return -1; } catch (DuplicationException ee) { IOException unwrapped = e.unwrapRemoteExceptionSystem.println(\"With failures,\"); System.err.println(\"Copy failed: \" + StringUtils.stringifyException(e)); return; } }", "n_tokens": 130, "n_pass": [284, 17, 15]}
{"time": "2023-09-24 01:14:18.454320", "score": "0.2843", "loss": "1.8216", "code": "public int run(String[] args) { try { copy(conf, Arguments.valueOf());  } catch (IllegalArgumentException e) { System(StringUtils(e) + err); return -1; } catch (DuplicationException ee) { unwrapped = e.unwrapRemoteExceptionSystem.println(\"With failures,\"); System.err.println(\"Copy failed: \" + StringUtils.stringifyException(e)); return; } }", "n_tokens": 128, "n_pass": [285, 18, 16]}
{"time": "2023-09-24 01:14:20.153840", "score": "0.3079", "loss": "1.7134", "code": "public int run(String[] args) { try { copy(conf, Arguments.valueOf());  } catch (IllegalArgumentException e) { System(StringUtils(e) + err); return -1; } catch (DuplicationException ee) { unwrapped = eSystem.println(\"With failures,\"); System.err.println(\"Copy failed: \" + StringUtils.stringifyException(e)); return; } }", "n_tokens": 126, "n_pass": [289, 19, 17]}
{"time": "2023-09-24 01:14:21.874091", "score": "0.3003", "loss": "1.7738", "code": "public int run(String[] args) { try { copy(conf, Arguments.valueOf());  } catch (IllegalArgumentException e) { System(StringUtils(e) + err); return -1; } catch (DuplicationException ee) { unwrapped = eprintln(\"With failures,\"); System.err.println(\"Copy failed: \" + StringUtils.stringifyException(e)); return; } }", "n_tokens": 124, "n_pass": [290, 20, 18]}
{"time": "2023-09-24 01:14:25.552823", "score": "0.2592", "loss": "2.032", "code": "public int run(String[] args) { try { copy(conf, Arguments.valueOf());  } catch (IllegalArgumentException e) { System(StringUtils(e) + err); return -1; } catch (DuplicationException ee) { unwrapped = eprintln(\"With failures,\"); Systemprintln(\"Copy failed: \" + StringUtils.stringifyException(e)); return; } }", "n_tokens": 121, "n_pass": [297, 22, 19]}
{"time": "2023-09-24 01:14:27.234410", "score": "0.3419", "loss": "1.997", "code": "public int run(String[] args) { try { copy(conf, Arguments.valueOf());  } catch (IllegalArgumentException e) { System(StringUtils(e) + err); return -1; } catch (DuplicationException ee) { unwrapped = eprintln(\"With failures,\"); Systemprintln(\": \" + StringUtils.stringifyException(e)); return; } }", "n_tokens": 118, "n_pass": [299, 23, 20]}
{"time": "2023-09-24 01:14:28.993515", "score": "0.3501", "loss": "2.0198", "code": "public int run(String[] args) { try { copy(conf, Arguments.valueOf());  } catch (IllegalArgumentException e) { System(StringUtils(e) + err); return -1; } catch (DuplicationException ee) { unwrapped = eprintln(\"With failures,\"); Systemprintln(\": \" + (e)); return; } }", "n_tokens": 115, "n_pass": [302, 24, 21]}
{"time": "2023-09-24 01:14:30.739783", "score": "0.3501", "loss": "2.0198", "code": "public int run(String[] args) { try { copy(conf, Arguments.valueOf());  } catch (IllegalArgumentException e) { System(StringUtils(e) + err); return -1; } catch (DuplicationException ee) { unwrapped = eprintln(\"With failures,\"); Systemprintln(\": \" + (e)); } }", "n_tokens": 112, "n_pass": [305, 25, 22]}
{"time": "2023-09-24 01:14:32.491713", "score": "0.3501", "loss": "2.0198", "code": "int run(String[] args) { try { copy(conf, Arguments.valueOf());  } catch (IllegalArgumentException e) { System(StringUtils(e) + err); return -1; } catch (DuplicationException ee) { unwrapped = eprintln(\"With failures,\"); Systemprintln(\": \" + (e)); } }", "n_tokens": 110, "n_pass": [307, 26, 23]}
{"time": "2023-09-24 01:14:34.595427", "score": "0.3188", "loss": "2.2438", "code": "int run(String[] args) { try { copy(confArguments.valueOf());  } catch (IllegalArgumentException e) { System(StringUtils(e) + err); return -1; } catch (DuplicationException ee) { unwrapped = eprintln(\"With failures,\"); Systemprintln(\": \" + (e)); } }", "n_tokens": 108, "n_pass": [318, 27, 24]}
{"time": "2023-09-24 01:14:36.335859", "score": "0.2512", "loss": "2.4446", "code": "int run(String[] args) { try { copy(confvalueOf());  } catch (IllegalArgumentException e) { System(StringUtils(e) + err); return -1; } catch (DuplicationException ee) { unwrapped = eprintln(\"With failures,\"); Systemprintln(\": \" + (e)); } }", "n_tokens": 106, "n_pass": [319, 28, 25]}
{"time": "2023-09-24 01:14:38.037530", "score": "0.2228", "loss": "2.7425", "code": "int run(String[] args) { try { copy(confvalueOf());  } catch (IllegalArgumentException e) {(StringUtils(e) + err); return -1; } catch (DuplicationException ee) { unwrapped = eprintln(\"With failures,\"); Systemprintln(\": \" + (e)); } }", "n_tokens": 104, "n_pass": [329, 29, 26]}
{"time": "2023-09-24 01:14:41.977886", "score": "0.252", "loss": "2.3924", "code": "int run(String[] args) { try { copy(confvalueOf());  } catch (IllegalArgumentException e) {(StringUtils(e) + err); return -1; } catch (DuplicationException ee) { unwrapped =println(\"With failures,\"); Systemprintln(\": \" + (e)); } }", "n_tokens": 102, "n_pass": [347, 31, 27]}
{"time": "2023-09-24 01:14:45.738662", "score": "0.2813", "loss": "1.9645", "code": "int run(String[] args) { try { copy(confvalueOf());  } catch (IllegalArgumentException e) {(StringUtils(e) + err); return -1; } catch (DuplicationException ee) { unwrapped =println(\"With failures,\");println(\": \" + (e)); } }", "n_tokens": 100, "n_pass": [353, 33, 28]}
{"time": "2023-09-24 01:14:47.813515", "score": "0.2189", "loss": "2.6465", "code": "int run(String[] args) { try {(confvalueOf());  } catch (IllegalArgumentException e) {(StringUtils(e) + err); return -1; } catch (DuplicationException ee) { unwrapped =println(\"With failures,\");println(\": \" + (e)); } }", "n_tokens": 98, "n_pass": [368, 34, 29]}
{"time": "2023-09-24 01:15:04.756808", "score": "0.212", "loss": "2.8612", "code": "int run(String[] args) { try {(valueOf());  } catch (IllegalArgumentException e) {(StringUtils(e) + err); return -1; } catch (DuplicationException ee) { unwrapped =println(\"With failures,\");println(\": \" + (e)); } }", "n_tokens": 97, "n_pass": [508, 38, 30]}
{"time": "2023-09-24 01:15:06.645284", "score": "0.212", "loss": "2.8612", "code": "int run(String[] args) { try {(valueOf()); } catch (IllegalArgumentException e) {(StringUtils(e) + err); return -1; } catch (DuplicationException ee) { unwrapped =println(\"With failures,\");println(\": \" + (e)); } }", "n_tokens": 96, "n_pass": [514, 39, 31]}
{"time": "2023-09-24 01:15:08.294218", "score": "0.212", "loss": "2.8612", "code": "int run(String[] args) { try {(valueOf());} catch (IllegalArgumentException e) {(StringUtils(e) + err); return -1; } catch (DuplicationException ee) { unwrapped =println(\"With failures,\");println(\": \" + (e)); } }", "n_tokens": 95, "n_pass": [515, 40, 32]}
{"time": "2023-09-24 01:15:10.065238", "score": "0.212", "loss": "2.8612", "code": "int run(String[] args) { try {(valueOf());}catch (IllegalArgumentException e) {(StringUtils(e) + err); return -1; } catch (DuplicationException ee) { unwrapped =println(\"With failures,\");println(\": \" + (e)); } }", "n_tokens": 94, "n_pass": [517, 41, 33]}
{"time": "2023-09-24 01:15:11.833311", "score": "0.212", "loss": "2.8612", "code": "int run(String[] args) { try {(valueOf());}catch(IllegalArgumentException e) {(StringUtils(e) + err); return -1; } catch (DuplicationException ee) { unwrapped =println(\"With failures,\");println(\": \" + (e)); } }", "n_tokens": 93, "n_pass": [519, 42, 34]}
{"time": "2023-09-24 01:15:13.550103", "score": "0.212", "loss": "2.8612", "code": "int run(String[] args) { try {(valueOf());}catch(IllegalArgumentException e){(StringUtils(e) + err); return -1; } catch (DuplicationException ee) { unwrapped =println(\"With failures,\");println(\": \" + (e)); } }", "n_tokens": 92, "n_pass": [525, 43, 35]}
{"time": "2023-09-24 01:15:15.314651", "score": "0.2161", "loss": "2.7103", "code": "int run(String[] args) { try {(valueOf());}catch(IllegalArgumentException e){((e) + err); return -1; } catch (DuplicationException ee) { unwrapped =println(\"With failures,\");println(\": \" + (e)); } }", "n_tokens": 91, "n_pass": [528, 44, 36]}
{"time": "2023-09-24 01:15:17.009571", "score": "0.2161", "loss": "2.7103", "code": "int run(String[] args) { try {(valueOf());}catch(IllegalArgumentException e){((e)+ err); return -1; } catch (DuplicationException ee) { unwrapped =println(\"With failures,\");println(\": \" + (e)); } }", "n_tokens": 90, "n_pass": [532, 45, 37]}
{"time": "2023-09-24 01:15:18.857626", "score": "0.2423", "loss": "2.4838", "code": "int run(String[] args) { try {(valueOf());}catch(IllegalArgumentException e){((e) err); return -1; } catch (DuplicationException ee) { unwrapped =println(\"With failures,\");println(\": \" + (e)); } }", "n_tokens": 89, "n_pass": [533, 46, 38]}
{"time": "2023-09-24 01:15:20.773118", "score": "0.2423", "loss": "2.4838", "code": "int run(String[] args) { try {(valueOf());}catch(IllegalArgumentException e){((e)err); return -1; } catch (DuplicationException ee) { unwrapped =println(\"With failures,\");println(\": \" + (e)); } }", "n_tokens": 88, "n_pass": [534, 47, 39]}
{"time": "2023-09-24 01:15:24.330215", "score": "0.2423", "loss": "2.4838", "code": "int run(String[] args) { try {(valueOf());}catch(IllegalArgumentException e){((e)err);return -1; } catch (DuplicationException ee) { unwrapped =println(\"With failures,\");println(\": \" + (e)); } }", "n_tokens": 87, "n_pass": [538, 49, 40]}
{"time": "2023-09-24 01:15:26.411901", "score": "0.2423", "loss": "2.4838", "code": "int run(String[] args) { try {(valueOf());}catch(IllegalArgumentException e){((e)err);return-1; } catch (DuplicationException ee) { unwrapped =println(\"With failures,\");println(\": \" + (e)); } }", "n_tokens": 86, "n_pass": [540, 50, 41]}
{"time": "2023-09-24 01:15:29.890384", "score": "0.2423", "loss": "2.4838", "code": "int run(String[] args) { try {(valueOf());}catch(IllegalArgumentException e){((e)err);return-1;} catch (DuplicationException ee) { unwrapped =println(\"With failures,\");println(\": \" + (e)); } }", "n_tokens": 85, "n_pass": [544, 52, 42]}
{"time": "2023-09-24 01:15:31.670310", "score": "0.2423", "loss": "2.4838", "code": "int run(String[] args) { try {(valueOf());}catch(IllegalArgumentException e){((e)err);return-1;}catch (DuplicationException ee) { unwrapped =println(\"With failures,\");println(\": \" + (e)); } }", "n_tokens": 84, "n_pass": [546, 53, 43]}
{"time": "2023-09-24 01:15:33.346626", "score": "0.2423", "loss": "2.4838", "code": "int run(String[] args) { try {(valueOf());}catch(IllegalArgumentException e){((e)err);return-1;}catch(DuplicationException ee) { unwrapped =println(\"With failures,\");println(\": \" + (e)); } }", "n_tokens": 83, "n_pass": [548, 54, 44]}
{"time": "2023-09-24 01:15:35.114607", "score": "0.241", "loss": "2.567", "code": "int run(String[] args) { try {(valueOf());}catch(IllegalArgumentException e){((e)err);return-1;}catch(DuplicationException e) { unwrapped =println(\"With failures,\");println(\": \" + (e)); } }", "n_tokens": 82, "n_pass": [552, 55, 45]}
{"time": "2023-09-24 01:15:36.828959", "score": "0.241", "loss": "2.567", "code": "int run(String[] args) { try {(valueOf());}catch(IllegalArgumentException e){((e)err);return-1;}catch(DuplicationException e){ unwrapped =println(\"With failures,\");println(\": \" + (e)); } }", "n_tokens": 81, "n_pass": [555, 56, 46]}
{"time": "2023-09-24 01:15:38.600964", "score": "0.241", "loss": "2.567", "code": "int run(String[] args) { try {(valueOf());}catch(IllegalArgumentException e){((e)err);return-1;}catch(DuplicationException e){unwrapped =println(\"With failures,\");println(\": \" + (e)); } }", "n_tokens": 80, "n_pass": [557, 57, 47]}
{"time": "2023-09-24 01:15:40.342675", "score": "0.241", "loss": "2.567", "code": "int run(String[] args) { try {(valueOf());}catch(IllegalArgumentException e){((e)err);return-1;}catch(DuplicationException e){unwrapped=println(\"With failures,\");println(\": \" + (e)); } }", "n_tokens": 79, "n_pass": [559, 58, 48]}
{"time": "2023-09-24 01:15:43.829868", "score": "0.1932", "loss": "2.794", "code": "int run(String[] args) { try {(valueOf());}catch(IllegalArgumentException e){((e)err);return-1;}catch(DuplicationException e){unwrapped=(\"With failures,\");println(\": \" + (e)); } }", "n_tokens": 78, "n_pass": [561, 60, 49]}
{"time": "2023-09-24 01:15:51.140741", "score": "0.1932", "loss": "2.794", "code": "int run(String[] args) { try {(valueOf());}catch(IllegalArgumentException e){((e)err);return-1;}catch(DuplicationException e){unwrapped=(\"With failures\");println(\": \" + (e)); } }", "n_tokens": 77, "n_pass": [567, 64, 50]}
{"time": "2023-09-24 01:15:54.609365", "score": "0.2022", "loss": "2.8283", "code": "int run(String[] args) { try {(valueOf());}catch(IllegalArgumentException e){((e)err);return-1;}catch(DuplicationException e){unwrapped=(\"With failures\");println(\" \" + (e)); } }", "n_tokens": 76, "n_pass": [574, 66, 51]}
{"time": "2023-09-24 01:15:56.327427", "score": "0.2008", "loss": "2.7273", "code": "int run(String[] args) { try {(valueOf());}catch(IllegalArgumentException e){((e)err);return-1;}catch(DuplicationException e){unwrapped=(\"With failures\");println(\"\" + (e)); } }", "n_tokens": 75, "n_pass": [575, 67, 52]}
{"time": "2023-09-24 01:15:58.803241", "score": "0.2008", "loss": "2.7273", "code": "int run(String[]args) { try {(valueOf());}catch(IllegalArgumentException e){((e)err);return-1;}catch(DuplicationException e){unwrapped=(\"With failures\");println(\"\" + (e)); } }", "n_tokens": 74, "n_pass": [590, 68, 53]}
{"time": "2023-09-24 01:16:00.523415", "score": "0.2008", "loss": "2.7273", "code": "int run(String[]args){ try {(valueOf());}catch(IllegalArgumentException e){((e)err);return-1;}catch(DuplicationException e){unwrapped=(\"With failures\");println(\"\" + (e)); } }", "n_tokens": 73, "n_pass": [593, 69, 54]}
{"time": "2023-09-24 01:16:02.257939", "score": "0.2008", "loss": "2.7273", "code": "int run(String[]args){try {(valueOf());}catch(IllegalArgumentException e){((e)err);return-1;}catch(DuplicationException e){unwrapped=(\"With failures\");println(\"\" + (e)); } }", "n_tokens": 72, "n_pass": [595, 70, 55]}
{"time": "2023-09-24 01:16:03.960669", "score": "0.2008", "loss": "2.7273", "code": "int run(String[]args){try{(valueOf());}catch(IllegalArgumentException e){((e)err);return-1;}catch(DuplicationException e){unwrapped=(\"With failures\");println(\"\" + (e)); } }", "n_tokens": 71, "n_pass": [597, 71, 56]}
{"time": "2023-09-24 01:16:09.665413", "score": "0.2714", "loss": "2.2481", "code": "int run(String[]args){try{(valueOf());}catch(IllegalArgumentException e){((e)err);return-1;}catch(DuplicationException e){unwrapped(\"With failures\");println(\"\" + (e)); } }", "n_tokens": 70, "n_pass": [633, 74, 57]}
{"time": "2023-09-24 01:16:23.027407", "score": "0.2561", "loss": "2.4193", "code": "int run(String[]args){try{(valueOf());}catch(IllegalArgumentException e){((e)err);return-1;}catch(DuplicationException e){(\"With failures\");println(\"\" + (e)); } }", "n_tokens": 69, "n_pass": [697, 81, 58]}
{"time": "2023-09-24 01:16:24.754541", "score": "0.217", "loss": "2.4929", "code": "int run(String[]args){try{(valueOf());}catch(IllegalArgumentException e){((e)err);return-1;}catch(DuplicationException e){(\" failures\");println(\"\" + (e)); } }", "n_tokens": 68, "n_pass": [700, 82, 59]}
{"time": "2023-09-24 01:16:26.510141", "score": "0.217", "loss": "2.4929", "code": "int run(String[]args){try{(valueOf());}catch(IllegalArgumentException e){((e)err);return-1;}catch(DuplicationException e){(\"failures\");println(\"\" + (e)); } }", "n_tokens": 67, "n_pass": [701, 83, 60]}
{"time": "2023-09-24 01:16:38.174388", "score": "0.217", "loss": "2.4929", "code": "int run(String[]args){try{(valueOf());}catch(IllegalArgumentException e){((e)err);return-1;}catch(DuplicationException e){(\"failures\");println(\"\"+ (e)); } }", "n_tokens": 66, "n_pass": [775, 88, 61]}
{"time": "2023-09-24 01:16:40.032242", "score": "0.217", "loss": "2.4929", "code": "int run(String[]args){try{(valueOf());}catch(IllegalArgumentException e){((e)err);return-1;}catch(DuplicationException e){(\"failures\");println(\"\"+(e)); } }", "n_tokens": 65, "n_pass": [776, 89, 62]}
{"time": "2023-09-24 01:16:41.849670", "score": "0.217", "loss": "2.4929", "code": "int run(String[]args){try{(valueOf());}catch(IllegalArgumentException e){((e)err);return-1;}catch(DuplicationException e){(\"failures\");println(\"\"+(e));} }", "n_tokens": 64, "n_pass": [782, 90, 63]}
{"time": "2023-09-24 01:16:43.603171", "score": "0.217", "loss": "2.4929", "code": "int run(String[]args){try{(valueOf());}catch(IllegalArgumentException e){((e)err);return-1;}catch(DuplicationException e){(\"failures\");println(\"\"+(e));}}", "n_tokens": 63, "n_pass": [784, 91, 64]}

Minimal simplified code:
int run(String[]args){try{(valueOf());}catch(IllegalArgumentException e){((e)err);return-1;}catch(DuplicationException e){("failures");println(""+(e));}}

